var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","nodrop","result","NoDrop","UnicodeXID","lazy_static","scopeguard","always","try_from","try_into","borrow_mut","type_id","should_run","deref_mut","formatter","Strategy","ScopeGuard","either","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","Returns left value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","into_iter","ordering","option","into_inner","rollingadler32","RollingAdler32","borrow","typeid","Creates a new LZW decoder. ","decode_bytes","Tries to obtain and decode a code word from `bytes`.","Creates a new bit reader","read_bits","write_bits","DecoderEarlyChange","LsbReader","MsbReader","LsbWriter","MsbWriter","BitReader","BitWriter","Returns the RGBA color map calculated from the sample. ","NeuQuant","The requisite parameters for testing for approximate…","The left-hand side of the approximate equality comparison.","The right-hand side of the approximate equality comparison.","The tolerance to use when testing values that are close…","epsilon","relative","max_relative","Replace the epsilon value with the one specified.","max_ulps","Peform the equality comparison","Peform the inequality comparison","relative_eq","relative_ne","Predicate for testing the approximate equality of two…","Predicate for testing the approximate inequality of two…","Relative","ApproxEq","svg::node::element","AnimateColor","AnimateMotion","AnimateTransform","ClipPath","Definitions","Description","LinearGradient","MotionPath","Polyline","RadialGradient","Rectangle","TextPath","Create a node.","Append a node.","Assign an attribute.","svg::node","parser","An error.","string","to_string","to_owned","clone_into","svg::node::element::path","svg::node::element::tag","svg::parser","append","assign","polyline","position","command","description","Position","Animate","Ellipse","Pattern","Polygon","Parameters","A DEFLATE decoder/decompressor.","Decompress the given slice of DEFLATE compressed (with…","inflatewriter","from_zlib","deflatedecoderbuf","Create a new `DeflateDecoderbuf` that reads from a zlib…","Create a new `Deflatedecoderbuf` to read from a raw…","deflatedecoder","from_zlib_no_checksum","Resets the decompressor, and replaces the current inner…","Returns the total number of bytes output from this decoder.","reset_data","Resets the decoder, but continue to read from the same…","total_out","current_checksum","Returns the calculated checksum value of the currently…","inflatestream","Create a new stream for decoding deflate encoded data with…","InflateWriter","DeflateDecoderBuf","DeflateDecoder","InflateStream","GIF decoder","Extension","disposalmethod","Converts `u8` to `Option<Self>`","extension","decodingerror","Width of the image","Height of the image","extensiondata","set_param","streamingdecoder","Sets `value` as a parameter of `self`.","parameter","MemoryLimit","DisposalMethod","DecodingError","ColorOutput","Extensions","ExtensionData","StreamingDecoder","SetParameter","Parameter","capacityerror","utf8error","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arrayvec","partial_cmp","size_hint","next_back","intoiterator","arraystring","clone_from","Start index (inclusive)","End index (exclusive)","ArrayString","CapacityError","RangeArgument","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","fetch_or","crossbeam_utils","Pads and aligns a value to the length of a cache line.","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","crossbeam_utils::thread","atomiccell","cachepadded","default","shardedlock","unparker","waitgroup","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","IntoIter","proc_macro2","tokenstream","delimiter","set_span","Creates a new suffixed integer literal with the specified…","literal","Creates a new unsuffixed integer literal with the…","proc_macro2::token_stream","intoiter","tokentree","from_iter","TokenTree","Delimiter","TokenStream","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","truncate","sigaction","statvfs64","if_nameindex","ipv6_mreq","itimerval","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","siginfo_t","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","in6_addr","sigset_t","timezone","fpos64_t","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_u128","read_uint","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_i128","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","read_u48","Reads an unsigned 48 bit integer from the underlying reader.","read_i48","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","read_int","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","read_i8_into","Reads a sequence of signed 8 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","pusherror","capacity","poperror","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","PushError","ArrayQueue","is_empty","For use by `ToTokens` implementations.","into_token_stream","Convert `self` directly into a `TokenStream` object.","TokenStreamExt","partialord","num_traits","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","is_pinned","collector","Stores a function so that it can be executed at some point…","into_usize","from_usize","Returns a new pointer pointing to the tagged pointer `data`.","CompareAndSetError","Collector","LocalHandle","CompareAndSetOrdering","load_consume","parseerror","Returns the current value of a high-resolution performance…","duration","checked_add","checked_sub","outofrangeerror","stdduration","precisetime","Returns a TmFmt that outputs according to the `asctime`…","Formats the time according to the format string.","steadytime","The resulting Tm is in UTC.","ParseError","PreciseTime","SteadyTime","OutOfRangeError","compressionoptions","Compress the given slice of bytes with DEFLATE…","Returns a set of compression settings that makes the…","deflate::write","When the encoder is dropped, output the rest of the data.","compression","specialoptions","matchingtype","Flush the encoder.","Encode all pending data to the contained writer, consume…","Resets the encoder (except the compression options),…","CompressionOptions","SpecialOptions","Compression","MatchingType","DeflateEncoder","ZlibEncoder","Japanese","ChineseTrad","Microsoft","fontinfo","vertextype","hmetrics","fontnameiter","platformid","unicodeeid","microsofteid","microsoftlang","platformencodinglanguageid","vmetrics","VertexType","PlatformId","UnicodeEid","MicrosoftEid","MicrosoftLang","PlatformEncodingLanguageId","FontNameIter","integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","Equality comparisons between two numbers using both the…","abs_diff_eq","abs_diff_ne","Approximate equality using both the absolute difference…","Approximate inequality using both the absolute difference…","The inverse of `ApproxEq::abs_diff_eq`.","The inverse of `ApproxEq::relative_eq`.","The inverse of `ApproxEq::ulps_eq`.","AbsDiffEq","RelativeEq","A wrapper around Floats providing an implementation of Ord…","An error indicating an attempt to construct NotNan from a…","floatisnan","Get the value out.","parsenotnanerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","orderedfloat","from_isize","toprimitive","from_str_radix","is_positive","is_negative","OrderedFloat","ParseNotNanError","FloatIsNan","from_str","Returns `true` if the deque is empty.","A word of Rust code, which may be a keyword or legal…","paren_token","pub_token","bracket_token","colon_token","eq_token","lifetimes","Returned by `Generics::split_for_impl`.","brace_token","semi_token","bang_token","const_token","lifetime","mutability","lt_token","gt_token","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A box expression: `box f`.","A placement expression: `place <- value`.","A slice literal expression: `[a, b, c, d]`.","A function call expression: `invoke(a, b)`.","A method call expression: `x.foo::<T>(a, b)`.","A tuple expression: `(a, b, c, d)`.","A binary operation: `a + b`, `a * b`.","A unary operation: `!x`, `*x`.","A literal in place of an expression: `1`, `\"foo\"`.","A cast expression: `foo as f64`.","A type ascription expression: `foo: f64`.","An `if` expression with an optional `else` block: `if expr…","An `if let` expression with an optional `else` block: `if…","A while loop: `while expr { ... }`.","A while-let loop: `while let pat = expr { ... }`.","A for loop: `for pat in expr { ... }`.","Conditionless loop: `loop { ... }`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A closure expression: `|a, b| a + b`.","An unsafe block: `unsafe { ... }`.","A blocked scope: `{ ... }`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","Access of a named struct field (`obj.k`) or unnamed tuple…","A square bracketed indexing expression: `vector[2]`.","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A path like `std::mem::replace` possibly containing…","A referencing operation: `&a` or `&mut a`.","A `break`, with an optional label to break and an optional…","A `continue`, with an optional label.","A `return`, with an optional value to be returned.","A macro invocation expression: `format!(\"{}\", q)`.","A struct literal expression: `Point { x: 1, y: 1 }`.","An array literal constructed from one repeated element:…","A parenthesized expression: `(a + b)`.","An expression contained within invisible delimiters.","A try-expression: `expr?`.","A catch expression: `do catch { ... }`.","A yield expression: `yield expr`.","Tokens in expression position not interpreted by Syn.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","Lifetime","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","A raw token literal not interpreted by Syn, possibly…","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","A tagged union input to a `proc_macro_derive` macro.","A dynamically sized slice type: `[T]`.","A fixed size array type: `[T; n]`.","A raw pointer type: `*const T` or `*mut T`.","Reference","A reference type: `&'a T` or `&'a mut T`.","A bare function type: `fn(usize) -> bool`.","The never type: `!`.","A tuple type: `(A, B, C, String)`.","A path like `std::slice::Iter`, optionally qualified with…","A trait object type `Bound1 + Bound2 + Bound3` where…","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","A parenthesized type equivalent to the inner type.","A type contained within invisible delimiters.","Indication that a type should be inferred by the compiler:…","A macro in the type position.","Verbatim","Tokens in type position not interpreted by Syn.","surround","presult","intsuffix","floatsuffix","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","token_stream","Punctuated","punctuated","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","Parse zero or more syntax tree nodes with punctuation in…","Parse one or more syntax tree nodes with punctuation in…","Parse zero or more syntax tree nodes using the given…","Parse one or more syntax tree nodes using the given parser…","syn::synom","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","parse_str","Parse a string of Rust code into the chosen syntax tree…","A trait that can provide the `Span` of the complete…","whereclause","Syntax tree traversal to walk a shared borrow of a syntax…","visit_abi","visit_angle_bracketed_generic_arguments","anglebracketedgenericarguments","visit_attr_style","attrstyle","visit_attribute","attribute","visit_bare_fn_arg","barefnarg","visit_bare_fn_arg_name","barefnargname","visit_bin_op","visit_binding","visit_bound_lifetimes","boundlifetimes","visit_const_param","constparam","visit_data","visit_data_enum","visit_data_struct","datastruct","visit_data_union","dataunion","visit_derive_input","deriveinput","visit_expr","visit_expr_binary","exprbinary","visit_expr_call","visit_expr_cast","visit_expr_field","exprfield","visit_expr_index","exprindex","visit_expr_lit","visit_expr_paren","exprparen","visit_expr_path","visit_expr_unary","exprunary","visit_expr_verbatim","exprverbatim","visit_field","visit_fields","visit_fields_named","fieldsnamed","visit_fields_unnamed","fieldsunnamed","visit_generic_argument","genericargument","visit_generic_param","genericparam","visit_generics","generics","visit_ident","visit_index","visit_lifetime","visit_lifetime_def","lifetimedef","visit_lit","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","litbytestr","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_lit_verbatim","litverbatim","visit_macro","visit_macro_delimiter","macrodelimiter","visit_member","visit_meta","visit_meta_list","visit_meta_name_value","metanamevalue","visit_nested_meta","nestedmeta","visit_parenthesized_generic_arguments","parenthesizedgenericarguments","visit_path","visit_path_arguments","patharguments","visit_path_segment","pathsegment","visit_predicate_eq","predicateeq","visit_predicate_lifetime","predicatelifetime","visit_predicate_type","predicatetype","visit_qself","visit_return_type","returntype","visit_span","visit_trait_bound","traitbound","visit_trait_bound_modifier","traitboundmodifier","visit_type","visit_type_array","typearray","visit_type_bare_fn","typebarefn","visit_type_group","typegroup","visit_type_impl_trait","typeimpltrait","visit_type_infer","typeinfer","visit_type_macro","typemacro","visit_type_never","typenever","visit_type_param","typeparam","visit_type_param_bound","typeparambound","visit_type_paren","typeparen","visit_type_path","visit_type_ptr","visit_type_reference","typereference","visit_type_slice","typeslice","visit_type_trait_object","typetraitobject","visit_type_tuple","typetuple","visit_type_verbatim","typeverbatim","visit_un_op","visit_variant","visit_vis_crate","visit_vis_public","vispublic","visit_vis_restricted","visrestricted","visit_visibility","visibility","visit_where_clause","visit_where_predicate","wherepredicate","Execute a parser only if a condition is met, otherwise…","syn::token","syn::buffer","syn::punctuated","to_tokens","underscore","apostrophe","parse_any","dotdoteq","question","fatarrow","continue","metalist","viscrate","exprcall","exprcast","exprpath","turbofish","litfloat","dataenum","typepath","exprinplace","exprarray","exprmethodcall","exprtuple","exprtype","expriflet","exprwhile","exprwhilelet","exprforloop","exprloop","exprmatch","exprclosure","exprunsafe","exprblock","exprassign","exprassignop","exprrange","exprreference","exprbreak","exprcontinue","exprreturn","exprmacro","exprstruct","exprrepeat","exprgroup","exprcatch","expryield","implgenerics","typegenerics","strstyle","pathtokens","exprlit","typeptr","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","syn::visit","binding","variant","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","ExprVerbatim","BoundLifetimes","LifetimeDef","PredicateEq","PredicateLifetime","PredicateType","WhereClause","LitVerbatim","DeriveInput","TypeImplTrait","TypeReference","TypeTraitObject","TypeVerbatim","AngleBracketedGenericArguments","ParenthesizedGenericArguments","PathSegment","GenericParam","TraitBoundModifier","TypeParamBound","WherePredicate","FloatSuffix","MacroDelimiter","BareFnArgName","GenericArgument","PathArguments","TypeGenerics","TokenBuffer","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprInPlace","ExprMethodCall","ExprReference","ExprWhileLet","ImplGenerics","rangeinclusive","rangestepinclusive","RangeInclusive","RangeStepInclusive","parseratioerror","from_i128","from_u128","from_i64","from_u64","from_f32","from_f64","ParseRatioError","checked_mul","checked_div","Attributes tagged on the field.","dot2_token","comma_token","defaultness","type_token","existential_token","crate_token","static_token","trait_token","colon2_token","struct_token","union_token","extern_token","group_token","underscore_token","and_token","leading_colon","A `let` guard: `let Some(x) = opt`.","An async block: `async { ... }`.","A try block: `try { ... }`.","A pattern that matches any value: `_`.","A pattern that binds a new variable: `ref mut binding @…","A struct or struct variant pattern: `Variant { x, y, .. }`.","A tuple struct or tuple variant pattern: `Variant(x, y,…","A path pattern like `Color::Red`, optionally qualified…","A tuple pattern: `(a, b)`.","A box pattern: `box v`.","A reference pattern: `&mut (first, second)`.","A literal pattern: `0`.","A range pattern: `1..=2`.","A dynamically sized slice pattern: `[a, b, i.., y, z]`.","A macro in expression position.","Tokens in pattern position not interpreted by Syn.","Self captured by reference in a function signature:…","Self captured by value in a function signature: `self` or…","An explicitly typed pattern captured by a function…","A foreign function in an `extern` block.","A foreign static item in an `extern` block: `static ext:…","A foreign type in an `extern` block: `type void`.","A macro invocation within an extern block.","Tokens in an `extern` block not interpreted by Syn.","An associated constant within an impl block.","A method within an impl block.","An associated type within an impl block.","An existential type within an impl block.","A macro invocation within an impl block.","Tokens within an impl block not interpreted by Syn.","An `extern crate` item: `extern crate serde`.","A use declaration: `use std::collections::HashMap`.","A static item: `static BIKE: Shed = Shed(42)`.","A constant item: `const MAX: u16 = 65535`.","A free-standing function: `fn process(n: usize) ->…","A module or module declaration: `mod m` or `mod m { ... }`.","A block of foreign items: `extern \"C\" { ... }`.","A type alias: `type Result<T> = std::result::Result<T,…","Existential","An existential type: `existential type Iter: Iterator<Item…","A struct definition: `struct Foo<A> { x: A }`.","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.","A union definition: `union Foo<A, B> { x: A, y: B }`.","A trait definition: `pub trait Iterator { ... }`.","A trait alias: `pub trait SharableIterator = Iterator +…","An impl block providing trait or associated items:…","A macro invocation, which includes `macro_rules!`…","A 2.0-style declarative macro introduced by the `macro`…","Tokens forming an item not interpreted by Syn.","An associated constant within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A macro invocation within the definition of a trait.","Tokens within the definition of a trait not interpreted by…","A path prefix of imports in a `use` item: `std::...`.","An identifier imported by a `use` item: `HashMap`.","An renamed identifier imported by a `use` item: `HashMap…","A glob import in a `use` item: `*`.","A braced group of imports in a `use` item: `{A, B, C}`.","A type argument.","An associated type bound: `Iterator<Item: Display>`.","A const expression. Must be inside of a block.","parsestream","visit_arg_captured","argcaptured","visit_arg_self","visit_arg_self_ref","visit_block","visit_constraint","visit_expr_array","visit_expr_assign","visit_expr_assign_op","visit_expr_async","visit_expr_block","visit_expr_box","visit_expr_break","visit_expr_closure","visit_expr_continue","visit_expr_for_loop","visit_expr_group","visit_expr_if","visit_expr_in_place","visit_expr_let","visit_expr_loop","visit_expr_macro","visit_expr_match","visit_expr_method_call","visit_expr_range","visit_expr_reference","visit_expr_repeat","visit_expr_return","visit_expr_struct","visit_expr_try","visit_expr_try_block","exprtryblock","visit_expr_tuple","visit_expr_type","visit_expr_unsafe","visit_expr_while","visit_expr_yield","visit_field_pat","visit_field_value","visit_fn_arg","visit_fn_decl","visit_foreign_item","foreignitem","visit_foreign_item_fn","foreignitemfn","visit_foreign_item_macro","foreignitemmacro","visit_foreign_item_static","foreignitemstatic","visit_foreign_item_type","foreignitemtype","visit_foreign_item_verbatim","foreignitemverbatim","visit_generic_method_argument","genericmethodargument","visit_impl_item","visit_impl_item_const","implitemconst","visit_impl_item_existential","implitemexistential","visit_impl_item_macro","implitemmacro","visit_impl_item_method","implitemmethod","visit_impl_item_type","implitemtype","visit_impl_item_verbatim","implitemverbatim","visit_item_const","visit_item_enum","visit_item_existential","itemexistential","visit_item_extern_crate","itemexterncrate","visit_item_fn","visit_item_foreign_mod","itemforeignmod","visit_item_impl","visit_item_macro","visit_item_macro2","visit_item_mod","visit_item_static","visit_item_struct","visit_item_trait","visit_item_trait_alias","itemtraitalias","visit_item_type","visit_item_union","visit_item_use","visit_item_verbatim","itemverbatim","visit_label","visit_local","visit_method_sig","visit_method_turbofish","methodturbofish","visit_pat_box","visit_pat_ident","visit_pat_lit","visit_pat_macro","visit_pat_path","visit_pat_range","visit_pat_ref","visit_pat_slice","visit_pat_struct","visit_pat_tuple","visit_pat_tuple_struct","pattuplestruct","visit_pat_verbatim","patverbatim","visit_pat_wild","visit_range_limits","rangelimits","visit_trait_item","visit_trait_item_const","traititemconst","visit_trait_item_macro","traititemmacro","visit_trait_item_method","traititemmethod","visit_trait_item_type","traititemtype","visit_trait_item_verbatim","traititemverbatim","visit_use_glob","visit_use_group","visit_use_name","visit_use_path","visit_use_rename","visit_use_tree","Error returned when a Syn parser cannot parse the input…","parse_terminated","Parses zero or more occurrences of `T` separated by…","Triggers an error at the current position of the parse…","The result of a Syn parser.","syn::parse","fieldvalue","itemstatic","itemstruct","itemmacro2","argselfref","constraint","existential","exprasync","patstruct","itemconst","itemunion","itemtrait","itemmacro","userename","traititem","methodsig","implitem","visit_file","visit_item","itemenum","itemimpl","itemtype","patident","patmacro","patrange","patslice","pattuple","visit_stmt","usegroup","Looks at the next token in the parse stream to determine…","ExprTryBlock","MethodTurbofish","PatTupleStruct","PatVerbatim","ArgCaptured","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignItemVerbatim","ImplItemConst","ImplItemExistential","ImplItemMacro","ImplItemMethod","ImplItemType","ImplItemVerbatim","ItemExistential","ItemExternCrate","ItemForeignMod","ItemTraitAlias","ItemVerbatim","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitItemVerbatim","Constraint","GenericMethodArgument","RangeLimits","ForeignItem","Speculative","ParseBuffer","Makes a new `FixedOffset` for the Eastern Hemisphere with…","fixedoffset","Makes a new `FixedOffset` for the Western Hemisphere with…","Returns a `Date` which corresponds to the current date.","Returns a `DateTime` which corresponds to the current date.","Makes a new `Date` from year, month, day and the current…","Makes a new `Date` from year, day of year (DOY or…","localresult","Makes a new `Date` from ISO week date (year and week…","Makes a new `DateTime` from the number of non-leap seconds…","Makes a new `DateTime` from the number of non-leap…","datetime","naivedatetime","naivedate","Makes a new `DateTime` from the current date, hour,…","Makes a new `NaiveDate` from the calendar date (year,…","Makes a new `NaiveDate` from the ordinal date (year and…","Makes a new `NaiveDate` from the ISO week date (year, week…","Makes a new `NaiveDate` from the number of days since…","Parses a string with the specified format string and…","parseresult","and_hms_opt","Makes a new `NaiveDateTime` from the current date, hour,…","and_hms_milli_opt","and_hms_micro_opt","and_hms_nano_opt","Makes a new `NaiveDate` for the next calendar date.","Makes a new `NaiveDate` for the previous calendar date.","oldduration","delayedformat","strftimeitems","Makes a new `NaiveTime` from hour, minute and second.","naivetime","Makes a new `NaiveTime` from hour, minute, second and…","Makes a new `NaiveTime` from the number of seconds since…","parse_from_str","signed_duration_since","format_with_items","Makes a new `NaiveDateTime` corresponding to a UTC date…","timestamp_millis","timestamp_nanos","checked_add_signed","checked_sub_signed","Formats the combined date and time with the specified…","Makes a new `DateTime` from the current date and given…","Makes a new `DateTime` from the current date, hour, minute…","and_hms_milli","and_hms_micro","and_hms_nano","Makes a new `Date` for the next date.","Makes a new `Date` for the prior date.","Formats the date with the specified format string. See the…","Retrieves a date component.","timestamp_subsec_millis","timestamp_subsec_micros","timestamp_subsec_nanos","Retrieves an associated offset from UTC.","Retrieves an associated time zone.","with_timezone","Changes the associated time zone. This does not change the…","Adds given `Duration` to the current date and time.","Subtracts given `Duration` from the current date and time.","naive_local","timestamp","Week number, where the week 1 starts at the first Sunday…","Week number, where the week 1 starts at the first Monday…","The number of non-leap seconds since the midnight UTC on…","Offset from the local time to UTC (`+09:00` or `-04:00` or…","Internal uses only.","Returns a parsed timezone-aware date and time out of given…","chrono::format","Makes a new `DelayedFormat` value out of local date and…","chrono::offset","chrono::naive","chrono::format::strftime","from_offset","offset_from_local_date","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_datetime","from_local_date","from_local_datetime","from_utc_date","from_utc_datetime","Returns the year number in the calendar date.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of week.","with_month0","Makes a new `NaiveDate` with the month number (starting…","Makes a new `NaiveDate` with the day of month (starting…","with_ordinal","with_ordinal0","Makes a new `NaiveDate` with the day of year (starting…","with_month","Makes a new `NaiveDateTime` with the month number…","Makes a new `NaiveDateTime` with the day of month…","Makes a new `NaiveDateTime` with the day of year (starting…","with_year","with_day0","Returns the hour number from 0 to 23.","Returns the minute number from 0 to 59.","Returns the second number from 0 to 59.","nanosecond","Returns the number of nanoseconds since the whole non-leap…","with_minute","with_second","with_nanosecond","num_seconds_from_midnight","Returns the number of non-leap seconds past the last…","with_hour","secondsformat","internalfixed","parseweekdayerror","Convert this `DateTime<Utc>` instance into a…","Convert this `DateTime<FixedOffset>` instance into a…","Convert this `DateTime<Local>` instance into a…","SecondsFormat","LocalResult","FixedOffset","NaiveDateTime","StrftimeItems","DelayedFormat","SubsecRound","ParseWeekdayError","InternalNumeric","InternalFixed","ISO 8601 time duration with nanosecond precision. This…","Makes a new `Duration` with given number of weeks.…","Makes a new `Duration` with given number of days.…","Makes a new `Duration` with given number of hours.…","Makes a new `Duration` with given number of minutes.…","Makes a new `Duration` with given number of seconds.…","milliseconds","Makes a new `Duration` with given number of milliseconds.","microseconds","Makes a new `Duration` with given number of microseconds.","nanoseconds","Makes a new `Duration` with given number of nanoseconds.","Runs a closure, returning the duration of time it took to…","Returns the total number of whole weeks in the duration.","Returns the total number of whole days in the duration.","Returns the total number of whole hours in the duration.","num_minutes","Returns the total number of whole minutes in the duration.","num_seconds","Returns the total number of whole seconds in the duration.","num_milliseconds","Returns the total number of whole milliseconds in the…","num_microseconds","Returns the total number of whole microseconds in the…","num_nanoseconds","Returns the total number of whole nanoseconds in the…","Add two durations, returning `None` if overflow occurred.","Subtract two durations, returning `None` if overflow…","The minimum possible `Duration`: `i64::MIN` milliseconds.","The maximum possible `Duration`: `i64::MAX` milliseconds.","A duration where the stored seconds and nanoseconds are…","Returns `true` if the duration equals `Duration::zero()`.","Creates a `time::Duration` object from `std::time::Duration`","Creates a `std::time::Duration` object from `time::Duration`","sharedbytes","fontcollection","The glyph identifier for this glyph.","The font to which this glyph belongs. If the glyph is a…","scaledglyph","standalone","Constructs a glyph that owns its data from this glyph.…","positionedglyph","into_glyph_id","codepoint","SharedGlyphData","SharedBytes","IntoGlyphId","FontCollection","ScaledGlyph","PositionedGlyph","IntoFontsIter","advance_width","left_side_bearing","units_per_em","Represents a fork-join scope which can be used to spawn…","Fires off a task into the Rayon threadpool in the \"static\"…","Spawns a job into the fork-join scope `self`. This job…","configuration","current_num_threads","current_thread_index","current_thread_has_pending_tasks","Creates a scope that executes within this thread-pool.…","spawn_fifo","Spawns an asynchronous task in this thread-pool. This task…","threadpool","threadpoolbuilderror","customspawn","stack_size","Deprecated in favor of `ThreadPoolBuilder::build`.","thread_name","num_threads","panic_handler","breadth_first","start_handler","exit_handler","ThreadBuilder","ThreadPoolBuilder","Configuration","ThreadPoolBuildError","struct__FcMatrix","struct__FcObjectType","struct__FcConstant","struct__FcValue","struct__FcFontSet","struct__FcObjectSet","PixelDimensions","AnimationControl","FrameControl","chunktype","buffer_size","Returns the next processed row of the image","Returns the number of bytes required to hold a…","encodingerror","u8 -> Self. Temporary solution until Rust provides a…","animation_control","animationcontrol","frame_control","framecontrol","Returns the number of bytes needed for one deinterlaced…","transformations","filtertype","colortype","EncodingError","Transformations","HasParameters","fontproperty","fontpropertybuilder","FontProperty","FontPropertyBuilder","PhotometricInterpretation","PlanarConfiguration","tiffresult","tiff::decoder","fromutf8error","Tries to retrieve a tag and convert it to the desired type.","decodingresult","tiff::decoder::ifd","photometricinterpretation","compressionmethod","planarconfiguration","tiffformaterror","tiffunsupportederror","TiffFormatError","TiffUnsupportedError","ColorType","DecodingResult","CompressionMethod","rayon::collections","This module contains the parallel iterator types for…","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","The enum `Either` with variants `Left` and `Right` is a…","A value of type `L`.","A value of type `R`.","Iterate the producer, feeding each element to `folder`,…","rayon::iter","Converts `self` into a parallel iterator.","Reduces the items in the iterator into one item using…","Reduces the items in the iterator into one item using a…","Applies the given predicate to the items in the parallel…","Searches for some item in the parallel iterator that…","intersperse","Internal method used to define the behavior of this…","Interleave elements of this iterator and the other given…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","ParallelBridge","Conversion trait to convert an `Iterator` to a…","Create a bridge from this type to a `ParallelIterator`.","range_inclusive","Returns a parallel iterator over at most `chunk_size`…","Returns a parallel iterator over substrings that match a…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::range_inclusive","rayon::result","rayon::slice","defaultspawn","drive_unindexed","rayon::str","rayon::vec","with_producer","consumer","iterbridge","tryfoldwith","interleave","interleaveshortest","charindices","encodeutf16","splitterminator","splitwhitespace","matchindices","threadpoolbuilder","Return true if the value is the `Left` variant.","Return true if the value is the `Right` variant.","Convert the left side of `Either<L, R>` to an `Option<L>`.","Convert the right side of `Either<L, R>` to an `Option<R>`.","Convert `&Either<L, R>` to `Either<&L, &R>`.","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","Convert `Either<L, R>` to `Either<R, L>`.","Apply one of two functions depending on contents, unifying…","either_with","Like `either`, but provide some context to whichever of…","left_and_then","right_and_then","Convert the inner value to an iterator.","Return left value or given value","left_or_default","Return left or a default","left_or_else","Return right value or given value","right_or_default","Return right or a default","right_or_else","factor_first","factor_second","Extract the value of an either over two equivalent types.","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","TryFoldWith","InterleaveShortest","Intersperse","CharIndices","EncodeUtf16","SplitTerminator","SplitWhitespace","MatchIndices","Thread builder used for customization via…","ThreadPool","Represents a user created [thread-pool].","Error when initializing a thread pool.","Used to create a new [`ThreadPool`] or to configure the…","Provides the calling context to a closure called by…","Takes two closures and potentially runs them in parallel.…","join_context","Identical to `join`, except that the closures have a…","Create a \"fork-join\" scope `s` and invokes the closure…","scope_fifo","Create a \"fork-join\" scope `s` with FIFO order, and…","If called from a Rayon worker thread, returns the index of…","Returns the number of threads in the current registry. If…","Get the index of this thread in the pool, within…","Get the string that was specified by…","Get the value that was specified by…","Execute the main loop for this thread. This will not…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates and returns a valid rayon thread pool builder, but…","Create a new `ThreadPool` initialized using this…","build_global","Initializes the global thread pool. This initialization is…","build_scoped","Create a scoped `ThreadPool` initialized using this…","spawn_handler","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the…","Set the number of threads to be used in the rayon…","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","(DEPRECATED) Suggest to worker threads that they execute…","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Returns `true` if the closure was called from a different…","ScopeFifo","FnContext","The hue of the color, in degrees. Decides if it's red,…","The colorfulness of the color. 0.0 gives gray scale colors…","The white point and RGB primaries this color is adapted…","L* is the lightness of the color. 0.0 gives absolute black…","white_point","The white point associated with the color's illuminant and…","CIE L*C*h°, a polar version of CIE L*a*b*.","The transparency component. 0.0 is fully transparent and…","Multiply `self` or `other` if other is dark, or screen…","into_components","from_components","lumastandard","into_format","Convert into another component type.","from_format","Convert from another component type.","component","into_linear","from_linear","into_encoding","from_encoding","palette::luma","Linear luminance.","The kind of RGB standard. sRGB is the default.","Convert the color to a different encoding.","rgbstandard","Convert the color to a different encoding with transparency.","palette::rgb","whitepoint","CIE Yxy and transparency with white point D65.","Convert to a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.","Convert from a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.","from_degrees","Create a new hue from degrees.","from_radians","Create a new hue from radians, instead of degrees.","Get the hue as degrees, in the range `(-180, 180]`.","Convert the hue to radians, in the range `(-π, π]`.","to_positive_degrees","Convert the hue to positive degrees, in the range `[0,…","to_positive_radians","Convert the hue to positive radians, in the range `[0, 2π)`.","to_raw_degrees","Get the internal representation, without normalizing it.","to_raw_radians","Get the internal representation as radians, without…","Convert the source color to the destination color using…","transformmatrix","palette::encoding","Gamma encoding.","TransferFn","CIE D series standard illuminant - D50","CIE D series standard illuminant - D55","CIE D series standard illuminant - D65","CIE D series standard illuminant - D75","WhitePoint","A trait for colors that can be blended together.","The core color type. Typically `Self` for color types…","into_premultiplied","Convert the color to premultiplied alpha.","from_premultiplied","Convert the color from premultiplied alpha.","palette::blend","Blend self, as the source color, with `destination`, using…","Place `self` over `other`. This is the good old common…","Results in the parts of `self` that overlaps the visible…","Results in the parts of `self` that lies outside the…","Place `self` over only the visible parts of `other`.","Results in either `self` or `other`, where they do not…","Add `self` and `other`. This uses the alpha component to…","Multiply `self` with `other`. This uses the alpha…","Make a color which is at least as light as `self` or…","Return the darkest parts of `self` and `other`.","Return the lightest parts of `self` and `other`.","Lighten `other` to reflect `self`. Results in `other` if…","Darken `other` to reflect `self`. Results in `other` if…","Lighten `other` if `self` is light, or darken `other` as…","Return the absolute difference between `self` and `other`.…","Similar to `difference`, but appears to result in a lower…","Linear RGB.","CIE L*a*b*.","CIE L*C*h°.","Linear HSV.","Linear HSL.","Linear HWB.","adapt_into_using","adapt_from_using","prealpha","palette::gradient","palette::chromatic_adaptation","palette::encoding::srgb","palette::encoding::gamma","palette::encoding::linear","palette::white_point","get_cone_response","coneresponsematrices","rgbspace","from_xyz","from_luma","into_luma","into_xyz","into_yxy","into_lab","into_lch","into_rgb","into_hsl","into_hsv","clamp_self","is_valid","shift_hue","with_hue","component_wise","component_wise_self","Convert to a raw pixel format.","equations","parameters","d50degree10","d55degree10","d65degree10","d75degree10","default_epsilon","default_max_relative","default_max_ulps","hard_light","soft_light","difference","Convert from Yxy color space","Convert from L*a*b* color space","Convert from L*C*h° color space","from_rgb","Convert from RGB color space","Convert from HSL color space","Convert from HSV color space","Convert from HWB color space","Convert from Luma","Convert into Yxy color space","Convert into L*a*b* color space","Convert into L*C*h° color space","Convert into RGB color space.","Convert into HSL color space","Convert into HSV color space","Convert into HWB color space","Convert into Luma","palette::encoding::pixel","The guaranteed number of channels in the sequence.","BlendFunction","LumaStandard","RgbStandard","ConeResponseMatrices","TransformMatrix","RawPixelSized","ComponentWise","D50Degree10","D55Degree10","D65Degree10","D75Degree10","pixelformat","imageinfo","PixelFormat","UnsupportedFeature","An Image in PNG Format","An Image in GIF Format","An Image in ICO Format","An Image in BMP Format","primitive","imageformat","imageresult","dynamicimage","Create a new image from a byte slice","image::math","Available Sampling Filters","Nearest Neighbor","Linear Filter","Cubic Filter","Gaussian Filter","Lanczos with window 3","imagebuffer","Add this to an index to get to the next sample in…","strides_cwh","Get the strides for indexing matrix-like `[(c, w, h)]`.","Get the dimensions `(channels, width, height)`.","Tuple of bounds in the order of coordinate inputs.","flatsamples","as_mut_slice","View the samples as a slice.","Get the minimum length of a buffer such that all in-bounds…","Check if a buffer of length `len` is large enough.","has_aliased_samples","If there are any samples aliasing each other.","Check if a buffer fulfills the requirements of a normal…","Check that the pixel and the channel index are in bounds.","Resolve the index of a particular sample.","index_ignoring_bounds","in_bounds_index","Get an index provided it is inbouds.","Shrink the image to the minimum of current and given…","get_mut_sample","min_length","image_slice","Return the portion of the buffer that holds sample values.","image_mut_slice","Take out the sample buffer.","Get a reference on the inner buffer.","get_sample","shrink_to","Shrink the inner image.","Disposal method","StreamingDecoder is not required to take any action.","Do not dispose.","Restore to background color.","Restore to previous.","A GIF frame","Frame delay in units of 10 ms.","Disposal method.","transparent","Transparent index (if available).","needs_user_input","True if the frame needs user input to be displayed.","Offset from the top border of the canvas.","Offset from the left border of the canvas.","Width of the frame.","Height of the frame.","True if the image is interlaced.","Frame local color palette if available.","Buffer containing the image data. Only indices unless…","GIF encoder.","hdradapter","hdrdecoder","rgbe8pixel","Create a new decoder that decodes from the stream `r`","Create a new encoder that writes its output to `w`.","Encodes the image `image` that has dimensions `width` and…","jpegdecoder","Create a new encoder that writes its output to `w`","jpegencoder","Height of the image file","Width of the image file","Binary or Ascii encoded file","Maximum sample value within the image","pnmsubtype","bitmapheader","graymapheader","pixmapheader","arbitraryheader","imageerror","tiffdecoder","webpdecoder","Contructs a new frame","Returns the image buffer","rgbaimage","Enumerates over the pixels of the image. The iterator…","Return a mutable reference to an 8bit RGBA image","grayimage","grayalphaimage","as_flat_samples","Return a view on the raw sample buffer.","Resize this image using the specified filter algorithm.…","Hue rotate the supplied image. `value` is the degrees to…","imageoutputformat","Saves the buffer to a file at the path specified.","get_pixel_mut","Gets a reference to the mutable pixel at location `(x, y)`","Underlying image type. This is mainly used by SubImages in…","The width and height of this image.","The width of this image.","The height of this image.","Returns the pixel located at (x, y)","dimensions","to_luma_alpha","Apply the function `f` to each channel of this pixel.","Apply the function `f` to each channel except the alpha…","Apply the function `f` to each channel of this pixel and…","image::math::nq","image::imageops::colorops","image::flat","par_bridge","image::jpeg","image::tiff","image::webp","image::webp::vp8","image::gif","channel_count","color_model","channels_mut","from_channels","from_slice_mut","map_with_alpha","apply_with_alpha","color_type","from_slice","channels4","channels","image::bmp","into_reader","image::dxt","scanline_bytes","read_image","image::hdr","image::ico","image::png","image::pnm","image::tga","read_rect_with_progress","into_frames","in_bounds","get_pixel","unsafe_get_pixel","blend_pixel","put_pixel","unsafe_put_pixel","Put a pixel at location (x, y), taking into account alpha…","inner_mut","samplelayout","normalform","dxtvariant","hdrmetadata","sampleencoding","index_mut","Creates a frame from pixels in RGBA format. Note: This…","from_rgba_speed","Creates a frame from pixels in RGBA format. `speed` is a…","from_palette_pixels","Creates a frame from a palette and indexed pixels.","from_indexed_pixels","Creates a frame from indexed pixels in the global palette.","Creates a frame from pixels in RGB format. Note: This…","from_rgb_speed","Creates a frame from pixels in RGB format. `speed` is a…","Returns the number of bytes in a single row of the image.…","total_bytes","Returns the total number of bytes in the image.","Returns the minimum number of bytes that can be…","Returns all the bytes in the image.","read_image_with_progress","Same as `read_image` but periodically calls the provided…","Read a rectangular section of the image.","Returns true if this x, y coordinate is contained inside…","Returns an Iterator over the pixels of this image. The…","Returns an subimage that is an immutable view into this…","subimage","Puts a pixel at location (x, y)","pixels_mut","Returns an Iterator over mutable pixels of this image. The…","Copies all of the pixels from another image into this image.","Returns a subimage that is a view into this image.","FilterType","ImageFormat","ImageOutputFormat","DynamicImage","FlatSamples","SampleLayout","HDRMetadata","JPEGDecoder","JPEGEncoder","ArbitraryHeader","BitmapHeader","GraymapHeader","PixmapHeader","ArbitraryTuplType","SampleEncoding","TIFFDecoder","WebpDecoder","ImageBuffer","AnimationDecoder","GenericImage","GenericImageView","ImageDecoder","ImageDecoderExt","ConvertBuffer","HDRImageDecoderIterator","JPEG decoder","Unsupported","interlaced","GrayscaleAlpha","Decoding and Encoding of TIFF Images","FormatError","The Image is not formatted properly","UnsupportedError","The Decoder does not support this image format","An I/O Error occurred while decoding the image","An enumeration over supported color types and their bit…","Pixel is grayscale","Pixel contains R, G and B channels","Pixel is an index into a color palette","Pixel is grayscale with an alpha channel","Pixel is RGB with an alpha channel","Result of an image decoding/encoding process","drawingareaerrorkind","chartcontext","drawingarea","asrangedcoord","rangedcoord","seriesanno","shapestyle","textstyle","partialaxis","Get the range of X axis","drawingerrorkind","backendcoord","get_x_range","get_y_range","get_x_axis_pixel_range","get_y_axis_pixel_range","coordtranslate","with_buffer","plotters::drawing","Parse a multi-line text into an multi-line element.","plotters::style::colors","The predefined white color","The predefined black color","The predefined red color","The predefined green color","The predefined blue color","The predefined yellow color","The predefined cyan color","The predefined magenta color","TRANSPARENT","The predefined transparent","plotters::style","fonttransform","fontresult","Get the size of the text if rendered in this font","palettecolor","rgbacolor","plotters","ChartBuilder","The helper object to create a chart context, which is used…","ChartContext","The context of the chart. This is the core object of…","A log scaled coordinate axis","The wrapper type for a range of a log-scaled value","RangedCoord","The coordinate described by two ranged value","RangedCoordf32","The ranged coordinate for type f32","RangedCoordf64","The ranged coordinate for type f64","RangedCoordi32","The ranged coordinate for type i32","RangedCoordi64","The ranged coordinate for type i64","RangedCoordu32","The ranged coordinate for type u32","RangedCoordu64","The ranged coordinate for type u64","The ranged coordinate for date","RangedDateTime","The ranged coordinate for the date and time","The series that aggregate data into a histogram","The line series object, which takes an iterator of points…","PointSeries","The point plot object, which takes an iterator of points…","Describes a font","The color described by HSL color space","The palette of 100% accessibility","The palette of 99% accessibility","Palette9999","The palette of 99.99% accessibility","PaletteColor","A color in the given palette","The color described by it's RGB value","CandleStick","The candelstick data point element","A circle element","Describe a cross","EmptyElement","An empty composibable element, which is the start point of…","MultiLineText","An multi-line text element. The `Text` element allows only…","An element of a series of connected lines","An element of a single pixel","A rectangle element","A single line text element. This can be owned or borrowed…","LabelAreaPosition","The enum used to specify the position of label area","SeriesLabelPosition","UpperMiddle","MiddleMiddle","LowerMiddle","MiddleRight","FontTransform","Specifying text transformations","make_partial_axis","IntoCentric","into_centric","plotters::coord","centricdescreterange","IntoPartialAxis","plotters::prelude","partial_axis","LogScalable","The trait for the type that is able to be presented in the…","Make the conversion from the type to the floating point…","Convert a floating point number to the scale","The trait that indicates we have a ordered and ranged…","The type of this value","This function maps the value to i32, which is the drawing…","This function gives the key points that we can draw a grid…","Get the range of this value","axis_pixel_range","This function provides the on-axis part of its range","Any color representation","Convert the RGB representation to the standard RGB tuple","Get the alpha channel of the color","Mix the color with given opacity","Convert the color into the RGBA color which is intrenally…","Make a filled style form the color","SimpleColor","Color without alpha channel","plotters::chart","plotters::drawing::backend","plotters::element","dynelement","into_dyn","plotters::series","key_points","previous_value","next_value","translate","reverse_translate","ensure_prepared","draw_pixel","draw_circle","make_point","iterator","fontdesc","DualCoordChartContext","SeriesLabelStyle","AsRangedCoord","DescreteRanged","ReversableRanged","CoordTranslate","ReverseCoordTranslate","DrawingAreaErrorKind","DrawingArea","BitMapBackend","DrawingErrorKind","BackendStyle","DrawingBackend","IntoDrawingArea","PointElement","PointCollection","IntoDynElement","LineSeries","RangedDate","ShiftAndTrans","ComposedElement","ErrorBarOrientH","ErrorBarOrientV","Palette100"];
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,R[27],"adler32","A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,"adler32",E,"Consume a Read object and returns the Adler32 hash.",N,[[["read"]],[["u32"],[R[2],["u32"]]]]],[11,"new",E,"Creates an empty Adler32 context (with hash 1).",0,[[],[R[26]]]],[11,"from_value",E,"Creates an Adler32 context with the given initial value.",0,[[["u32"]],[R[26]]]],[11,"from_buffer",E,"Convenience function initializing a context from the hash…",0,[[],[R[26]]]],[11,"hash",E,"Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove",E,"Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update",E,"Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer",E,"Feeds a vector of bytes to the algorithm to update the hash.",0,[[["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]]],"p":[[3,R[27]]]};
searchIndex["approx"]={"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx",R[45],N,N],[12,R[49],E,R[48],0,N],[3,R[60],E,R[45],N,N],[12,R[49],E,R[48],1,N],[12,R[51],E,"The relative tolerance for testing values that are…",1,N],[3,"Ulps",E,R[45],N,N],[12,R[49],E,R[48],2,N],[12,R[53],E,"The ULPs to tolerate when testing values that are far-apart.",2,N],[8,R[649],E,"Equality that is defined using the absolute difference of…",N,N],[16,"Epsilon",E,"Used for specifying relative comparisons.",3,N],[10,R[1852],E,"The default tolerance to use when testing values that are…",3,[[]]],[10,R[642],E,"A test for equality that uses the absolute difference to…",3,[[["self"],["rhs"]],["bool"]]],[11,R[643],E,R[646],3,[[["self"],["rhs"]],["bool"]]],[8,R[650],E,R[641],N,N],[10,R[1853],E,"The default relative tolerance for testing values that are…",4,[[]]],[10,R[56],E,"A test for equality that uses a relative comparison if the…",4,[[["self"],["rhs"]],["bool"]]],[11,R[57],E,R[647],4,[[["self"],["rhs"]],["bool"]]],[8,"UlpsEq",E,R[641],N,N],[10,R[1854],E,"The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq",E,"A test for equality that uses units in the last place…",5,[[["self"],["rhs"],["u32"]],["bool"]]],[11,"ulps_ne",E,R[648],5,[[["self"],["rhs"],["u32"]],["bool"]]],[11,R[49],E,R[52],0,[[],["absdiff"]]],[11,"eq",E,R[54],0,[[["b"],["a"]],["bool"]]],[11,"ne",E,R[55],0,[[["b"],["a"]],["bool"]]],[11,R[49],E,R[52],1,[[],[R[50]]]],[11,R[51],E,"Replace the maximum relative value with the one specified.",1,[[],[R[50]]]],[11,"eq",E,R[54],1,[[["b"],["a"]],["bool"]]],[11,"ne",E,R[55],1,[[["b"],["a"]],["bool"]]],[11,R[49],E,R[52],2,[[],["ulps"]]],[11,R[53],E,"Replace the max ulps value with the one specified.",2,[[["u32"]],["ulps"]]],[11,"eq",E,R[54],2,[[["b"],["a"]],["bool"]]],[11,"ne",E,R[55],2,[[["b"],["a"]],["bool"]]],[14,R[642],E,"Approximate equality of using the absolute difference.",N,N],[14,R[643],E,"Approximate inequality of using the absolute difference.",N,N],[14,R[56],E,R[644],N,N],[14,R[57],E,R[645],N,N],[14,"ulps_eq",E,R[644],N,N],[14,"ulps_ne",E,R[645],N,N],[14,"assert_abs_diff_eq",E,"An assertion that delegates to `abs_diff_eq!`, and panics…",N,N],[14,"assert_abs_diff_ne",E,"An assertion that delegates to `abs_diff_ne!`, and panics…",N,N],[14,"assert_relative_eq",E,"An assertion that delegates to `relative_eq!`, and panics…",N,N],[14,"assert_relative_ne",E,"An assertion that delegates to `relative_ne!`, and panics…",N,N],[14,"assert_ulps_eq",E,"An assertion that delegates to `ulps_eq!`, and panics with…",N,N],[14,"assert_ulps_ne",E,"An assertion that delegates to `ulps_ne!`, and panics with…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[188],E,E,0,[[],["absdiff"]]],[11,R[188],E,E,1,[[],[R[50]]]],[11,R[188],E,E,2,[[],["ulps"]]],[11,R[643],E,R[646],3,[[["self"],["rhs"]],["bool"]]],[11,R[57],E,R[647],4,[[["self"],["rhs"]],["bool"]]],[11,"ulps_ne",E,R[648],5,[[["self"],["rhs"],["u32"]],["bool"]]]],"p":[[3,"AbsDiff"],[3,R[60]],[3,"Ulps"],[8,R[649]],[8,R[650]],[8,"UlpsEq"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[161],R[152],"A string with a fixed capacity.",N,N],[3,R[162],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[201],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[157]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[144],["str"]],[R[2],[R[144]]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[145]],[R[2],[R[145]]]]]],[11,R[455],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[146],0,[[["self"],["char"]]]],[11,"try_push",E,R[146],0,[[["self"],["char"]],[[R[2],[R[144]]],[R[144],["char"]]]]],[11,"push_str",E,R[147],0,[[["self"],["str"]]]],[11,"try_push_str",E,R[147],0,[[["self"],["str"]],[[R[2],[R[144]]],[R[144],["str"]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[[R[24],["char"]],["char"]]]],[11,R[241],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[144]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[144]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[163],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[159],3,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"end",E,R[160],3,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[152]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,R[455],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[148],4,[[["self"]]]],[11,"try_push",E,R[148],4,[[["self"]],[[R[2],[R[144]]],[R[144]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[149],4,[[["self"],["usize"]]]],[11,"try_insert",E,R[149],4,[[["self"],["usize"]],[[R[2],[R[144]]],[R[144]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[24]]]],[11,"swap_remove",E,R[150],4,[[["self"],["usize"]]]],[11,"swap_pop",E,R[150],4,[[["self"],["usize"]],[R[24]]]],[11,"remove",E,R[151],4,[[["self"],["usize"]]]],[11,"pop_at",E,R[151],4,[[["self"],["usize"]],[R[24]]]],[11,R[241],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,"Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,R[25],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[2]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,"as_slice",E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[1915],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[22],E,E,4,[[],["i"]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[22],E,E,5,[[],["i"]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[22],E,E,6,[[],["i"]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[13],E,E,0,[[["self"]],["str"]]],[11,R[13],E,E,4,[[["self"]]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[144]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[144]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[23]]]],[11,"cmp",E,E,1,[[["self"],[R[144]]],[R[23]]]],[11,"cmp",E,E,4,[[["self"],[R[152]]],[R[23]]]],[11,R[153],E,E,0,[[["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[153],E,E,0,[[["self"],["str"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"le",E,E,0,[[["self"],["str"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["str"]],["bool"]]],[11,R[153],E,E,1,[[["self"],[R[144]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,1,[[["self"],[R[144]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[144]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[144]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[144]]],["bool"]]],[11,R[153],E,E,4,[[["self"],[R[152]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"write_char",E,E,0,[[["self"],["char"]],[R[2]]]],[11,"write_str",E,E,0,[[["self"],["str"]],[R[2]]]],[11,R[212],E,E,4,[[[R[156]]],["self"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[24]]]],[11,R[154],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[24]]]],[11,R[154],E,E,6,[[["self"]]]],[11,R[155],E,E,5,[[["self"]],[R[24]]]],[11,R[155],E,E,6,[[["self"]],[R[24]]]],[11,R[22],E,E,4,[[],[R[210]]]],[11,"extend",E,E,4,[[["self"],[R[156]]]]],[11,"clone",E,E,0,[[["self"]],[R[157]]]],[11,R[158],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[144]]]],[11,"clone",E,E,5,[[["self"]],[R[210]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[158],E,E,4,[[["self"],["self"]]]],[11,R[188],E,"Return an empty `ArrayString`",0,[[],[R[157]]]],[11,R[188],E,"Return an empty array",4,[[],[R[152]]]],[11,R[28],E,E,0,[[["self"]],["str"]]],[11,R[28],E,E,4,[[["self"]]]],[11,R[10],E,E,4,[[["self"]]]],[11,"start",E,R[159],3,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"end",E,R[160],3,[[["self"]],[[R[24],["usize"]],["usize"]]]]],"p":[[3,R[161]],[3,R[162]],[8,"Array"],[8,R[163]],[3,"ArrayVec"],[3,R[201]],[3,"Drain"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[452],"byteorder","Defines big-endian serialization.",N,N],[4,R[453],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[449],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[399],0,[[["self"]],[[R[2],["u8"]],["u8"]]]],[11,"read_i8",E,R[400],0,[[["self"]],[["i8"],[R[2],["i8"]]]]],[11,R[384],E,R[401],0,[[["self"]],[["u16"],[R[2],["u16"]]]]],[11,R[402],E,R[403],0,[[["self"]],[[R[2],["i16"]],["i16"]]]],[11,R[404],E,R[405],0,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,R[406],E,R[407],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[385],E,R[408],0,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,R[409],E,R[410],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[411],E,R[412],0,[[["self"]],[["u64"],[R[2],["u64"]]]]],[11,R[413],E,R[414],0,[[["self"]],[["i64"],[R[2],["i64"]]]]],[11,R[386],E,R[415],0,[[["self"]],[["u64"],[R[2],["u64"]]]]],[11,R[416],E,R[417],0,[[["self"]],[["i64"],[R[2],["i64"]]]]],[11,R[340],E,R[418],0,[[["self"]],[["u128"],[R[2],["u128"]]]]],[11,R[353],E,R[419],0,[[["self"]],[[R[2],["i128"]],["i128"]]]],[11,R[341],E,R[335],0,[[["self"],["usize"]],[["u64"],[R[2],["u64"]]]]],[11,R[420],E,R[336],0,[[["self"],["usize"]],[["i64"],[R[2],["i64"]]]]],[11,R[342],E,R[335],0,[[["self"],["usize"]],[["u128"],[R[2],["u128"]]]]],[11,R[354],E,R[336],0,[[["self"],["usize"]],[[R[2],["i128"]],["i128"]]]],[11,R[421],E,R[356],0,[[["self"]],[["f32"],[R[2],["f32"]]]]],[11,R[422],E,R[357],0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,R[371],E,R[423],0,[[["self"]],[R[2]]]],[11,R[372],E,R[424],0,[[["self"]],[R[2]]]],[11,R[373],E,R[425],0,[[["self"]],[R[2]]]],[11,R[374],E,R[426],0,[[["self"]],[R[2]]]],[11,R[427],E,R[428],0,[[["self"]],[R[2]]]],[11,R[375],E,R[429],0,[[["self"]],[R[2]]]],[11,R[376],E,R[430],0,[[["self"]],[R[2]]]],[11,R[377],E,R[431],0,[[["self"]],[R[2]]]],[11,R[378],E,R[432],0,[[["self"]],[R[2]]]],[11,R[379],E,R[433],0,[[["self"]],[R[2]]]],[11,R[380],E,R[337],0,[[["self"]],[R[2]]]],[11,R[381],E,R[434],0,[[["self"]],[R[2]]]],[11,R[383],E,R[337],0,[[["self"]],[R[2]]]],[8,R[450],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[435],1,[[["self"],["u8"]],[R[2]]]],[11,"write_i8",E,R[436],1,[[["self"],["i8"]],[R[2]]]],[11,R[344],E,R[437],1,[[["self"],["u16"]],[R[2]]]],[11,R[358],E,R[438],1,[[["self"],["i16"]],[R[2]]]],[11,R[345],E,R[439],1,[[["self"],["u32"]],[R[2]]]],[11,R[359],E,R[440],1,[[["self"],["i32"]],[R[2]]]],[11,R[346],E,R[441],1,[[["self"],["u32"]],[R[2]]]],[11,R[360],E,R[442],1,[[["self"],["i32"]],[R[2]]]],[11,R[347],E,R[443],1,[[["self"],["u64"]],[R[2]]]],[11,R[361],E,R[444],1,[[["self"],["i64"]],[R[2]]]],[11,R[348],E,R[445],1,[[["self"],["u64"]],[R[2]]]],[11,R[362],E,R[446],1,[[["self"],["i64"]],[R[2]]]],[11,R[349],E,R[447],1,[[["self"],["u128"]],[R[2]]]],[11,R[363],E,R[448],1,[[["self"],["i128"]],[R[2]]]],[11,R[350],E,R[338],1,[[["self"],["u64"],["usize"]],[R[2]]]],[11,R[364],E,R[339],1,[[["self"],["i64"],["usize"]],[R[2]]]],[11,R[351],E,R[338],1,[[["self"],["usize"],["u128"]],[R[2]]]],[11,R[365],E,R[339],1,[[["self"],["i128"],["usize"]],[R[2]]]],[11,R[367],E,R[368],1,[[["self"],["f32"]],[R[2]]]],[11,R[369],E,R[370],1,[[["self"],["f64"]],[R[2]]]],[8,R[451],E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,R[384],E,"Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,R[404],E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,R[385],E,"Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,R[411],E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,R[386],E,"Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,R[340],E,"Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,R[341],E,R[343],2,[[["usize"]],["u64"]]],[10,R[342],E,R[343],2,[[["usize"]],["u128"]]],[10,R[344],E,"Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,R[345],E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,R[346],E,"Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,R[347],E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,R[348],E,"Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,R[349],E,"Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,R[350],E,R[352],2,[[["usize"],["u64"]]]],[10,R[351],E,R[352],2,[[["u128"],["usize"]]]],[11,R[402],E,"Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,R[406],E,"Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,R[409],E,"Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,R[413],E,"Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,R[416],E,"Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,R[353],E,"Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,R[420],E,R[355],2,[[["usize"]],["i64"]]],[11,R[354],E,R[355],2,[[["usize"]],["i128"]]],[11,R[421],E,R[356],2,[[],["f32"]]],[11,R[422],E,R[357],2,[[],["f64"]]],[11,R[358],E,"Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,R[359],E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,R[360],E,"Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,R[361],E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,R[362],E,"Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,R[363],E,"Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,R[364],E,R[366],2,[[["i64"],["usize"]]]],[11,R[365],E,R[366],2,[[["i128"],["usize"]]]],[11,R[367],E,R[368],2,[[["f32"]]]],[11,R[369],E,R[370],2,[[["f64"]]]],[10,R[371],E,"Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[372],E,"Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[373],E,"Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[374],E,"Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[375],E,"Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,R[376],E,"Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,R[377],E,"Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[378],E,"Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[379],E,R[382],2,[[]]],[11,R[380],E,R[337],2,[[]]],[11,R[381],E,R[382],2,[[]]],[11,R[383],E,R[337],2,[[]]],[10,R[387],E,"Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[388],E,"Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[389],E,"Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[390],E,"Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,R[391],E,"Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,R[392],E,"Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,R[393],E,"Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,R[394],E,"Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,R[395],E,"Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,R[396],E,"Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[384],E,E,3,[[],["u16"]]],[11,R[385],E,E,3,[[],["u32"]]],[11,R[386],E,E,3,[[],["u64"]]],[11,R[340],E,E,3,[[],["u128"]]],[11,R[341],E,E,3,[[["usize"]],["u64"]]],[11,R[342],E,E,3,[[["usize"]],["u128"]]],[11,R[344],E,E,3,[[["u16"]]]],[11,R[346],E,E,3,[[["u32"]]]],[11,R[348],E,E,3,[[["u64"]]]],[11,R[349],E,E,3,[[["u128"]]]],[11,R[350],E,E,3,[[["usize"],["u64"]]]],[11,R[351],E,E,3,[[["u128"],["usize"]]]],[11,R[371],E,E,3,[[]]],[11,R[372],E,E,3,[[]]],[11,R[373],E,E,3,[[]]],[11,R[374],E,E,3,[[]]],[11,R[387],E,E,3,[[]]],[11,R[388],E,E,3,[[]]],[11,R[389],E,E,3,[[]]],[11,R[390],E,E,3,[[]]],[11,R[391],E,E,3,[[]]],[11,R[392],E,E,3,[[]]],[11,R[393],E,E,3,[[]]],[11,R[394],E,E,3,[[]]],[11,R[395],E,E,3,[[]]],[11,R[396],E,E,3,[[]]],[11,R[384],E,E,4,[[],["u16"]]],[11,R[385],E,E,4,[[],["u32"]]],[11,R[386],E,E,4,[[],["u64"]]],[11,R[340],E,E,4,[[],["u128"]]],[11,R[341],E,E,4,[[["usize"]],["u64"]]],[11,R[342],E,E,4,[[["usize"]],["u128"]]],[11,R[344],E,E,4,[[["u16"]]]],[11,R[346],E,E,4,[[["u32"]]]],[11,R[348],E,E,4,[[["u64"]]]],[11,R[349],E,E,4,[[["u128"]]]],[11,R[350],E,E,4,[[["usize"],["u64"]]]],[11,R[351],E,E,4,[[["u128"],["usize"]]]],[11,R[371],E,E,4,[[]]],[11,R[372],E,E,4,[[]]],[11,R[373],E,E,4,[[]]],[11,R[374],E,E,4,[[]]],[11,R[387],E,E,4,[[]]],[11,R[388],E,E,4,[[]]],[11,R[389],E,E,4,[[]]],[11,R[390],E,E,4,[[]]],[11,R[391],E,E,4,[[]]],[11,R[392],E,E,4,[[]]],[11,R[393],E,E,4,[[]]],[11,R[394],E,E,4,[[]]],[11,R[395],E,E,4,[[]]],[11,R[396],E,E,4,[[]]],[11,R[188],E,E,3,[[],[R[397]]]],[11,R[188],E,E,4,[[],[R[398]]]],[11,"clone",E,E,3,[[["self"]],[R[397]]]],[11,"clone",E,E,4,[[["self"]],[R[398]]]],[11,R[153],E,E,3,[[["self"],[R[397]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,4,[[["self"],[R[398]]],[[R[23]],[R[24],[R[23]]]]]],[11,"cmp",E,E,3,[[["self"],[R[397]]],[R[23]]]],[11,"cmp",E,E,4,[[["self"],[R[398]]],[R[23]]]],[11,"eq",E,E,3,[[["self"],[R[397]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[398]]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"read_u8",E,R[399],0,[[["self"]],[[R[2],["u8"]],["u8"]]]],[11,"read_i8",E,R[400],0,[[["self"]],[["i8"],[R[2],["i8"]]]]],[11,R[384],E,R[401],0,[[["self"]],[["u16"],[R[2],["u16"]]]]],[11,R[402],E,R[403],0,[[["self"]],[[R[2],["i16"]],["i16"]]]],[11,R[404],E,R[405],0,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,R[406],E,R[407],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[385],E,R[408],0,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,R[409],E,R[410],0,[[["self"]],[["i32"],[R[2],["i32"]]]]],[11,R[411],E,R[412],0,[[["self"]],[["u64"],[R[2],["u64"]]]]],[11,R[413],E,R[414],0,[[["self"]],[["i64"],[R[2],["i64"]]]]],[11,R[386],E,R[415],0,[[["self"]],[["u64"],[R[2],["u64"]]]]],[11,R[416],E,R[417],0,[[["self"]],[["i64"],[R[2],["i64"]]]]],[11,R[340],E,R[418],0,[[["self"]],[["u128"],[R[2],["u128"]]]]],[11,R[353],E,R[419],0,[[["self"]],[[R[2],["i128"]],["i128"]]]],[11,R[341],E,R[335],0,[[["self"],["usize"]],[["u64"],[R[2],["u64"]]]]],[11,R[420],E,R[336],0,[[["self"],["usize"]],[["i64"],[R[2],["i64"]]]]],[11,R[342],E,R[335],0,[[["self"],["usize"]],[["u128"],[R[2],["u128"]]]]],[11,R[354],E,R[336],0,[[["self"],["usize"]],[[R[2],["i128"]],["i128"]]]],[11,R[421],E,R[356],0,[[["self"]],[["f32"],[R[2],["f32"]]]]],[11,R[422],E,R[357],0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,R[371],E,R[423],0,[[["self"]],[R[2]]]],[11,R[372],E,R[424],0,[[["self"]],[R[2]]]],[11,R[373],E,R[425],0,[[["self"]],[R[2]]]],[11,R[374],E,R[426],0,[[["self"]],[R[2]]]],[11,R[427],E,R[428],0,[[["self"]],[R[2]]]],[11,R[375],E,R[429],0,[[["self"]],[R[2]]]],[11,R[376],E,R[430],0,[[["self"]],[R[2]]]],[11,R[377],E,R[431],0,[[["self"]],[R[2]]]],[11,R[378],E,R[432],0,[[["self"]],[R[2]]]],[11,R[379],E,R[433],0,[[["self"]],[R[2]]]],[11,R[380],E,R[337],0,[[["self"]],[R[2]]]],[11,R[381],E,R[434],0,[[["self"]],[R[2]]]],[11,R[383],E,R[337],0,[[["self"]],[R[2]]]],[11,"write_u8",E,R[435],1,[[["self"],["u8"]],[R[2]]]],[11,"write_i8",E,R[436],1,[[["self"],["i8"]],[R[2]]]],[11,R[344],E,R[437],1,[[["self"],["u16"]],[R[2]]]],[11,R[358],E,R[438],1,[[["self"],["i16"]],[R[2]]]],[11,R[345],E,R[439],1,[[["self"],["u32"]],[R[2]]]],[11,R[359],E,R[440],1,[[["self"],["i32"]],[R[2]]]],[11,R[346],E,R[441],1,[[["self"],["u32"]],[R[2]]]],[11,R[360],E,R[442],1,[[["self"],["i32"]],[R[2]]]],[11,R[347],E,R[443],1,[[["self"],["u64"]],[R[2]]]],[11,R[361],E,R[444],1,[[["self"],["i64"]],[R[2]]]],[11,R[348],E,R[445],1,[[["self"],["u64"]],[R[2]]]],[11,R[362],E,R[446],1,[[["self"],["i64"]],[R[2]]]],[11,R[349],E,R[447],1,[[["self"],["u128"]],[R[2]]]],[11,R[363],E,R[448],1,[[["self"],["i128"]],[R[2]]]],[11,R[350],E,R[338],1,[[["self"],["u64"],["usize"]],[R[2]]]],[11,R[364],E,R[339],1,[[["self"],["i64"],["usize"]],[R[2]]]],[11,R[351],E,R[338],1,[[["self"],["usize"],["u128"]],[R[2]]]],[11,R[365],E,R[339],1,[[["self"],["i128"],["usize"]],[R[2]]]],[11,R[367],E,R[368],1,[[["self"],["f32"]],[R[2]]]],[11,R[369],E,R[370],1,[[["self"],["f64"]],[R[2]]]]],"p":[[8,R[449]],[8,R[450]],[8,R[451]],[4,R[452]],[4,R[453]]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["chrono"]={"doc":"Chrono: Date and Time for Rust","i":[[3,"Duration","chrono",R[1463],N,N],[3,"Date",E,"ISO 8601 calendar date with time zone.",N,N],[3,"DateTime",E,"ISO 8601 combined date and time with time zone.",N,N],[3,R[1460],E,"An error resulting from reading `Weekday` value with…",N,N],[4,R[1453],E,"Specific formatting options for seconds. This may be…",N,N],[13,"Secs",E,"Format whole seconds only, with no decimal point nor…",0,N],[13,"Millis",E,"Use fixed 3 subsecond digits. This corresponds to…",0,N],[13,"Micros",E,"Use fixed 6 subsecond digits. This corresponds to…",0,N],[13,"Nanos",E,"Use fixed 9 subsecond digits. This corresponds to…",0,N],[13,"AutoSi",E,"Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,N],[4,"Weekday",E,"The day of week.",N,N],[13,"Mon",E,"Monday.",1,N],[13,"Tue",E,"Tuesday.",1,N],[13,"Wed",E,"Wednesday.",1,N],[13,"Thu",E,"Thursday.",1,N],[13,"Fri",E,"Friday.",1,N],[13,"Sat",E,"Saturday.",1,N],[13,"Sun",E,"Sunday.",1,N],[0,"prelude",E,"A convenience module appropriate for glob imports (`use…",N,N],[0,"offset",E,"The time zone, which calculates offsets from the local…",N,N],[3,R[1455],R[1404],"The time zone with fixed offset, from UTC-23:59:59 to…",N,N],[3,"Local",E,"The local timescale. This is implemented via the standard…",N,N],[3,"Utc",E,"The UTC time zone. This is the most efficient time zone…",N,N],[4,R[1454],E,"The conversion result from the local time to the…",N,N],[13,"None",E,"Given local time representation is invalid. This can occur…",2,N],[13,"Single",E,"Given local time representation has a single unique result.",2,N],[13,"Ambiguous",E,"Given local time representation has multiple results and…",2,N],[11,"east",E,R[1332],3,[[["i32"]],[R[1333]]]],[11,"east_opt",E,R[1332],3,[[["i32"]],[[R[24],[R[1333]]],[R[1333]]]]],[11,"west",E,R[1334],3,[[["i32"]],[R[1333]]]],[11,"west_opt",E,R[1334],3,[[["i32"]],[[R[24],[R[1333]]],[R[1333]]]]],[11,"local_minus_utc",E,"Returns the number of seconds to add to convert from UTC…",3,[[["self"]],["i32"]]],[11,"utc_minus_local",E,"Returns the number of seconds to add to convert from the…",3,[[["self"]],["i32"]]],[11,"today",E,R[1335],4,[[],[["date",["local"]],["local"]]]],[11,"now",E,R[1336],4,[[],[[R[1343],["local"]],["local"]]]],[11,"today",E,R[1335],5,[[],[["utc"],["date",["utc"]]]]],[11,"now",E,R[1336],5,[[],[["utc"],[R[1343],["utc"]]]]],[8,"Offset",E,"The offset from the local time to UTC.",N,N],[10,"fix",E,"Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],[R[1333]]]],[8,"TimeZone",E,"The time zone.",N,N],[16,"Offset",E,"An associated offset type. This type is used to store the…",7,N],[11,"ymd",E,R[1337],7,[[["self"],["u32"],["i32"]],["date"]]],[11,"ymd_opt",E,R[1337],7,[[["self"],["u32"],["i32"]],[["date"],[R[1339],["date"]]]]],[11,"yo",E,R[1338],7,[[["self"],["u32"],["i32"]],["date"]]],[11,"yo_opt",E,R[1338],7,[[["self"],["u32"],["i32"]],[["date"],[R[1339],["date"]]]]],[11,"isoywd",E,R[1340],7,[[["self"],["u32"],["i32"],["weekday"]],["date"]]],[11,"isoywd_opt",E,R[1340],7,[[["self"],["u32"],["i32"],["weekday"]],[["date"],[R[1339],["date"]]]]],[11,R[1395],E,R[1341],7,[[["self"],["i64"],["u32"]],[R[1343]]]],[11,"timestamp_opt",E,R[1341],7,[[["self"],["i64"],["u32"]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,R[1371],E,R[1342],7,[[["self"],["i64"]],[R[1343]]]],[11,"timestamp_millis_opt",E,R[1342],7,[[["self"],["i64"]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,R[1372],E,R[1342],7,[[["self"],["i64"]],[R[1343]]]],[11,"datetime_from_str",E,R[1351],7,[[["self"],["str"]],[[R[1343]],[R[1352],[R[1343]]]]]],[10,R[1407],E,"Reconstructs the time zone from the offset.",7,[[],["self"]]],[10,R[1408],E,"Creates the offset(s) for given local `NaiveDate` if…",7,[[["self"],[R[1345]]],[R[1339]]]],[10,R[1409],E,"Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["self"],[R[1344]]],[R[1339]]]],[11,R[1412],E,"Converts the local `NaiveDate` to the timezone-aware…",7,[[["self"],[R[1345]]],[["date"],[R[1339],["date"]]]]],[11,R[1413],E,"Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["self"],[R[1344]]],[[R[1343]],[R[1339],[R[1343]]]]]],[10,R[1410],E,"Creates the offset for given UTC `NaiveDate`. This cannot…",7,[[["self"],[R[1345]]]]],[10,R[1411],E,"Creates the offset for given UTC `NaiveDateTime`. This…",7,[[["self"],[R[1344]]]]],[11,R[1414],E,"Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["self"],[R[1345]]],["date"]]],[11,R[1415],E,"Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["self"],[R[1344]]],[R[1343]]]],[11,"single",E,"Returns `Some` only when the conversion result is unique,…",2,[[],[R[24]]]],[11,"earliest",E,"Returns `Some` for the earliest possible conversion…",2,[[],[R[24]]]],[11,"latest",E,"Returns `Some` for the latest possible conversion result,…",2,[[],[R[24]]]],[11,"map",E,"Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["fnmut"]],[R[1339]]]],[11,"and_time",E,R[1376],2,[[[R[1364]]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,R[1353],E,R[1377],2,[[["u32"]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,R[1355],E,R[1346],2,[[["u32"]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,R[1356],E,R[1346],2,[[["u32"]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,R[1357],E,R[1346],2,[[["u32"]],[[R[1343]],[R[1339],[R[1343]]]]]],[11,"unwrap",E,"Returns the single unique conversion result, or panics…",2,[[],[T]]],[0,"naive","chrono","Date and time types unconcerned with timezones.",N,N],[3,"NaiveDate",R[1405],"ISO 8601 calendar date without timezone. Allows for every…",N,N],[3,"IsoWeek",E,"ISO 8601 week.",N,N],[3,"NaiveTime",E,"ISO 8601 time without timezone. Allows for the nanosecond…",N,N],[3,R[1456],E,"ISO 8601 combined date and time without timezone.",N,N],[11,"from_ymd",E,R[1347],8,[[["u32"],["i32"]],[R[1345]]]],[11,"from_ymd_opt",E,R[1347],8,[[["u32"],["i32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,"from_yo",E,R[1348],8,[[["u32"],["i32"]],[R[1345]]]],[11,"from_yo_opt",E,R[1348],8,[[["u32"],["i32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,"from_isoywd",E,R[1349],8,[[["u32"],["weekday"],["i32"]],[R[1345]]]],[11,"from_isoywd_opt",E,R[1349],8,[[["u32"],["weekday"],["i32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,"from_num_days_from_ce",E,R[1350],8,[[["i32"]],[R[1345]]]],[11,"from_num_days_from_ce_opt",E,R[1350],8,[[["i32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1367],E,R[1351],8,[[["str"]],[[R[1352],[R[1345]]],[R[1345]]]]],[11,"and_time",E,"Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],[R[1364]]],[R[1344]]]],[11,"and_hms",E,R[1354],8,[[["self"],["u32"]],[R[1344]]]],[11,R[1353],E,R[1354],8,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1378],E,R[1354],8,[[["self"],["u32"]],[R[1344]]]],[11,R[1355],E,R[1354],8,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1379],E,R[1354],8,[[["self"],["u32"]],[R[1344]]]],[11,R[1356],E,R[1354],8,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1380],E,R[1354],8,[[["self"],["u32"]],[R[1344]]]],[11,R[1357],E,R[1354],8,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,"succ",E,R[1358],8,[[["self"]],[R[1345]]]],[11,"succ_opt",E,R[1358],8,[[["self"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,"pred",E,R[1359],8,[[["self"]],[R[1345]]]],[11,"pred_opt",E,R[1359],8,[[["self"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1373],E,"Adds the `days` part of given `Duration` to the current…",8,[[[R[1360]]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1374],E,"Subtracts the `days` part of given `Duration` from the…",8,[[[R[1360]]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1368],E,"Subtracts another `NaiveDate` from the current date.…",8,[[[R[1345]]],[R[1360]]]],[11,R[1369],E,"Formats the date with the specified formatting items.…",8,[[["self"],["i"]],[R[1361]]]],[11,"format",E,R[1383],8,[[["self"],["str"]],[[R[1361],[R[1362]]],[R[1362]]]]],[11,"year",E,"Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week",E,"Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0",E,"Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms",E,R[1363],10,[[["u32"]],[R[1364]]]],[11,"from_hms_opt",E,R[1363],10,[[["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,"from_hms_milli",E,R[1365],10,[[["u32"]],[R[1364]]]],[11,"from_hms_milli_opt",E,R[1365],10,[[["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,"from_hms_micro",E,R[1365],10,[[["u32"]],[R[1364]]]],[11,"from_hms_micro_opt",E,R[1365],10,[[["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,"from_hms_nano",E,R[1365],10,[[["u32"]],[R[1364]]]],[11,"from_hms_nano_opt",E,R[1365],10,[[["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,"from_num_seconds_from_midnight",E,R[1366],10,[[["u32"]],[R[1364]]]],[11,"from_num_seconds_from_midnight_opt",E,R[1366],10,[[["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,R[1367],E,R[1351],10,[[["str"]],[[R[1364]],[R[1352],[R[1364]]]]]],[11,"overflowing_add_signed",E,"Adds given `Duration` to the current time, and also…",10,[[["self"],[R[1360]]]]],[11,"overflowing_sub_signed",E,"Subtracts given `Duration` from the current time, and also…",10,[[["self"],[R[1360]]]]],[11,R[1368],E,"Subtracts another `NaiveTime` from the current time.…",10,[[[R[1364]]],[R[1360]]]],[11,R[1369],E,"Formats the time with the specified formatting items.…",10,[[["self"],["i"]],[R[1361]]]],[11,"format",E,"Formats the time with the specified format string. See the…",10,[[["self"],["str"]],[[R[1361],[R[1362]]],[R[1362]]]]],[11,"new",E,"Makes a new `NaiveDateTime` from date and time components.…",11,[[[R[1345]],[R[1364]]],[R[1344]]]],[11,"from_timestamp",E,R[1370],11,[[["i64"],["u32"]],[R[1344]]]],[11,"from_timestamp_opt",E,R[1370],11,[[["i64"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1367],E,R[1351],11,[[["str"]],[[R[1344]],[R[1352],[R[1344]]]]]],[11,"date",E,R[1384],11,[[["self"]],[R[1345]]]],[11,"time",E,"Retrieves a time component.",11,[[["self"]],[R[1364]]]],[11,R[1395],E,"Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,R[1371],E,"Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,R[1372],E,"Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,R[1385],E,"Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[1386],E,"Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[1387],E,"Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[1373],E,R[1392],11,[[[R[1360]]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1374],E,R[1393],11,[[[R[1360]]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1368],E,"Subtracts another `NaiveDateTime` from the current date…",11,[[[R[1344]]],[R[1360]]]],[11,R[1369],E,R[1375],11,[[["self"],["i"]],[R[1361]]]],[11,"format",E,R[1375],11,[[["self"],["str"]],[[R[1361],[R[1362]]],[R[1362]]]]],[17,"MIN_DATE",E,"The minimum possible `NaiveDate` (January 1, 262145 BCE).",N,N],[17,"MAX_DATE",E,"The maximum possible `NaiveDate` (December 31, 262143 CE).",N,N],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,[[[R[1345]]],["date"]]],[11,"and_time",E,R[1376],12,[[["self"],[R[1364]]],[[R[1343]],[R[24],[R[1343]]]]]],[11,"and_hms",E,R[1377],12,[[["self"],["u32"]],[R[1343]]]],[11,R[1353],E,R[1377],12,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1378],E,R[1346],12,[[["self"],["u32"]],[R[1343]]]],[11,R[1355],E,R[1346],12,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1379],E,R[1346],12,[[["self"],["u32"]],[R[1343]]]],[11,R[1356],E,R[1346],12,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1380],E,R[1346],12,[[["self"],["u32"]],[R[1343]]]],[11,R[1357],E,R[1346],12,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,"succ",E,R[1381],12,[[["self"]],["date"]]],[11,"succ_opt",E,R[1381],12,[[["self"]],[["date"],[R[24],["date"]]]]],[11,"pred",E,R[1382],12,[[["self"]],["date"]]],[11,"pred_opt",E,R[1382],12,[[["self"]],[["date"],[R[24],["date"]]]]],[11,"offset",E,R[1388],12,[[["self"]]]],[11,R[333],E,R[1389],12,[[["self"]],["tz"]]],[11,R[1390],E,R[1391],12,[[["self"],["tz2"]],[["date"],[R[333]]]]],[11,R[1373],E,"Adds given `Duration` to the current date.",12,[[[R[1360]]],[["date"],[R[24],["date"]]]]],[11,R[1374],E,"Subtracts given `Duration` from the current date.",12,[[[R[1360]]],[["date"],[R[24],["date"]]]]],[11,R[1368],E,"Subtracts another `Date` from the current date. Returns a…",12,[[["date"],[R[333]]],[R[1360]]]],[11,"naive_utc",E,"Returns a view to the naive UTC date.",12,[[["self"]],[R[1345]]]],[11,R[1394],E,"Returns a view to the naive local date.",12,[[["self"]],[R[1345]]]],[11,R[1369],E,"Formats the date with the specified formatting items.",12,[[["self"],["i"]],[R[1361]]]],[11,"format",E,R[1383],12,[[["self"],["str"]],[[R[1361],[R[1362]]],[R[1362]]]]],[11,"from_utc",E,"Makes a new `DateTime` with given UTC datetime and offset.…",13,[[[R[1344]]],[R[1343]]]],[11,"date",E,R[1384],13,[[["self"]],["date"]]],[11,"time",E,"Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],[R[1364]]]],[11,R[1395],E,"Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,R[1371],E,"Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,R[1372],E,"Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,R[1385],E,"Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,R[1386],E,"Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,R[1387],E,"Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset",E,R[1388],13,[[["self"]]]],[11,R[333],E,R[1389],13,[[["self"]],["tz"]]],[11,R[1390],E,R[1391],13,[[["self"],["tz2"]],[[R[333]],[R[1343]]]]],[11,R[1373],E,R[1392],13,[[[R[1360]]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1374],E,R[1393],13,[[[R[1360]]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1368],E,"Subtracts another `DateTime` from the current date and…",13,[[[R[333]],[R[1343]]],[R[1360]]]],[11,"naive_utc",E,"Returns a view to the naive UTC datetime.",13,[[["self"]],[R[1344]]]],[11,R[1394],E,"Returns a view to the naive local datetime.",13,[[["self"]],[R[1344]]]],[11,"parse_from_rfc2822",E,"Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],[[R[1352],[R[1343]]],[R[1343],[R[1333]]]]]],[11,"parse_from_rfc3339",E,"Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],[[R[1352],[R[1343]]],[R[1343],[R[1333]]]]]],[11,R[1367],E,R[1351],13,[[["str"]],[[R[1352],[R[1343]]],[R[1343],[R[1333]]]]]],[11,"to_rfc2822",E,"Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],[R[81]]]],[11,"to_rfc3339",E,"Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],[R[81]]]],[11,"to_rfc3339_opts",E,"Return an RFC 3339 and ISO 8601 date and time string with…",13,[[["self"],[R[1447]],["bool"]],[R[81]]]],[11,R[1369],E,R[1375],13,[[["self"],["i"]],[R[1361]]]],[11,"format",E,R[1375],13,[[["self"],["str"]],[[R[1361],[R[1362]]],[R[1362]]]]],[0,"format",E,"Formatting (and parsing) utilities for date and time.",N,N],[3,"Parsed",R[1402],"Parsed parts of date and time. There are two classes of…",N,N],[12,"year",E,"Year.",14,N],[12,"year_div_100",E,"Year divided by 100. Implies that the year is >= 1 BCE…",14,N],[12,"year_mod_100",E,"Year modulo 100. Implies that the year is >= 1 BCE when set.",14,N],[12,"isoyear",E,"Year in the ISO week date.",14,N],[12,"isoyear_div_100",E,"Year in the ISO week date, divided by 100. Implies that…",14,N],[12,"isoyear_mod_100",E,"Year in the ISO week date, modulo 100. Implies that the…",14,N],[12,"month",E,"Month (1--12).",14,N],[12,"week_from_sun",E,R[1396],14,N],[12,"week_from_mon",E,R[1397],14,N],[12,"isoweek",E,"ISO week number (1--52 or 1--53 depending on the year).",14,N],[12,"weekday",E,"Day of the week.",14,N],[12,"ordinal",E,"Day of the year (1--365 or 1--366 depending on the year).",14,N],[12,"day",E,"Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,N],[12,"hour_div_12",E,"Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,N],[12,"hour_mod_12",E,"Hour number modulo 12 (0--11).",14,N],[12,"minute",E,"Minute number (0--59).",14,N],[12,"second",E,"Second number (0--60, accounting for leap seconds).",14,N],[12,R[1439],E,"The number of nanoseconds since the whole second…",14,N],[12,R[1395],E,R[1398],14,N],[12,"offset",E,"Offset from the local time to UTC, in seconds.",14,N],[3,R[1461],E,"An opaque type representing numeric item types for…",N,N],[3,R[1462],E,"An opaque type representing fixed-format item types for…",N,N],[3,R[590],E,"An error from the `parse` function.",N,N],[3,R[1458],E,"A temporary object which can be used as an argument to…",N,N],[4,"Pad",E,"Padding characters for numeric items.",N,N],[13,"None",E,"No padding.",15,N],[13,"Zero",E,"Zero (`0`) padding.",15,N],[13,"Space",E,"Space padding.",15,N],[4,"Numeric",E,"Numeric item types. They have associated formatting width…",N,N],[13,"Year",E,"Full Gregorian year (FW=4, PW=∞). May accept years before…",16,N],[13,"YearDiv100",E,"Gregorian year divided by 100 (century number; FW=PW=2).…",16,N],[13,"YearMod100",E,"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,N],[13,"IsoYear",E,"Year in the ISO week date (FW=4, PW=∞). May accept years…",16,N],[13,"IsoYearDiv100",E,"Year in the ISO week date, divided by 100 (FW=PW=2).…",16,N],[13,"IsoYearMod100",E,"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,N],[13,"Month",E,"Month (FW=PW=2).",16,N],[13,"Day",E,"Day of the month (FW=PW=2).",16,N],[13,"WeekFromSun",E,R[1396],16,N],[13,"WeekFromMon",E,R[1397],16,N],[13,"IsoWeek",E,"Week number in the ISO week date (FW=PW=2).",16,N],[13,"NumDaysFromSun",E,"Day of the week, where Sunday = 0 and Saturday = 6…",16,N],[13,"WeekdayFromMon",E,"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,N],[13,"Ordinal",E,"Day of the year (FW=PW=3).",16,N],[13,"Hour",E,"Hour number in the 24-hour clocks (FW=PW=2).",16,N],[13,"Hour12",E,"Hour number in the 12-hour clocks (FW=PW=2).",16,N],[13,"Minute",E,"The number of minutes since the last whole hour (FW=PW=2).",16,N],[13,"Second",E,"The number of seconds since the last whole minute (FW=PW=2).",16,N],[13,"Nanosecond",E,"The number of nanoseconds since the last whole second…",16,N],[13,"Timestamp",E,R[1398],16,N],[13,"Internal",E,R[1400],16,N],[4,"Fixed",E,"Fixed-format item types.",N,N],[13,"ShortMonthName",E,"Abbreviated month names.",17,N],[13,"LongMonthName",E,"Full month names.",17,N],[13,"ShortWeekdayName",E,"Abbreviated day of the week names.",17,N],[13,"LongWeekdayName",E,"Full day of the week names.",17,N],[13,"LowerAmPm",E,"AM/PM.",17,N],[13,"UpperAmPm",E,"AM/PM.",17,N],[13,"Nanosecond",E,"An optional dot plus one or more digits for left-aligned…",17,N],[13,"Nanosecond3",E,"Same to `Nanosecond` but the accuracy is fixed to 3.",17,N],[13,"Nanosecond6",E,"Same to `Nanosecond` but the accuracy is fixed to 6.",17,N],[13,"Nanosecond9",E,"Same to `Nanosecond` but the accuracy is fixed to 9.",17,N],[13,"TimezoneName",E,"Timezone name.",17,N],[13,"TimezoneOffsetColon",E,R[1399],17,N],[13,"TimezoneOffsetColonZ",E,R[1399],17,N],[13,"TimezoneOffset",E,"Same to `TimezoneOffsetColon` but prints no colon. Parsing…",17,N],[13,"TimezoneOffsetZ",E,"Same to `TimezoneOffsetColonZ` but prints no colon.…",17,N],[13,"RFC2822",E,"RFC 2822 date and time syntax. Commonly used for email and…",17,N],[13,"RFC3339",E,"RFC 3339 & ISO 8601 date and time syntax.",17,N],[13,"Internal",E,R[1400],17,N],[4,"Item",E,"A single formatting item. This is used for both formatting…",N,N],[13,"Literal",E,"A literally printed and parsed text.",18,N],[13,"OwnedLiteral",E,"Same to `Literal` but with the string owned by the item.",18,N],[13,"Space",E,"Whitespace. Prints literally but reads zero or more…",18,N],[13,"OwnedSpace",E,"Same to `Space` but with the string owned by the item.",18,N],[13,"Numeric",E,"Numeric item. Can be optionally padded to the maximal…",18,N],[13,"Fixed",E,"Fixed-format item.",18,N],[13,"Error",E,"Issues a formatting error. Used to signal an invalid…",18,N],[5,"parse",E,"Tries to parse given string into `parsed` with given…",N,[[["i"],["parsed"],["str"]],[R[1352]]]],[5,"format",E,"Tries to format given arguments with given formatting…",N,[[[R[14]],[R[24]],[R[1345]],[R[24],[R[1345]]],[R[24],[R[1364]]],[R[1364]],["i"]],[R[2]]]],[11,"new",E,"Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year",E,"Tries to set the `year` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_year_div_100",E,"Tries to set the `year_div_100` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_year_mod_100",E,"Tries to set the `year_mod_100` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_isoyear",E,"Tries to set the `isoyear` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_isoyear_div_100",E,"Tries to set the `isoyear_div_100` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_isoyear_mod_100",E,"Tries to set the `isoyear_mod_100` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_month",E,"Tries to set the `month` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_week_from_sun",E,"Tries to set the `week_from_sun` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_week_from_mon",E,"Tries to set the `week_from_mon` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_isoweek",E,"Tries to set the `isoweek` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_weekday",E,"Tries to set the `weekday` field from given value.",14,[[["self"],["weekday"]],[R[1352]]]],[11,"set_ordinal",E,"Tries to set the `ordinal` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_day",E,"Tries to set the `day` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_ampm",E,"Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],[R[1352]]]],[11,"set_hour12",E,"Tries to set the `hour_mod_12` field from given hour…",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_hour",E,"Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_minute",E,"Tries to set the `minute` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_second",E,"Tries to set the `second` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_nanosecond",E,"Tries to set the `nanosecond` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_timestamp",E,"Tries to set the `timestamp` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"set_offset",E,"Tries to set the `offset` field from given value.",14,[[["self"],["i64"]],[R[1352]]]],[11,"to_naive_date",E,"Returns a parsed naive date out of given fields.",14,[[["self"]],[[R[1352],[R[1345]]],[R[1345]]]]],[11,"to_naive_time",E,"Returns a parsed naive time out of given fields.",14,[[["self"]],[[R[1364]],[R[1352],[R[1364]]]]]],[11,"to_naive_datetime_with_offset",E,"Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],[[R[1344]],[R[1352],[R[1344]]]]]],[11,"to_fixed_offset",E,"Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],[[R[1333]],[R[1352],[R[1333]]]]]],[11,"to_datetime",E,R[1401],14,[[["self"]],[[R[1352],[R[1343]]],[R[1343],[R[1333]]]]]],[11,"to_datetime_with_timezone",E,R[1401],14,[[["self"],["tz"]],[[R[1343]],[R[1352],[R[1343]]]]]],[0,"strftime",E,"`strftime`/`strptime`-inspired date and time formatting…",N,N],[3,R[1457],R[1406],"Parsing iterator for `strftime`-like format strings.",N,N],[11,"new",E,"Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],[R[1362]]]],[6,"ParseResult",R[1402],"Same to `Result<T, ParseError>`.",N,N],[11,"new",E,R[1403],20,[[[R[1345]],[R[1364]],["i"],[R[24],[R[1364]]],[R[24],[R[1345]]]],[R[1361]]]],[11,"new_with_offset",E,R[1403],20,[[[R[1345]],[R[1364]],["off"],["i"],[R[24],[R[1364]]],[R[24],[R[1345]]]],[R[1361]]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",N,N],[17,"MAX_DATE",E,"The maximum possible `Date`.",N,N],[8,R[1459],E,"Extension trait for subsecond rounding or truncation to a…",N,N],[10,"round_subsecs",E,"Return a copy rounded to the specified number of subsecond…",21,[[["u16"]],["self"]]],[10,"trunc_subsecs",E,"Return a copy truncated to the specified number of…",21,[[["u16"]],["self"]]],[8,"Datelike",E,"The common set of methods for date component.",N,N],[10,"year",E,R[1416],22,[[["self"]],["i32"]]],[11,"year_ce",E,"Returns the absolute year number starting from 1 with a…",22,[[["self"]]]],[10,"month",E,R[1417],22,[[["self"]],["u32"]]],[10,"month0",E,R[1418],22,[[["self"]],["u32"]]],[10,"day",E,R[1419],22,[[["self"]],["u32"]]],[10,"day0",E,R[1420],22,[[["self"]],["u32"]]],[10,"ordinal",E,R[1421],22,[[["self"]],["u32"]]],[10,"ordinal0",E,R[1422],22,[[["self"]],["u32"]]],[10,"weekday",E,R[1423],22,[[["self"]],["weekday"]]],[10,"iso_week",E,"Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,R[1434],E,"Makes a new value with the year number changed.",22,[[["self"],["i32"]],[R[24]]]],[10,R[1430],E,"Makes a new value with the month number (starting from 1)…",22,[[["self"],["u32"]],[R[24]]]],[10,R[1424],E,"Makes a new value with the month number (starting from 0)…",22,[[["self"],["u32"]],[R[24]]]],[10,"with_day",E,"Makes a new value with the day of month (starting from 1)…",22,[[["self"],["u32"]],[R[24]]]],[10,R[1435],E,"Makes a new value with the day of month (starting from 0)…",22,[[["self"],["u32"]],[R[24]]]],[10,R[1427],E,"Makes a new value with the day of year (starting from 1)…",22,[[["self"],["u32"]],[R[24]]]],[10,R[1428],E,"Makes a new value with the day of year (starting from 0)…",22,[[["self"],["u32"]],[R[24]]]],[11,"num_days_from_ce",E,"Returns the number of days since January 1, Year 1 (aka…",22,[[["self"]],["i32"]]],[8,"Timelike",E,"The common set of methods for time component.",N,N],[10,"hour",E,R[1436],23,[[["self"]],["u32"]]],[11,"hour12",E,"Returns the hour number from 1 to 12 with a boolean flag,…",23,[[["self"]]]],[10,"minute",E,R[1437],23,[[["self"]],["u32"]]],[10,"second",E,R[1438],23,[[["self"]],["u32"]]],[10,R[1439],E,R[1440],23,[[["self"]],["u32"]]],[10,R[1446],E,"Makes a new value with the hour number changed.",23,[[["self"],["u32"]],[R[24]]]],[10,R[1441],E,"Makes a new value with the minute number changed.",23,[[["self"],["u32"]],[R[24]]]],[10,R[1442],E,"Makes a new value with the second number changed.",23,[[["self"],["u32"]],[R[24]]]],[10,R[1443],E,"Makes a new value with nanoseconds since the whole…",23,[[["self"],["u32"]],[R[24]]]],[11,R[1444],E,R[1445],23,[[["self"]],["u32"]]],[11,"succ",E,"The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred",E,"The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday",E,"Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday",E,"Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday",E,"Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday",E,"Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"into",E,E,24,[[],[U]]],[11,R[82],E,E,24,[[["self"]],[R[81]]]],[11,R[83],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[R[81]]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,13,[[],[U]]],[11,R[82],E,E,13,[[["self"]],[R[81]]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"into",E,E,25,[[],[U]]],[11,R[83],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",R[1404],E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[R[81]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[R[81]]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",R[1405],E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[R[81]]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[R[81]]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[R[81]]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",R[1402],E,14,[[],[U]]],[11,R[83],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"into",E,E,26,[[],[U]]],[11,R[83],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"into",E,E,27,[[],[U]]],[11,R[83],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"into",E,E,28,[[],[U]]],[11,R[82],E,E,28,[[["self"]],[R[81]]]],[11,R[83],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[R[81]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"into",E,E,15,[[],[U]]],[11,R[83],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"into",E,E,16,[[],[U]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"into",E,E,17,[[],[U]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"into",E,E,18,[[],[U]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"into",R[1406],E,19,[[],[U]]],[11,R[22],E,E,19,[[],["i"]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"fmt","chrono",E,24,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"sub",E,E,24,[[[R[580]]],[R[580]]]],[11,"mul",E,E,24,[[["i32"]],[R[580]]]],[11,R[153],E,E,24,[[["self"],[R[580]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,24,[[["self"],[R[580]]],["bool"]]],[11,"le",E,E,24,[[["self"],[R[580]]],["bool"]]],[11,"gt",E,E,24,[[["self"],[R[580]]],["bool"]]],[11,"ge",E,E,24,[[["self"],[R[580]]],["bool"]]],[11,"neg",E,E,24,[[],[R[580]]]],[11,"cmp",E,E,24,[[["self"],[R[580]]],[R[23]]]],[11,"fmt",E,E,24,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"clone",E,E,24,[[["self"]],[R[580]]]],[11,"div",E,E,24,[[["i32"]],[R[580]]]],[11,"add",E,E,24,[[[R[580]]],[R[580]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"eq",E,E,24,[[["self"],[R[580]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[580]]],["bool"]]],[11,"fix",R[1404],E,3,[[["self"]],[R[1333]]]],[11,"fix",E,E,5,[[["self"]],[R[1333]]]],[11,R[1407],E,E,3,[[[R[1333]]],[R[1333]]]],[11,R[1408],E,E,3,[[["self"],[R[1345]]],[[R[1333]],[R[1339],[R[1333]]]]]],[11,R[1409],E,E,3,[[["self"],[R[1344]]],[[R[1333]],[R[1339],[R[1333]]]]]],[11,R[1410],E,E,3,[[["self"],[R[1345]]],[R[1333]]]],[11,R[1411],E,E,3,[[["self"],[R[1344]]],[R[1333]]]],[11,R[1407],E,E,4,[[[R[1333]]],["local"]]],[11,R[1408],E,E,4,[[["self"],[R[1345]]],[[R[1333]],[R[1339],[R[1333]]]]]],[11,R[1409],E,E,4,[[["self"],[R[1344]]],[[R[1333]],[R[1339],[R[1333]]]]]],[11,R[1410],E,E,4,[[["self"],[R[1345]]],[R[1333]]]],[11,R[1411],E,E,4,[[["self"],[R[1344]]],[R[1333]]]],[11,R[1412],E,E,4,[[["self"],[R[1345]]],[[R[1339],["date"]],["date",["local"]]]]],[11,R[1413],E,E,4,[[["self"],[R[1344]]],[[R[1343],["local"]],[R[1339],[R[1343]]]]]],[11,R[1414],E,E,4,[[["self"],[R[1345]]],[["date",["local"]],["local"]]]],[11,R[1415],E,E,4,[[["self"],[R[1344]]],[[R[1343],["local"]],["local"]]]],[11,R[1407],E,E,5,[[["utc"]],["utc"]]],[11,R[1408],E,E,5,[[["self"],[R[1345]]],[[R[1339],["utc"]],["utc"]]]],[11,R[1409],E,E,5,[[["self"],[R[1344]]],[[R[1339],["utc"]],["utc"]]]],[11,R[1410],E,E,5,[[["self"],[R[1345]]],["utc"]]],[11,R[1411],E,E,5,[[["self"],[R[1344]]],["utc"]]],[11,"year",R[1405],R[1416],8,[[["self"]],["i32"]]],[11,"month",E,R[1417],8,[[["self"]],["u32"]]],[11,"month0",E,R[1418],8,[[["self"]],["u32"]]],[11,"day",E,R[1419],8,[[["self"]],["u32"]]],[11,"day0",E,R[1420],8,[[["self"]],["u32"]]],[11,"ordinal",E,R[1421],8,[[["self"]],["u32"]]],[11,"ordinal0",E,R[1422],8,[[["self"]],["u32"]]],[11,"weekday",E,R[1423],8,[[["self"]],["weekday"]]],[11,"iso_week",E,E,8,[[["self"]],["isoweek"]]],[11,R[1434],E,"Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1430],E,R[1425],8,[[["self"],["u32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1424],E,R[1425],8,[[["self"],["u32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,"with_day",E,R[1426],8,[[["self"],["u32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1435],E,R[1426],8,[[["self"],["u32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1427],E,R[1429],8,[[["self"],["u32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,R[1428],E,R[1429],8,[[["self"],["u32"]],[[R[24],[R[1345]]],[R[1345]]]]],[11,"year",E,R[1416],11,[[["self"]],["i32"]]],[11,"month",E,R[1417],11,[[["self"]],["u32"]]],[11,"month0",E,R[1418],11,[[["self"]],["u32"]]],[11,"day",E,R[1419],11,[[["self"]],["u32"]]],[11,"day0",E,R[1420],11,[[["self"]],["u32"]]],[11,"ordinal",E,R[1421],11,[[["self"]],["u32"]]],[11,"ordinal0",E,R[1422],11,[[["self"]],["u32"]]],[11,"weekday",E,R[1423],11,[[["self"]],["weekday"]]],[11,"iso_week",E,E,11,[[["self"]],["isoweek"]]],[11,R[1434],E,"Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1430],E,R[1431],11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1424],E,R[1431],11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,"with_day",E,R[1432],11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1435],E,R[1432],11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1427],E,R[1433],11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1428],E,R[1433],11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,"year","chrono",E,12,[[["self"]],["i32"]]],[11,"month",E,E,12,[[["self"]],["u32"]]],[11,"month0",E,E,12,[[["self"]],["u32"]]],[11,"day",E,E,12,[[["self"]],["u32"]]],[11,"day0",E,E,12,[[["self"]],["u32"]]],[11,"ordinal",E,E,12,[[["self"]],["u32"]]],[11,"ordinal0",E,E,12,[[["self"]],["u32"]]],[11,"weekday",E,E,12,[[["self"]],["weekday"]]],[11,"iso_week",E,E,12,[[["self"]],["isoweek"]]],[11,R[1434],E,E,12,[[["self"],["i32"]],[["date"],[R[24],["date"]]]]],[11,R[1430],E,E,12,[[["self"],["u32"]],[["date"],[R[24],["date"]]]]],[11,R[1424],E,E,12,[[["self"],["u32"]],[["date"],[R[24],["date"]]]]],[11,"with_day",E,E,12,[[["self"],["u32"]],[["date"],[R[24],["date"]]]]],[11,R[1435],E,E,12,[[["self"],["u32"]],[["date"],[R[24],["date"]]]]],[11,R[1427],E,E,12,[[["self"],["u32"]],[["date"],[R[24],["date"]]]]],[11,R[1428],E,E,12,[[["self"],["u32"]],[["date"],[R[24],["date"]]]]],[11,"year",E,E,13,[[["self"]],["i32"]]],[11,"month",E,E,13,[[["self"]],["u32"]]],[11,"month0",E,E,13,[[["self"]],["u32"]]],[11,"day",E,E,13,[[["self"]],["u32"]]],[11,"day0",E,E,13,[[["self"]],["u32"]]],[11,"ordinal",E,E,13,[[["self"]],["u32"]]],[11,"ordinal0",E,E,13,[[["self"]],["u32"]]],[11,"weekday",E,E,13,[[["self"]],["weekday"]]],[11,"iso_week",E,E,13,[[["self"]],["isoweek"]]],[11,R[1434],E,E,13,[[["self"],["i32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1430],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1424],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,"with_day",E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1435],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1427],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1428],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,"hour",R[1405],R[1436],10,[[["self"]],["u32"]]],[11,"minute",E,R[1437],10,[[["self"]],["u32"]]],[11,"second",E,R[1438],10,[[["self"]],["u32"]]],[11,R[1439],E,R[1440],10,[[["self"]],["u32"]]],[11,R[1446],E,"Makes a new `NaiveTime` with the hour number changed.",10,[[["self"],["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,R[1441],E,"Makes a new `NaiveTime` with the minute number changed.",10,[[["self"],["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,R[1442],E,"Makes a new `NaiveTime` with the second number changed.",10,[[["self"],["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,R[1443],E,"Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["self"],["u32"]],[[R[24],[R[1364]]],[R[1364]]]]],[11,R[1444],E,R[1445],10,[[["self"]],["u32"]]],[11,"hour",E,R[1436],11,[[["self"]],["u32"]]],[11,"minute",E,R[1437],11,[[["self"]],["u32"]]],[11,"second",E,R[1438],11,[[["self"]],["u32"]]],[11,R[1439],E,R[1440],11,[[["self"]],["u32"]]],[11,R[1446],E,"Makes a new `NaiveDateTime` with the hour number changed.",11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1441],E,"Makes a new `NaiveDateTime` with the minute number changed.",11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1442],E,"Makes a new `NaiveDateTime` with the second number changed.",11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,R[1443],E,"Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["self"],["u32"]],[[R[24],[R[1344]]],[R[1344]]]]],[11,"hour","chrono",E,13,[[["self"]],["u32"]]],[11,"minute",E,E,13,[[["self"]],["u32"]]],[11,"second",E,E,13,[[["self"]],["u32"]]],[11,R[1439],E,E,13,[[["self"]],["u32"]]],[11,R[1446],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1441],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1442],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[1443],E,E,13,[[["self"],["u32"]],[[R[1343]],[R[24],[R[1343]]]]]],[11,R[188],R[1402],E,14,[[],["parsed"]]],[11,"clone",R[1404],E,2,[[["self"]],[R[1339]]]],[11,"clone",E,E,3,[[["self"]],[R[1333]]]],[11,"clone",E,E,4,[[["self"]],["local"]]],[11,"clone",E,E,5,[[["self"]],["utc"]]],[11,"clone",R[1405],E,8,[[["self"]],[R[1345]]]],[11,"clone",E,E,9,[[["self"]],["isoweek"]]],[11,"clone",E,E,10,[[["self"]],[R[1364]]]],[11,"clone",E,E,11,[[["self"]],[R[1344]]]],[11,"clone","chrono",E,12,[[["self"]],["date"]]],[11,"clone",E,E,0,[[["self"]],[R[1447]]]],[11,"clone",E,E,13,[[["self"]],[R[1343]]]],[11,"clone",R[1402],E,15,[[["self"]],["pad"]]],[11,"clone",E,E,16,[[["self"]],["numeric"]]],[11,"clone",E,E,26,[[["self"]],["self"]]],[11,"clone",E,E,17,[[["self"]],["fixed"]]],[11,"clone",E,E,27,[[["self"]],[R[1448]]]],[11,"clone",E,E,18,[[["self"]],["item"]]],[11,"clone",E,E,28,[[["self"]],[R[578]]]],[11,"clone",E,E,14,[[["self"]],["parsed"]]],[11,"clone",R[1406],E,19,[[["self"]],[R[1362]]]],[11,"clone","chrono",E,1,[[["self"]],["weekday"]]],[11,"clone",E,E,25,[[["self"]],[R[1449]]]],[11,R[153],R[1405],E,8,[[["self"],[R[1345]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,8,[[["self"],[R[1345]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[1345]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[1345]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[1345]]],["bool"]]],[11,R[153],E,E,9,[[["self"],["isoweek"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"le",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,R[153],E,E,10,[[["self"],[R[1364]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,10,[[["self"],[R[1364]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[1364]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[1364]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[1364]]],["bool"]]],[11,R[153],E,E,11,[[["self"],[R[1344]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,11,[[["self"],[R[1344]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[1344]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[1344]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[1344]]],["bool"]]],[11,R[153],"chrono",E,12,[[["self"],["date"]],[[R[24],[R[23]]],[R[23]]]]],[11,R[153],E,E,13,[[["self"],[R[1343]]],[[R[24],[R[23]]],[R[23]]]]],[11,"cmp",R[1405],E,8,[[["self"],[R[1345]]],[R[23]]]],[11,"cmp",E,E,9,[[["self"],["isoweek"]],[R[23]]]],[11,"cmp",E,E,10,[[["self"],[R[1364]]],[R[23]]]],[11,"cmp",E,E,11,[[["self"],[R[1344]]],[R[23]]]],[11,"cmp","chrono",E,12,[[["self"],["date"]],[R[23]]]],[11,"cmp",E,E,13,[[["self"],[R[1343]]],[R[23]]]],[11,"eq",R[1404],E,2,[[["self"],[R[1339]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1339]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1333]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1333]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["utc"]],["bool"]]],[11,"eq",R[1405],E,8,[[["self"],[R[1345]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[1345]]],["bool"]]],[11,"eq",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1364]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1364]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[1344]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[1344]]],["bool"]]],[11,"eq","chrono",E,12,[[["self"],["date"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1447]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1343]]],["bool"]]],[11,"eq",R[1402],E,15,[[["self"],["pad"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["numeric"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["numeric"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["fixed"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["fixed"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[1448]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[1448]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["item"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["item"]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[578]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[578]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["parsed"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["parsed"]],["bool"]]],[11,"eq","chrono",E,1,[[["self"],["weekday"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[1449]]],["bool"]]],[11,"from",E,R[1450],13,[[["utc"],[R[1343],["utc"]]],["self"]]],[11,"from",E,R[1450],13,[[["utc"],[R[1343],["utc"]]],["self"]]],[11,"from",E,R[1451],13,[[[R[1333]],[R[1343],[R[1333]]]],["self"]]],[11,"from",E,R[1451],13,[[[R[1333]],[R[1343],[R[1333]]]],["self"]]],[11,"from",E,R[1452],13,[[[R[1343],["local"]],["local"]],["self"]]],[11,"from",E,R[1452],13,[[[R[1343],["local"]],["local"]],["self"]]],[11,"from",E,E,13,[[["systemtime"]],[["utc"],[R[1343],["utc"]]]]],[11,"from",E,E,13,[[["systemtime"]],[[R[1343],["local"]],["local"]]]],[11,"next",R[1406],E,19,[[["self"]],[["item"],[R[24],["item"]]]]],[11,"hash",R[1404],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",R[1405],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,11,[[["self"],["h"]]]],[11,"hash","chrono",E,12,[[["self"],["h"]]]],[11,"hash",E,E,13,[[["self"],["h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"add",R[1405],E,10,[[[R[1333]]],[R[1364]]]],[11,"add",E,E,11,[[[R[1333]]],[R[1344]]]],[11,"add","chrono",E,13,[[[R[1333]]],[R[1343]]]],[11,"add",R[1405],E,8,[[[R[1360]]],[R[1345]]]],[11,"add",E,E,10,[[[R[1360]]],[R[1364]]]],[11,"add",E,E,11,[[[R[1360]]],[R[1344]]]],[11,"add","chrono",E,12,[[[R[1360]]],["date"]]],[11,"add",E,E,13,[[[R[1360]]],[R[1343]]]],[11,"sub",R[1405],E,10,[[[R[1333]]],[R[1364]]]],[11,"sub",E,E,11,[[[R[1333]]],[R[1344]]]],[11,"sub","chrono",E,13,[[[R[1333]]],[R[1343]]]],[11,"sub",R[1405],E,8,[[[R[1360]]],[R[1345]]]],[11,"sub",E,E,8,[[[R[1345]]],[R[1360]]]],[11,"sub",E,E,10,[[[R[1360]]],[R[1364]]]],[11,"sub",E,E,10,[[[R[1364]]],[R[1360]]]],[11,"sub",E,E,11,[[[R[1360]]],[R[1344]]]],[11,"sub",E,E,11,[[[R[1344]]],[R[1360]]]],[11,"sub","chrono",E,12,[[[R[1360]]],["date"]]],[11,"sub",E,E,12,[[["date"]],[R[1360]]]],[11,"sub",E,E,13,[[[R[1360]]],[R[1343]]]],[11,"sub",E,E,13,[[[R[1343]]],[R[1360]]]],[11,R[656],R[1405],E,8,[[["self"],[R[1360]]]]],[11,R[656],E,E,10,[[["self"],[R[1360]]]]],[11,R[656],E,E,11,[[["self"],[R[1360]]]]],[11,R[657],E,E,8,[[["self"],[R[1360]]]]],[11,R[657],E,E,10,[[["self"],[R[1360]]]]],[11,R[657],E,E,11,[[["self"],[R[1360]]]]],[11,"fmt",R[1404],E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1405],E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","chrono",E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1402],E,28,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1404],E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1405],E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","chrono",E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1402],E,15,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1406],E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1402],E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","chrono",E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[R[2]]]],[11,R[670],R[1405],E,8,[[["str"]],[[R[1352],[R[1345]]],[R[1345]]]]],[11,R[670],E,E,10,[[["str"]],[[R[1364]],[R[1352],[R[1364]]]]]],[11,R[670],E,E,11,[[["str"]],[[R[1344]],[R[1352],[R[1344]]]]]],[11,R[670],"chrono",E,13,[[["str"]],[[R[1352],[R[1343]]],[R[1343],[R[1333]]]]]],[11,R[670],E,E,13,[[["str"]],[[R[1352],[R[1343]]],[R[1343],["utc"]]]]],[11,R[670],E,E,13,[[["str"]],[[R[1352],[R[1343]]],[R[1343],["local"]]]]],[11,R[670],E,E,1,[[["str"]],[R[2]]]],[11,R[93],R[1402],E,28,[[["self"]],["str"]]],[11,R[1047],"chrono",E,1,[[["i64"]],[[R[24],["weekday"]],["weekday"]]]],[11,R[1048],E,E,1,[[["u64"]],[[R[24],["weekday"]],["weekday"]]]],[11,"weeks",E,R[1464],24,[[["i64"]],[R[580]]]],[11,"days",E,R[1465],24,[[["i64"]],[R[580]]]],[11,"hours",E,R[1466],24,[[["i64"]],[R[580]]]],[11,"minutes",E,R[1467],24,[[["i64"]],[R[580]]]],[11,"seconds",E,R[1468],24,[[["i64"]],[R[580]]]],[11,R[1469],E,R[1470],24,[[["i64"]],[R[580]]]],[11,R[1471],E,R[1472],24,[[["i64"]],[R[580]]]],[11,R[1473],E,R[1474],24,[[["i64"]],[R[580]]]],[11,"span",E,R[1475],24,[[["f"]],[R[580]]]],[11,"num_weeks",E,R[1476],24,[[["self"]],["i64"]]],[11,"num_days",E,R[1477],24,[[["self"]],["i64"]]],[11,"num_hours",E,R[1478],24,[[["self"]],["i64"]]],[11,R[1479],E,R[1480],24,[[["self"]],["i64"]]],[11,R[1481],E,R[1482],24,[[["self"]],["i64"]]],[11,R[1483],E,R[1484],24,[[["self"]],["i64"]]],[11,R[1485],E,R[1486],24,[[["self"]],[["i64"],[R[24],["i64"]]]]],[11,R[1487],E,R[1488],24,[[["self"]],[["i64"],[R[24],["i64"]]]]],[11,R[581],E,R[1489],24,[[["self"],[R[580]]],[[R[24],[R[580]]],[R[580]]]]],[11,R[582],E,R[1490],24,[[["self"],[R[580]]],[[R[24],[R[580]]],[R[580]]]]],[11,R[468],E,R[1491],24,[[],[R[580]]]],[11,R[469],E,R[1492],24,[[],[R[580]]]],[11,"zero",E,R[1493],24,[[],[R[580]]]],[11,"is_zero",E,R[1494],24,[[["self"]],["bool"]]],[11,"from_std",E,R[1495],24,[[[R[580]]],[[R[580]],[R[583]],[R[2],[R[580],R[583]]]]]],[11,"to_std",E,R[1496],24,[[["self"]],[[R[580]],[R[2],[R[580],R[583]]],[R[583]]]]]],"p":[[4,R[1453]],[4,"Weekday"],[4,R[1454]],[3,R[1455]],[3,"Local"],[3,"Utc"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,R[1456]],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,R[1457]],[3,R[1458]],[8,R[1459]],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,R[1460]],[3,R[1461]],[3,R[1462]],[3,R[590]]]};
searchIndex["color_quant"]={"doc":"Color quantization library This library provides a color…","i":[[3,R[44],"color_quant","Neural network based color quantizer.",N,N],[11,"new",E,"Creates a new neuronal network and trains it with the…",0,[[["usize"],["i32"]],["self"]]],[11,"init",E,"Initializes the neuronal network and trains it with the…",0,[[["self"]]]],[11,"map_pixel",E,"Maps the rgba-pixel in-place to the best-matching color in…",0,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map.",0,[[["self"]],["usize"]]],[11,"color_map_rgba",E,R[43],0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"color_map_rgb",E,R[43],0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]]],"p":[[3,R[44]]]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","i":[[3,"Worker","crossbeam_deque","The worker side of a deque.",N,N],[3,"Stealer",E,"The stealer side of a deque.",N,N],[4,"Pop",E,"Possible outcomes of a pop operation.",N,N],[13,"Empty",E,"The deque was empty at the time of popping.",0,N],[13,"Data",E,"Some data has been successfully popped.",0,N],[13,"Retry",E,"Lost the race for popping data to another concurrent steal…",0,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The deque was empty at the time of stealing.",1,N],[13,"Data",E,"Some data has been successfully stolen.",1,N],[13,"Retry",E,"Lost the race for stealing data to another concurrent…",1,N],[5,"fifo",E,"Creates a work-stealing deque with the first-in first-out…",N,[[]]],[5,"lifo",E,"Creates a work-stealing deque with the last-in first-out…",N,[[]]],[11,R[461],E,R[671],2,[[["self"]],["bool"]]],[11,"push",E,"Pushes an element into the back of the deque.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the deque.",2,[[["self"]],["pop"]]],[11,R[461],E,R[671],3,[[["self"]],["bool"]]],[11,"steal",E,"Steals an element from the front of the deque.",3,[[["self"]],["steal"]]],[11,"steal_many",E,"Steals elements from the front of the deque.",3,[[["self"],["worker"]],["steal"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"clone",E,E,0,[[["self"]],["pop"]]],[11,"clone",E,E,1,[[["self"]],["steal"]]],[11,"clone",E,E,3,[[["self"]],["stealer"]]],[11,R[153],E,E,0,[[["self"],["pop"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"le",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["pop"]],["bool"]]],[11,R[153],E,E,1,[[["self"],["steal"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"le",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["pop"]],[R[23]]]],[11,"cmp",E,E,1,[[["self"],["steal"]],[R[23]]]],[11,"eq",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]]],"p":[[4,"Pop"],[4,"Steal"],[3,"Worker"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,R[573],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,R[574],E,"An epoch-based garbage collector.",N,N],[3,R[575],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[568]]]],[5,R[567],E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["self"],[R[23]],["guard"]],["shared"]]],[11,R[577],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],["shared"]]],[11,"store",E,R[561],1,[[["self"],["pointer"],[R[23]]]]],[11,"swap",E,R[561],1,[[["self"],["guard"],["pointer"],[R[23]]],["shared"]]],[11,"compare_and_set",E,R[563],1,[[["self"],["shared"],["o"],["p"],["guard"]],[["shared"],[R[562]],[R[2],["shared",R[562]]]]]],[11,"compare_and_set_weak",E,R[563],1,[[["self"],["shared"],["o"],["p"],["guard"]],[["shared"],[R[562]],[R[2],["shared",R[562]]]]]],[11,R[169],E,"Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],[R[23]],["guard"]],["shared"]]],[11,R[174],E,"Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],[R[23]],["guard"]],["shared"]]],[11,R[172],E,"Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],[R[23]],["guard"]],["shared"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared",E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[565],2,[[["self"]],["usize"]]],[11,"with_tag",E,R[566],2,[[["usize"]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[564],3,[[["self"]],[T]]],[11,R[13],E,R[564],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[T],[R[24]]]]],[11,"into_owned",E,"Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag",E,R[565],3,[[["self"]],["usize"]]],[11,"with_tag",E,R[566],3,[[["self"],["usize"]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,"register",E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,R[567],E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[568],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[568]]]],[11,"defer",E,R[569],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[569],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[568],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[24],[R[568]]],[R[568]]]]],[8,R[576],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[23]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[23]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[570],E,"Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,R[571],E,R[572],8,[[["usize"]],["self"]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[570],E,E,2,[[],["usize"]]],[11,R[571],E,R[572],2,[[["usize"]],["self"]]],[11,R[570],E,E,3,[[],["usize"]]],[11,R[571],E,E,3,[[["usize"]],["self"]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[188],E,E,1,[[],["self"]]],[11,R[188],E,E,3,[[],["self"]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,R[153],E,E,3,[[["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,"cmp",E,E,3,[[["self"]],[R[23]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[568]]],["bool"]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]]],"p":[[3,R[573]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,R[574]],[3,R[575]],[3,"Guard"],[8,R[576]],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","i":[[3,R[460],"crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,R[459],E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[454]],[R[2],[R[454]]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[2],[R[456]]],[R[456]]]]],[11,R[455],E,"Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,R[461],E,R[457],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[458],1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[2],[R[456]]],[R[456]]]]],[11,R[461],E,R[457],2,[[["self"]],["bool"]]],[11,"len",E,R[458],2,[[["self"]],["usize"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[R[81]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,R[188],E,E,2,[[],["segqueue"]]],[11,"clone",E,E,3,[[["self"]],[R[456]]]],[11,"clone",E,E,0,[[["self"]],[R[454]]]],[11,"eq",E,E,3,[[["self"],[R[456]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[454]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[454]]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,3,[[["self"]],["str"]]],[11,R[93],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[459]],[3,R[460]],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[194],R[175],R[176],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[192],R[183],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[186]]]],[11,"get_mut",E,"Returns a mutable reference to the inner value.",0,[[["self"]],[T]]],[11,R[25],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[164],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[164],0,[[["self"],[T]],[R[2]]]],[11,R[165],E,R[166],0,[[["self"],["u8"]],["u8"]]],[11,R[167],E,R[168],0,[[["self"],["u8"]],["u8"]]],[11,R[169],E,R[170],0,[[["self"],["u8"]],["u8"]]],[11,R[174],E,R[171],0,[[["self"],["u8"]],["u8"]]],[11,R[172],E,R[173],0,[[["self"],["u8"]],["u8"]]],[11,R[165],E,R[166],0,[[["self"],["i8"]],["i8"]]],[11,R[167],E,R[168],0,[[["self"],["i8"]],["i8"]]],[11,R[169],E,R[170],0,[[["self"],["i8"]],["i8"]]],[11,R[174],E,R[171],0,[[["self"],["i8"]],["i8"]]],[11,R[172],E,R[173],0,[[["self"],["i8"]],["i8"]]],[11,R[165],E,R[166],0,[[["self"],["u16"]],["u16"]]],[11,R[167],E,R[168],0,[[["self"],["u16"]],["u16"]]],[11,R[169],E,R[170],0,[[["self"],["u16"]],["u16"]]],[11,R[174],E,R[171],0,[[["self"],["u16"]],["u16"]]],[11,R[172],E,R[173],0,[[["self"],["u16"]],["u16"]]],[11,R[165],E,R[166],0,[[["self"],["i16"]],["i16"]]],[11,R[167],E,R[168],0,[[["self"],["i16"]],["i16"]]],[11,R[169],E,R[170],0,[[["self"],["i16"]],["i16"]]],[11,R[174],E,R[171],0,[[["self"],["i16"]],["i16"]]],[11,R[172],E,R[173],0,[[["self"],["i16"]],["i16"]]],[11,R[165],E,R[166],0,[[["self"],["u32"]],["u32"]]],[11,R[167],E,R[168],0,[[["self"],["u32"]],["u32"]]],[11,R[169],E,R[170],0,[[["self"],["u32"]],["u32"]]],[11,R[174],E,R[171],0,[[["self"],["u32"]],["u32"]]],[11,R[172],E,R[173],0,[[["self"],["u32"]],["u32"]]],[11,R[165],E,R[166],0,[[["self"],["i32"]],["i32"]]],[11,R[167],E,R[168],0,[[["self"],["i32"]],["i32"]]],[11,R[169],E,R[170],0,[[["self"],["i32"]],["i32"]]],[11,R[174],E,R[171],0,[[["self"],["i32"]],["i32"]]],[11,R[172],E,R[173],0,[[["self"],["i32"]],["i32"]]],[11,R[165],E,R[166],0,[[["self"],["u64"]],["u64"]]],[11,R[167],E,R[168],0,[[["self"],["u64"]],["u64"]]],[11,R[169],E,R[170],0,[[["self"],["u64"]],["u64"]]],[11,R[174],E,R[171],0,[[["self"],["u64"]],["u64"]]],[11,R[172],E,R[173],0,[[["self"],["u64"]],["u64"]]],[11,R[165],E,R[166],0,[[["self"],["i64"]],["i64"]]],[11,R[167],E,R[168],0,[[["self"],["i64"]],["i64"]]],[11,R[169],E,R[170],0,[[["self"],["i64"]],["i64"]]],[11,R[174],E,R[171],0,[[["self"],["i64"]],["i64"]]],[11,R[172],E,R[173],0,[[["self"],["i64"]],["i64"]]],[11,R[165],E,R[166],0,[[["self"],["u128"]],["u128"]]],[11,R[167],E,R[168],0,[[["self"],["u128"]],["u128"]]],[11,R[169],E,R[170],0,[[["self"],["u128"]],["u128"]]],[11,R[174],E,R[171],0,[[["self"],["u128"]],["u128"]]],[11,R[172],E,R[173],0,[[["self"],["u128"]],["u128"]]],[11,R[165],E,R[166],0,[[["self"],["i128"]],["i128"]]],[11,R[167],E,R[168],0,[[["self"],["i128"]],["i128"]]],[11,R[169],E,R[170],0,[[["self"],["i128"]],["i128"]]],[11,R[174],E,R[171],0,[[["self"],["i128"]],["i128"]]],[11,R[172],E,R[173],0,[[["self"],["i128"]],["i128"]]],[11,R[165],E,R[166],0,[[["self"],["usize"]],["usize"]]],[11,R[167],E,R[168],0,[[["self"],["usize"]],["usize"]]],[11,R[169],E,R[170],0,[[["self"],["usize"]],["usize"]]],[11,R[174],E,R[171],0,[[["self"],["usize"]],["usize"]]],[11,R[172],E,R[173],0,[[["self"],["usize"]],["usize"]]],[11,R[165],E,R[166],0,[[["self"],["isize"]],["isize"]]],[11,R[167],E,R[168],0,[[["self"],["isize"]],["isize"]]],[11,R[169],E,R[170],0,[[["self"],["isize"]],["isize"]]],[11,R[174],E,R[171],0,[[["self"],["isize"]],["isize"]]],[11,R[172],E,R[173],0,[[["self"],["isize"]],["isize"]]],[11,R[169],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[174],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[172],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[193],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[577],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[175],R[176],2,[[[T]],[R[187]]]],[11,R[25],E,"Returns the value value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[195],R[184],"A sharded reader-writer lock.",N,N],[3,R[199],E,"A guard used to release the shared read access of a…",N,N],[3,R[200],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[196],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout",E,"Blocks the current thread until the token is made…",4,[[["self"],[R[580]]]]],[11,R[190],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[190]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[189]]]],[11,R[25],E,"Consumes this lock, returning the underlying data.",6,[[],[R[177]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying data.",6,[[["self"]],[[R[177]],[T]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[179],[R[178]]],[R[178]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[177],[R[178]]],[R[178]]]]],[11,"try_write",E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[180]],[R[179],[R[180]]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[180]],[R[177],[R[180]]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[191]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[175],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[185],"A scope for spawning threads.",N,N],[3,R[197],E,"Configures the properties of a new thread.",N,N],[3,R[198],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[2]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[182]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[181]]]],[11,"name",E,"Sets the name for the new thread.",9,[[[R[81]]],[R[181]]]],[11,R[1530],E,"Sets the size of the stack for the new thread.",9,[[["usize"]],[R[181]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[2],[R[182]]],[R[182]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[2]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"into",R[175],E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",R[183],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",R[184],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[R[81]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[R[81]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",R[185],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"drop",R[184],E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,R[188],R[183],E,0,[[],[R[186]]]],[11,R[188],R[175],E,2,[[],[R[187]]]],[11,R[188],E,E,3,[[],["backoff"]]],[11,R[188],R[184],E,6,[[],[R[189]]]],[11,"clone",R[175],E,2,[[["self"]],[R[187]]]],[11,"clone",R[184],E,5,[[["self"]],[R[190]]]],[11,"clone",E,E,7,[[["self"]],[R[191]]]],[11,"eq",R[175],E,2,[[["self"],[R[187]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[187]]],["bool"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",R[184],E,6,[[[T]],["self"]]],[11,R[13],R[175],E,2,[[["self"]],[T]]],[11,R[13],R[184],E,12,[[["self"]],[T]]],[11,"hash",R[175],E,2,[[["self"],["__h"]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",R[184],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[183],E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[175],E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[184],E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[185],E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]]],"p":[[3,R[192]],[8,R[193]],[3,R[194]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[195]],[3,R[196]],[3,"Scope"],[3,R[197]],[3,R[198]],[3,R[199]],[3,R[200]]]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,R[605],"deflate","A struct describing the options for a compressor or…",N,N],[12,"max_hash_checks",E,"The maximum number of checks to make in the hash table for…",0,N],[12,"lazy_if_less_than",E,"Only lazy match if we have a length less than this value.",0,N],[12,"matching_type",E,"Whether to use lazy or greedy matching.",0,N],[12,"special",E,"Force fixed/stored blocks (Not implemented yet). * Default…",0,N],[4,R[606],E,"Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal",E,"Compress normally.",1,N],[13,"_ForceFixed",E,"Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored",E,"Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,R[607],E,"An enum describing the level of compression to be used by…",N,N],[13,"Fast",E,"Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default",E,"Default level (`CompressionOptions::default()`).",2,N],[13,"Best",E,"Higher compression level (`CompressionOptions::high()`).",2,N],[4,R[608],E,"An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy",E,"Use greedy matching: the matching algorithm simply uses a…",3,N],[13,"Lazy",E,"Use lazy matching: after finding a match, the next input…",3,N],[5,"deflate_bytes_conf",E,"Compress the given slice of bytes with DEFLATE compression.",N,[[["into",[R[594]]],[R[594]]],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes",E,"Compress the given slice of bytes with DEFLATE compression…",N,[[],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes_zlib_conf",E,R[595],N,[[["into",[R[594]]],[R[594]]],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes_zlib",E,R[595],N,[[],[["u8"],["vec",["u8"]]]]],[11,"high",E,"Returns compression settings rouhgly corresponding to the…",0,[[],[R[594]]]],[11,"fast",E,"Returns  a fast set of compression settings",0,[[],[R[594]]]],[11,"huffman_only",E,R[596],0,[[],[R[594]]]],[11,"rle",E,R[596],0,[[],[R[594]]]],[0,"write",E,"Encoders implementing a `Write` interface.",N,N],[3,R[609],R[597],"A DEFLATE encoder/compressor.",N,N],[3,R[610],E,"A Zlib encoder/compressor.",N,N],[11,"into","deflate",E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[R[81]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",R[597],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"drop",E,R[598],4,[[["self"]]]],[11,"drop",E,R[598],5,[[["self"]]]],[11,R[188],"deflate",E,2,[[],[R[599]]]],[11,R[188],E,E,1,[[],[R[600]]]],[11,R[188],E,"Returns the options describing the default compression…",0,[[],[R[594]]]],[11,"clone",E,E,2,[[["self"]],[R[599]]]],[11,"clone",E,E,1,[[["self"]],[R[600]]]],[11,"clone",E,E,0,[[["self"]],[R[594]]]],[11,"clone",E,E,3,[[["self"]],[R[601]]]],[11,R[153],E,E,2,[[["self"],[R[599]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,3,[[["self"],[R[601]]],[[R[23]],[R[24],[R[23]]]]]],[11,"cmp",E,E,2,[[["self"],[R[599]]],[R[23]]]],[11,"cmp",E,E,3,[[["self"],[R[601]]],[R[23]]]],[11,"eq",E,E,2,[[["self"],[R[599]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[600]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[594]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[594]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[601]]],["bool"]]],[11,"from",E,E,0,[[[R[599]]],[R[594]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"write",R[597],E,4,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,R[602],4,[[["self"]],[R[2]]]],[11,"write",E,E,5,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,R[602],5,[[["self"]],[R[2]]]],[11,"new",E,"Creates a new encoder using the provided compression…",4,[[["w"],["into",[R[594]]],[R[594]]],["deflateencoder"]]],[11,"finish",E,R[603],4,[[],[R[2]]]],[11,"reset",E,R[604],4,[[["self"],["w"]],[R[2]]]],[11,"new",E,"Create a new `ZlibEncoder` using the provided compression…",5,[[["w"],["into",[R[594]]],[R[594]]],["zlibencoder"]]],[11,"finish",E,R[603],5,[[],[R[2]]]],[11,"reset",E,R[604],5,[[["self"],["w"]],[R[2]]]],[11,"checksum",E,"Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"p":[[3,R[605]],[4,R[606]],[4,R[607]],[4,R[608]],[3,R[609]],[3,R[610]]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either",R[17],R[1594],N,N],[13,"Left",E,R[1595],0,N],[13,"Right",E,R[1596],0,N],[11,"is_left",E,R[1646],0,[[["self"]],["bool"]]],[11,"is_right",E,R[1647],0,[[["self"]],["bool"]]],[11,"left",E,R[1648],0,[[],[R[24]]]],[11,"right",E,R[1649],0,[[],[R[24]]]],[11,"as_ref",E,R[1650],0,[[["self"]],[["r"],[R[17]],["l"]]]],[11,"as_mut",E,R[1651],0,[[["self"]],[["r"],["l"],[R[17]]]]],[11,"flip",E,R[1652],0,[[],[R[17]]]],[11,"map_left",E,R[18],0,[[["f"]],[R[17]]]],[11,"map_right",E,R[19],0,[[["f"]],[R[17]]]],[11,R[17],E,R[1653],0,[[["f"],["g"]],[T]]],[11,R[1654],E,R[1655],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[1656],E,R[18],0,[[["f"]],[R[17]]]],[11,R[1657],E,R[19],0,[[["f"]],[R[17]]]],[11,R[22],E,R[1658],0,[[],[R[17]]]],[11,"left_or",E,R[1659],0,[[["l"]],["l"]]],[11,R[1660],E,R[1661],0,[[],["l"]]],[11,R[1662],E,R[20],0,[[["f"]],["l"]]],[11,"right_or",E,R[1663],0,[[["r"]],["r"]]],[11,R[1664],E,R[1665],0,[[],["r"]]],[11,R[1666],E,R[20],0,[[["f"]],["r"]]],[11,R[1667],E,R[21],0,[[]]],[11,R[1668],E,R[21],0,[[]]],[11,R[25],E,R[1669],0,[[],[T]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[22],E,E,0,[[],["i"]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[13],E,E,0,[[["self"]]]],[11,"from",E,E,0,[[[R[2]]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[17]]],[R[23]]]],[11,R[153],E,E,0,[[["self"],[R[17]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[154],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[24]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[24]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[155],E,E,0,[[["self"]],[R[24]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"clone",E,E,0,[[["self"]],[R[17]]]]],"p":[[4,"Either"]]};
searchIndex["expat_sys"]={"doc":E,"i":[],"p":[]};
searchIndex["font_loader"]={"doc":"Font-Loader A font loading utility written in and for rust.","i":[[0,"system_fonts","font_loader","Font loading utilities for installed system fonts",N,N],[3,R[1570],"font_loader::system_fonts","The platform specific font properties",N,N],[3,R[1571],E,"Builder for FontProperty",N,N],[5,"get",E,"Get the binary data and index of a specific font Note that…",N,[[[R[1568]]],[R[24]]]],[5,"query_all",E,"Query the names of all fonts installed in the system Note…",N,[[],[["vec",[R[81]]],[R[81]]]]],[5,"query_specific",E,"Query the names of specifc fonts installed in the system…",N,[[[R[1568]]],[["vec",[R[81]]],[R[81]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"new",E,E,1,[[],[R[1569]]]],[11,"italic",E,E,1,[[],[R[1569]]]],[11,"oblique",E,E,1,[[],[R[1569]]]],[11,"bold",E,E,1,[[],[R[1569]]]],[11,"monospace",E,E,1,[[],[R[1569]]]],[11,"family",E,E,1,[[["str"]],[R[1569]]]],[11,"build",E,E,1,[[],[R[1568]]]]],"p":[[3,R[1570]],[3,R[1571]]]};
searchIndex["fontconfig"]={"doc":E,"i":[[0,"fontconfig","fontconfig",E,N,N],[3,R[1542],"fontconfig::fontconfig",E,N,N],[12,"xx",E,E,0,N],[12,"xy",E,E,0,N],[12,"yx",E,E,0,N],[12,"yy",E,E,0,N],[3,R[1543],E,E,N,N],[12,"object",E,E,1,N],[12,"_type",E,E,1,N],[3,R[1544],E,E,N,N],[12,"name",E,E,2,N],[12,"object",E,E,2,N],[12,"value",E,E,2,N],[3,R[1545],E,E,N,N],[12,"_type",E,E,3,N],[12,U,E,E,3,N],[3,R[1546],E,E,N,N],[12,"nfont",E,E,4,N],[12,"sfont",E,E,4,N],[12,"fonts",E,E,4,N],[3,R[1547],E,E,N,N],[12,"nobject",E,E,5,N],[12,"sobject",E,E,5,N],[12,"objects",E,E,5,N],[5,"FcBlanksCreate",E,E,N,N],[5,"FcBlanksDestroy",E,E,N,N],[5,"FcBlanksAdd",E,E,N,N],[5,"FcBlanksIsMember",E,E,N,N],[5,"FcCacheDir",E,E,N,N],[5,"FcCacheCopySet",E,E,N,N],[5,"FcCacheSubdir",E,E,N,N],[5,"FcCacheNumSubdir",E,E,N,N],[5,"FcCacheNumFont",E,E,N,N],[5,"FcDirCacheUnlink",E,E,N,N],[5,"FcDirCacheValid",E,E,N,N],[5,"FcConfigHome",E,E,N,N],[5,"FcConfigEnableHome",E,E,N,N],[5,"FcConfigFilename",E,E,N,N],[5,"FcConfigCreate",E,E,N,N],[5,"FcConfigReference",E,E,N,N],[5,"FcConfigDestroy",E,E,N,N],[5,"FcConfigSetCurrent",E,E,N,N],[5,"FcConfigGetCurrent",E,E,N,N],[5,"FcConfigUptoDate",E,E,N,N],[5,"FcConfigBuildFonts",E,E,N,N],[5,"FcConfigGetFontDirs",E,E,N,N],[5,"FcConfigGetConfigDirs",E,E,N,N],[5,"FcConfigGetConfigFiles",E,E,N,N],[5,"FcConfigGetCache",E,E,N,N],[5,"FcConfigGetBlanks",E,E,N,N],[5,"FcConfigGetCacheDirs",E,E,N,N],[5,"FcConfigGetRescanInterval",E,E,N,N],[5,"FcConfigSetRescanInterval",E,E,N,N],[5,"FcConfigGetFonts",E,E,N,N],[5,"FcConfigAppFontAddFile",E,E,N,N],[5,"FcConfigAppFontAddDir",E,E,N,N],[5,"FcConfigAppFontClear",E,E,N,N],[5,"FcConfigSubstituteWithPat",E,E,N,N],[5,"FcConfigSubstitute",E,E,N,N],[5,"FcCharSetCreate",E,E,N,N],[5,"FcCharSetNew",E,E,N,N],[5,"FcCharSetDestroy",E,E,N,N],[5,"FcCharSetAddChar",E,E,N,N],[5,"FcCharSetCopy",E,E,N,N],[5,"FcCharSetEqual",E,E,N,N],[5,"FcCharSetIntersect",E,E,N,N],[5,"FcCharSetUnion",E,E,N,N],[5,"FcCharSetSubtract",E,E,N,N],[5,"FcCharSetMerge",E,E,N,N],[5,"FcCharSetHasChar",E,E,N,N],[5,"FcCharSetCount",E,E,N,N],[5,"FcCharSetIntersectCount",E,E,N,N],[5,"FcCharSetSubtractCount",E,E,N,N],[5,"FcCharSetIsSubset",E,E,N,N],[5,"FcCharSetFirstPage",E,E,N,N],[5,"FcCharSetNextPage",E,E,N,N],[5,"FcCharSetCoverage",E,E,N,N],[5,"FcValuePrint",E,E,N,N],[5,"FcPatternPrint",E,E,N,N],[5,"FcFontSetPrint",E,E,N,N],[5,"FcDefaultSubstitute",E,E,N,N],[5,"FcFileIsDir",E,E,N,N],[5,"FcFileScan",E,E,N,N],[5,"FcDirScan",E,E,N,N],[5,"FcDirSave",E,E,N,N],[5,"FcDirCacheLoad",E,E,N,N],[5,"FcDirCacheRead",E,E,N,N],[5,"FcDirCacheUnload",E,E,N,N],[5,"FcFreeTypeQuery",E,E,N,N],[5,"FcFontSetCreate",E,E,N,N],[5,"FcFontSetDestroy",E,E,N,N],[5,"FcFontSetAdd",E,E,N,N],[5,"FcInitLoadConfig",E,E,N,N],[5,"FcInitLoadConfigAndFonts",E,E,N,N],[5,"FcInit",E,E,N,N],[5,"FcFini",E,E,N,N],[5,"FcGetVersion",E,E,N,N],[5,"FcInitReinitialize",E,E,N,N],[5,"FcInitBringUptoDate",E,E,N,N],[5,"FcGetLangs",E,E,N,N],[5,"FcLangGetCharSet",E,E,N,N],[5,"FcLangSetCreate",E,E,N,N],[5,"FcLangSetDestroy",E,E,N,N],[5,"FcLangSetCopy",E,E,N,N],[5,"FcLangSetAdd",E,E,N,N],[5,"FcLangSetHasLang",E,E,N,N],[5,"FcLangSetCompare",E,E,N,N],[5,"FcLangSetContains",E,E,N,N],[5,"FcLangSetEqual",E,E,N,N],[5,"FcLangSetHash",E,E,N,N],[5,"FcLangSetGetLangs",E,E,N,N],[5,"FcObjectSetCreate",E,E,N,N],[5,"FcObjectSetAdd",E,E,N,N],[5,"FcObjectSetDestroy",E,E,N,N],[5,"FcObjectSetBuild",E,E,N,N],[5,"FcFontSetList",E,E,N,N],[5,"FcFontList",E,E,N,N],[5,"FcAtomicCreate",E,E,N,N],[5,"FcAtomicLock",E,E,N,N],[5,"FcAtomicNewFile",E,E,N,N],[5,"FcAtomicOrigFile",E,E,N,N],[5,"FcAtomicReplaceOrig",E,E,N,N],[5,"FcAtomicDeleteNew",E,E,N,N],[5,"FcAtomicUnlock",E,E,N,N],[5,"FcAtomicDestroy",E,E,N,N],[5,"FcFontSetMatch",E,E,N,N],[5,"FcFontMatch",E,E,N,N],[5,"FcFontRenderPrepare",E,E,N,N],[5,"FcFontSetSort",E,E,N,N],[5,"FcFontSort",E,E,N,N],[5,"FcFontSetSortDestroy",E,E,N,N],[5,"FcMatrixCopy",E,E,N,N],[5,"FcMatrixEqual",E,E,N,N],[5,"FcMatrixMultiply",E,E,N,N],[5,"FcMatrixRotate",E,E,N,N],[5,"FcMatrixScale",E,E,N,N],[5,"FcMatrixShear",E,E,N,N],[5,"FcNameRegisterObjectTypes",E,E,N,N],[5,"FcNameUnregisterObjectTypes",E,E,N,N],[5,"FcNameGetObjectType",E,E,N,N],[5,"FcNameRegisterConstants",E,E,N,N],[5,"FcNameUnregisterConstants",E,E,N,N],[5,"FcNameGetConstant",E,E,N,N],[5,"FcNameConstant",E,E,N,N],[5,"FcNameParse",E,E,N,N],[5,"FcNameUnparse",E,E,N,N],[5,"FcPatternCreate",E,E,N,N],[5,"FcPatternDuplicate",E,E,N,N],[5,"FcPatternReference",E,E,N,N],[5,"FcPatternFilter",E,E,N,N],[5,"FcValueDestroy",E,E,N,N],[5,"FcValueEqual",E,E,N,N],[5,"FcValueSave",E,E,N,N],[5,"FcPatternDestroy",E,E,N,N],[5,"FcPatternEqual",E,E,N,N],[5,"FcPatternEqualSubset",E,E,N,N],[5,"FcPatternHash",E,E,N,N],[5,"FcPatternAdd",E,E,N,N],[5,"FcPatternAddWeak",E,E,N,N],[5,"FcPatternGet",E,E,N,N],[5,"FcPatternDel",E,E,N,N],[5,"FcPatternRemove",E,E,N,N],[5,"FcPatternAddInteger",E,E,N,N],[5,"FcPatternAddDouble",E,E,N,N],[5,"FcPatternAddString",E,E,N,N],[5,"FcPatternAddMatrix",E,E,N,N],[5,"FcPatternAddCharSet",E,E,N,N],[5,"FcPatternAddBool",E,E,N,N],[5,"FcPatternAddLangSet",E,E,N,N],[5,"FcPatternGetInteger",E,E,N,N],[5,"FcPatternGetDouble",E,E,N,N],[5,"FcPatternGetString",E,E,N,N],[5,"FcPatternGetMatrix",E,E,N,N],[5,"FcPatternGetCharSet",E,E,N,N],[5,"FcPatternGetBool",E,E,N,N],[5,"FcPatternGetLangSet",E,E,N,N],[5,"FcPatternBuild",E,E,N,N],[5,"FcPatternFormat",E,E,N,N],[5,"FcStrCopy",E,E,N,N],[5,"FcStrCopyFilename",E,E,N,N],[5,"FcStrPlus",E,E,N,N],[5,"FcStrFree",E,E,N,N],[5,"FcStrDowncase",E,E,N,N],[5,"FcStrCmpIgnoreCase",E,E,N,N],[5,"FcStrCmp",E,E,N,N],[5,"FcStrStrIgnoreCase",E,E,N,N],[5,"FcStrStr",E,E,N,N],[5,"FcUtf8ToUcs4",E,E,N,N],[5,"FcUtf8Len",E,E,N,N],[5,"FcUcs4ToUtf8",E,E,N,N],[5,"FcUtf16ToUcs4",E,E,N,N],[5,"FcUtf16Len",E,E,N,N],[5,"FcStrDirname",E,E,N,N],[5,"FcStrBasename",E,E,N,N],[5,"FcStrSetCreate",E,E,N,N],[5,"FcStrSetMember",E,E,N,N],[5,"FcStrSetEqual",E,E,N,N],[5,"FcStrSetAdd",E,E,N,N],[5,"FcStrSetAddFilename",E,E,N,N],[5,"FcStrSetDel",E,E,N,N],[5,"FcStrSetDestroy",E,E,N,N],[5,"FcStrListCreate",E,E,N,N],[5,"FcStrListNext",E,E,N,N],[5,"FcStrListDone",E,E,N,N],[5,"FcConfigParseAndLoad",E,E,N,N],[6,"FcChar8",E,E,N,N],[6,"FcChar16",E,E,N,N],[6,"FcChar32",E,E,N,N],[6,"FcBool",E,E,N,N],[6,"enum__FcType",E,E,N,N],[6,"FcType",E,E,N,N],[6,"FcMatrix",E,E,N,N],[6,"struct__FcCharSet",E,E,N,N],[6,"FcCharSet",E,E,N,N],[6,"FcObjectType",E,E,N,N],[6,"FcConstant",E,E,N,N],[6,"enum__FcResult",E,E,N,N],[6,"FcResult",E,E,N,N],[6,"struct__FcPattern",E,E,N,N],[6,"FcPattern",E,E,N,N],[6,"struct__FcLangSet",E,E,N,N],[6,"FcLangSet",E,E,N,N],[6,"FcValue",E,E,N,N],[6,"FcFontSet",E,E,N,N],[6,"FcObjectSet",E,E,N,N],[6,"enum__FcMatchKind",E,E,N,N],[6,"FcMatchKind",E,E,N,N],[6,"enum__FcLangResult",E,E,N,N],[6,"FcLangResult",E,E,N,N],[6,"enum__FcSetName",E,E,N,N],[6,"FcSetName",E,E,N,N],[6,"struct__FcAtomic",E,E,N,N],[6,"FcAtomic",E,E,N,N],[6,"FcEndian",E,E,N,N],[6,"struct__FcConfig",E,E,N,N],[6,"FcConfig",E,E,N,N],[6,"struct__FcGlobalCache",E,E,N,N],[6,"FcFileCache",E,E,N,N],[6,"struct__FcBlanks",E,E,N,N],[6,"FcBlanks",E,E,N,N],[6,"struct__FcStrList",E,E,N,N],[6,"FcStrList",E,E,N,N],[6,"struct__FcStrSet",E,E,N,N],[6,"FcStrSet",E,E,N,N],[6,"struct__FcCache",E,E,N,N],[6,"FcCache",E,E,N,N],[6,"union_unnamed1",E,E,N,N],[17,"FcTypeVoid",E,E,N,N],[17,"FcTypeInteger",E,E,N,N],[17,"FcTypeDouble",E,E,N,N],[17,"FcTypeString",E,E,N,N],[17,"FcTypeBool",E,E,N,N],[17,"FcTypeMatrix",E,E,N,N],[17,"FcTypeCharSet",E,E,N,N],[17,"FcTypeFTFace",E,E,N,N],[17,"FcTypeLangSet",E,E,N,N],[17,"FC_WEIGHT_THIN",E,E,N,N],[17,"FC_WEIGHT_EXTRALIGHT",E,E,N,N],[17,"FC_WEIGHT_ULTRALIGHT",E,E,N,N],[17,"FC_WEIGHT_LIGHT",E,E,N,N],[17,"FC_WEIGHT_BOOK",E,E,N,N],[17,"FC_WEIGHT_REGULAR",E,E,N,N],[17,"FC_WEIGHT_NORMAL",E,E,N,N],[17,"FC_WEIGHT_MEDIUM",E,E,N,N],[17,"FC_WEIGHT_DEMIBOLD",E,E,N,N],[17,"FC_WEIGHT_SEMIBOLD",E,E,N,N],[17,"FC_WEIGHT_BOLD",E,E,N,N],[17,"FC_WEIGHT_EXTRABOLD",E,E,N,N],[17,"FC_WEIGHT_ULTRABOLD",E,E,N,N],[17,"FC_WEIGHT_BLACK",E,E,N,N],[17,"FC_WEIGHT_HEAVY",E,E,N,N],[17,"FC_WEIGHT_EXTRABLACK",E,E,N,N],[17,"FC_WEIGHT_ULTRABLACK",E,E,N,N],[17,"FC_SLANT_ROMAN",E,E,N,N],[17,"FC_SLANT_ITALIC",E,E,N,N],[17,"FC_SLANT_OBLIQUE",E,E,N,N],[17,"FcResultMatch",E,E,N,N],[17,"FcResultNoMatch",E,E,N,N],[17,"FcResultTypeMismatch",E,E,N,N],[17,"FcResultNoId",E,E,N,N],[17,"FcResultOutOfMemory",E,E,N,N],[17,"FcMatchPattern",E,E,N,N],[17,"FcMatchFont",E,E,N,N],[17,"FcMatchScan",E,E,N,N],[17,"FcLangEqual",E,E,N,N],[17,"FcLangDifferentCountry",E,E,N,N],[17,"FcLangDifferentTerritory",E,E,N,N],[17,"FcLangDifferentLang",E,E,N,N],[17,"FcSetSystem",E,E,N,N],[17,"FcSetApplication",E,E,N,N],[17,"FcEndianBig",E,E,N,N],[17,"FcEndianLittle",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"clone",E,E,0,[[["self"]],["struct__fcmatrix"]]]],"p":[[3,R[1542]],[3,R[1543]],[3,R[1544]],[3,R[1545]],[3,R[1546]],[3,R[1547]]]};
searchIndex["fontconfig_sys"]={"doc":E,"i":[],"p":[]};
searchIndex["freetype_sys"]={"doc":E,"i":[],"p":[]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","i":[[3,"Frame","gif",R[1943],N,N],[12,"delay",E,R[1944],0,N],[12,"dispose",E,R[1945],0,N],[12,R[1946],E,R[1947],0,N],[12,R[1948],E,R[1949],0,N],[12,"top",E,R[1950],0,N],[12,"left",E,R[1951],0,N],[12,"width",E,R[1952],0,N],[12,"height",E,R[1953],0,N],[12,R[2104],E,R[1954],0,N],[12,"palette",E,R[1955],0,N],[12,"buffer",E,R[1956],0,N],[3,R[141],E,"GIF decoder which supports streaming",N,N],[3,R[135],E,"Memory limit in bytes. `MemoryLimit::Some(0)` means that…",N,N],[12,"0",E,E,1,N],[3,"Reader",E,R[122],N,N],[3,"Decoder",E,R[122],N,N],[3,"Encoder",E,R[1957],N,N],[4,"Block",E,"Known GIF block types",N,N],[13,"Image",E,"Image block.",2,N],[13,R[123],E,"Extension block.",2,N],[13,"Trailer",E,"Image trailer.",2,N],[4,R[123],E,"Known GIF extensions",N,N],[13,"Text",E,"Text extension.",3,N],[13,"Control",E,"Control extension.",3,N],[13,"Comment",E,"Comment extension.",3,N],[13,"Application",E,"Application extension.",3,N],[4,R[136],E,R[1938],N,N],[13,"Any",E,R[1939],4,N],[13,"Keep",E,R[1940],4,N],[13,"Background",E,R[1941],4,N],[13,"Previous",E,R[1942],4,N],[4,"Decoded",E,"Indicates whether a certain object has been decoded",N,N],[13,"Nothing",E,"Decoded nothing.",5,N],[13,"GlobalPalette",E,"Global palette.",5,N],[13,"BackgroundColor",E,"Index of the background color in the global palette.",5,N],[13,"Trailer",E,"Decoded the image trailer.",5,N],[13,"BlockStart",E,"The start of a block.",5,N],[13,"SubBlockFinished",E,"Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished",E,"Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame",E,"Decoded all information of the next frame. The returned…",5,N],[13,"Data",E,"Decoded some data of the current frame.",5,N],[13,"DataEnd",E,"No more data available the current frame.",5,N],[4,R[137],E,"Decoding error.",N,N],[13,"Format",E,"Returned if the image is found to be malformed.",6,N],[13,"Internal",E,"Internal (logic) error.",6,N],[13,"Io",E,"Wraps `std::io::Error`.",6,N],[4,R[138],E,"Output mode for the image data",N,N],[13,"RGBA",E,"The decoder expands the image data to 32bit RGBA. This…",7,N],[13,"Indexed",E,"The decoder returns the raw indexed data.",7,N],[4,R[139],E,"Configures how extensions should be handled",N,N],[13,"Save",E,"Saves all extention data",8,N],[13,"Skip",E,"Skips the data of unknown extensions and extracts the data…",8,N],[4,R[140],E,"Extension data.",N,N],[13,"Control",E,"Control extension. Use `ExtensionData::new_control_ext` to…",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay",E,"Frame delay.",9,N],[12,"trns",E,"Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat",E,"Number of repetitions",N,N],[13,"Finite",E,"Finite number of repetitions",10,N],[13,"Infinite",E,"Infinite number of repetitions",10,N],[11,"from_u8",E,R[125],4,[[["u8"]],[[R[24],[R[124]]],[R[124]]]]],[11,"from_u8",E,R[125],2,[[["u8"]],[["block"],[R[24],["block"]]]]],[11,"from_u8",E,R[125],3,[[["u8"]],[[R[24],[R[126]]],[R[126]]]]],[11,"from_rgba",E,R[2050],0,[[["u16"]],["frame"]]],[11,R[2051],E,R[2052],0,[[["u16"],["i32"]],["frame"]]],[11,R[2053],E,R[2054],0,[[["u16"],[R[24],["u8"]],["u8"]],["frame"]]],[11,R[2055],E,R[2056],0,[[["u16"],[R[24],["u8"]],["u8"]],["frame"]]],[11,R[1861],E,R[2057],0,[[["u16"]],["frame"]]],[11,R[2058],E,R[2059],0,[[["u16"],["i32"]],["frame"]]],[11,"new",E,"Creates a new streaming decoder",11,[[],[R[132]]]],[11,"update",E,"Updates the internal state of the decoder. ",11,[[["self"]],[[R[2],[R[127]]],[R[127]]]]],[11,"last_ext",E,"Returns the data of the last extension that has been…",11,[[["self"]]]],[11,"current_frame_mut",E,"Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,"current_frame",E,"Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width",E,R[128],11,[[["self"]],["u16"]]],[11,"height",E,R[129],11,[[["self"]],["u16"]]],[11,"new",E,"Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info",E,"Reads the logical screen descriptor including the global…",12,[[],[[R[127]],[R[2],["reader",R[127]]],["reader"]]]],[11,"next_frame_info",E,"Returns the next frame info",13,[[["self"]],[[R[127]],[R[24],["frame"]],[R[2],[R[24],R[127]]]]]],[11,"read_next_frame",E,"Reads the next frame from the image.",13,[[["self"]],[[R[127]],[R[24],["frame"]],[R[2],[R[24],R[127]]]]]],[11,"read_into_buffer",E,"Reads the data of the current frame into a pre-allocated…",13,[[["self"]],[[R[2],[R[127]]],[R[127]]]]],[11,"fill_buffer",E,"Reads data of the current frame into a pre-allocated…",13,[[["self"]],[[R[127]],[R[2],["bool",R[127]]],["bool"]]]],[11,R[1552],E,"Output buffer size",13,[[["self"]],["usize"]]],[11,"line_length",E,"Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette",E,"Returns the color palette relevant for the current (next)…",13,[[["self"]],[[R[127]],[R[2],[R[127]]]]]],[11,"global_palette",E,"The global color palette",13,[[["self"]],[R[24]]]],[11,"width",E,R[128],13,[[["self"]],["u16"]]],[11,"height",E,R[129],13,[[["self"]],["u16"]]],[11,"bg_color",E,"Index of the background color in the global palette",13,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"new_control_ext",E,"Constructor for control extension data.",9,[[[R[124]],["u8"],["u16"],[R[24],["u8"]],["bool"]],[R[130]]]],[11,"new",E,"Creates a new encoder.",14,[[["w"],["u16"]],[R[2]]]],[11,"write_global_palette",E,"Writes the global color palette.",14,[[],[R[2]]]],[11,"write_frame",E,"Writes a frame to the image.",14,[[["self"],["frame"]],[R[2]]]],[11,"write_extension",E,"Writes an extension to the image.",14,[[["self"],[R[130]]],[R[2]]]],[11,"write_raw_extension",E,"Writes a raw extension to the image.",14,[[["self"],["u8"]],[R[2]]]],[8,R[142],E,"Implemented for objects that have parameters.",N,N],[11,"set",E,R[133],15,[[["self"],[R[134]]]]],[8,R[143],E,"Configuration parameter trait.",N,N],[16,"Result",E,"Result type of `set_param`.",16,N],[10,R[131],E,"Sets `self` as a parameter of `Object`.",16,[[["object"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[R[81]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,R[131],E,E,8,[[[R[132]]]]],[11,R[131],E,E,7,[[["decoder"]]]],[11,R[131],E,E,1,[[["decoder"]]]],[11,R[131],E,E,10,[[["encoder"]]]],[11,"drop",E,E,14,[[["self"]]]],[11,R[188],E,E,0,[[],["frame"]]],[11,"clone",E,E,4,[[["self"]],[R[124]]]],[11,"clone",E,E,2,[[["self"]],["block"]]],[11,"clone",E,E,3,[[["self"]],[R[126]]]],[11,"clone",E,E,0,[[["self"]],["frame"]]],[11,"eq",E,E,4,[[["self"],[R[124]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[126]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["extensions"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["coloroutput"]],["bool"]]],[11,"from",E,E,6,[[["error"]],["self"]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,6,[[["self"]],["str"]]],[11,"cause",E,E,6,[[["self"]],[[R[24],["error"]],["error"]]]],[11,"set",E,R[133],15,[[["self"],[R[134]]]]]],"p":[[3,"Frame"],[3,R[135]],[4,"Block"],[4,R[123]],[4,R[136]],[4,"Decoded"],[4,R[137]],[4,R[138]],[4,R[139]],[4,R[140]],[4,"Repeat"],[3,R[141]],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,R[142]],[8,R[143]]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image…","i":[[3,"Luma","image","Grayscale colors",N,N],[12,"data",E,E,0,N],[3,"LumaA",E,"Grayscale colors + alpha channel",N,N],[12,"data",E,E,1,N],[3,"Rgb",E,"RGB colors",N,N],[12,"data",E,E,2,N],[3,"Rgba",E,"RGB colors + alpha channel",N,N],[12,"data",E,E,3,N],[3,"Bgr",E,"BGR colors",N,N],[12,"data",E,E,4,N],[3,"Bgra",E,"BGR colors + alpha channel",N,N],[12,"data",E,E,5,N],[3,"MutPixels",E,"Mutable pixel iterator",N,N],[3,"Pixels",E,"Immutable pixel iterator",N,N],[3,"SubImage",E,"A View into another image",N,N],[3,R[2094],E,"Generic image buffer",N,N],[3,"Frame",E,"A single animation frame",N,N],[3,"Frames",E,"An implementation dependent iterator, reading the frames…",N,N],[4,R[1587],E,R[2112],N,N],[13,"Gray",E,R[2113],6,N],[13,"RGB",E,R[2114],6,N],[13,"Palette",E,R[2115],6,N],[13,"GrayA",E,R[2116],6,N],[13,"RGBA",E,R[2117],6,N],[13,"BGR",E,"Pixel contains B, G and R channels",6,N],[13,"BGRA",E,"Pixel is BGR with an alpha channel",6,N],[4,"ImageError",E,"An enumeration of Image errors",N,N],[13,R[2107],E,R[2108],7,N],[13,"DimensionError",E,"The Image's dimensions are either too small or too large",7,N],[13,R[2109],E,R[2110],7,N],[13,"UnsupportedColor",E,"The Decoder does not support this color type",7,N],[13,"NotEnoughData",E,"Not enough data was provided to the Decoder to decode the…",7,N],[13,"IoError",E,R[2111],7,N],[13,"ImageEnd",E,"The end of the image has been reached",7,N],[13,"InsufficientMemory",E,"There is not enough memory to complete the given operation",7,N],[4,R[2077],E,R[1902],N,N],[13,"Nearest",E,R[1903],8,N],[13,"Triangle",E,R[1904],8,N],[13,"CatmullRom",E,R[1905],8,N],[13,"Gaussian",E,R[1906],8,N],[13,"Lanczos3",E,R[1907],8,N],[4,R[2078],E,"An enumeration of supported image formats. Not all formats…",N,N],[13,"PNG",E,R[1892],9,N],[13,"JPEG",E,"An Image in JPEG Format",9,N],[13,"GIF",E,R[1893],9,N],[13,"WEBP",E,"An Image in WEBP Format",9,N],[13,"PNM",E,"An Image in general PNM Format",9,N],[13,"TIFF",E,"An Image in TIFF Format",9,N],[13,"TGA",E,"An Image in TGA Format",9,N],[13,"BMP",E,R[1895],9,N],[13,"ICO",E,R[1894],9,N],[13,"HDR",E,"An Image in Radiance HDR Format",9,N],[4,R[2079],E,"An enumeration of supported image formats for encoding.",N,N],[13,"PNG",E,R[1892],10,N],[13,"JPEG",E,"An Image in JPEG Format with specified quality",10,N],[13,"PNM",E,"An Image in one of the PNM Formats",10,N],[13,"GIF",E,R[1893],10,N],[13,"ICO",E,R[1894],10,N],[13,"BMP",E,R[1895],10,N],[13,R[2103],E,"A value for signalling an error: An unsupported format was…",10,N],[4,R[2080],E,"A Dynamic Image",N,N],[13,"ImageLuma8",E,"Each pixel in this image is 8-bit Luma",11,N],[13,"ImageLumaA8",E,"Each pixel in this image is 8-bit Luma with alpha",11,N],[13,"ImageRgb8",E,"Each pixel in this image is 8-bit Rgb",11,N],[13,"ImageRgba8",E,"Each pixel in this image is 8-bit Rgb with alpha",11,N],[13,"ImageBgr8",E,"Each pixel in this image is 8-bit Bgr",11,N],[13,"ImageBgra8",E,"Each pixel in this image is 8-bit Bgr with alpha",11,N],[5,"Luma",E,E,N,[[],[["luma"],[R[1896]]]]],[5,"LumaA",E,E,N,[[],[[R[1896]],["lumaa"]]]],[5,"Rgb",E,E,N,[[],[["rgb"],[R[1896]]]]],[5,"Rgba",E,E,N,[[],[[R[1896]],["rgba"]]]],[5,"Bgr",E,E,N,[[],[[R[1896]],["bgr"]]]],[5,"Bgra",E,E,N,[[],[[R[1896]],["bgra"]]]],[5,"guess_format",E,"Guess image format from memory block",N,[[],[[R[1897]],[R[1898],[R[1897]]]]]],[5,"load",E,"Create a new image from a Reader",N,[[[R[1897]],["bufread"],["seek"]],[[R[1898],[R[1899]]],[R[1899]]]]],[5,"load_from_memory",E,R[1900],N,[[],[[R[1898],[R[1899]]],[R[1899]]]]],[5,"load_from_memory_with_format",E,R[1900],N,[[[R[1897]]],[[R[1898],[R[1899]]],[R[1899]]]]],[5,"open",E,"Open the image located at the path specified. The image's…",N,[[["p"]],[[R[1898],[R[1899]]],[R[1899]]]]],[5,"save_buffer",E,"Saves the supplied buffer to a file at the path specified.",N,[[["u32"],["p"],[R[1564]]],[R[2]]]],[0,"math",E,"Mathematical helper functions and types.",N,N],[0,"nq",R[1901],"NEUQUANT Neural-Net quantization algorithm by Anthony…",N,N],[3,R[44],R[2004],"Neural network color quantizer",N,N],[11,"new",E,"Creates a new neural network and trains it with the…",12,[[["usize"],["i32"]],["self"]]],[11,"init",E,"Initializes the neural network and trains it with the…",12,[[["self"]]]],[11,"map_pixel",E,"Maps the pixel in-place to the best-matching color in the…",12,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map for `pixel`",12,[[["self"]],["usize"]]],[0,"utils",R[1901],"Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"]],["n"]]],[0,"imageops","image","Image Processing Functions",N,N],[4,R[2077],"image::imageops",R[1902],N,N],[13,"Nearest",E,R[1903],8,N],[13,"Triangle",E,R[1904],8,N],[13,"CatmullRom",E,R[1905],8,N],[13,"Gaussian",E,R[1906],8,N],[13,"Lanczos3",E,R[1907],8,N],[5,"flip_horizontal",E,"Flip an image horizontally",N,[[["i"]],[[R[1908],["vec"]],["vec"]]]],[5,"flip_vertical",E,"Flip an image vertically",N,[[["i"]],[[R[1908],["vec"]],["vec"]]]],[5,"rotate180",E,"Rotate an image 180 degrees clockwise.",N,[[["i"]],[[R[1908],["vec"]],["vec"]]]],[5,"rotate270",E,"Rotate an image 270 degrees clockwise.",N,[[["i"]],[[R[1908],["vec"]],["vec"]]]],[5,"rotate90",E,"Rotate an image 90 degrees clockwise.",N,[[["i"]],[[R[1908],["vec"]],["vec"]]]],[5,"blur",E,"Performs a Gaussian blur on the supplied image. `sigma` is…",N,[[["i"],["f32"]],[[R[1908],["vec"]],["vec"]]]],[5,"filter3x3",E,"Perform a 3x3 box filter on the supplied image. `kernel`…",N,[[["i"]],[[R[1908],["vec"]],["vec"]]]],[5,"resize",E,"Resize the supplied image to the specified dimensions.…",N,[[["i"],["u32"],[R[1563]]],[[R[1908],["vec"]],["vec"]]]],[5,"thumbnail",E,"Resize the supplied image to the specific dimensions.",N,[[["i"],["u32"]],[[R[1908],["vec"]],["vec"]]]],[5,"unsharpen",E,"Performs an unsharpen mask on the supplied image. `sigma`…",N,[[["i"],["f32"],["i32"]],[[R[1908],["vec"]],["vec"]]]],[5,"crop",E,"Return a mutable view into an image",N,[[["u32"],["i"]],[[R[2071]],["i"]]]],[5,"overlay_bounds",E,"Calculate the region that can be copied from top to bottom.",N,[[["u32"]]]],[5,"overlay",E,"Overlay an image at a given coordinate (x, y)",N,[[["i"],["u32"],["i"]]]],[5,"replace",E,"Replace the contents of an image at a given coordinate (x,…",N,[[["i"],["u32"],["i"]]]],[0,"colorops",E,"Functions for altering and converting the color of pixelbufs",N,N],[3,"BiLevel",R[2005],"A bi-level color map",N,N],[5,"grayscale",E,"Convert the supplied image to grayscale",N,[[["i"]],[[R[1908],["luma","vec"]],["luma"],["vec"]]]],[5,"invert",E,"Invert each pixel within the supplied image. This function…",N,[[["i"]]]],[5,"contrast",E,"Adjust the contrast of the supplied image. `contrast` is…",N,[[["i"],["f32"]],[[R[1908],["vec"]],["vec"]]]],[5,"brighten",E,"Brighten the supplied image. `value` is the amount to…",N,[[["i"],["i32"]],[[R[1908],["vec"]],["vec"]]]],[5,"huerotate",E,R[1989],N,[[["i"],["i32"]],[[R[1908],["vec"]],["vec"]]]],[5,"dither",E,"Reduces the colors of the image using the supplied…",N,[[[R[1908]],["map"]]]],[5,"index_colors",E,"Reduces the colors using the supplied `color_map` and…",N,[[["map"],[R[1908]]],[["luma",["u8"]],[R[1908],["luma","vec"]],["vec",["u8"]]]]],[8,"ColorMap",E,"A color map",N,N],[16,"Color",E,"The color type on which the map operates on",13,N],[10,"index_of",E,"Returns the index of the closed match of `color` in the…",13,[[["self"]],["usize"]]],[10,"map_color",E,"Maps `color` to the closest color in the color map.",13,[[["self"]]]],[0,"flat","image","Image representations for ffi.",N,N],[3,R[2081],R[2006],"A flat buffer over a (multi channel) image.",N,N],[12,"samples",E,"Underlying linear container holding sample values.",14,N],[12,"layout",E,"A `repr(C)` description of the layout of buffer samples.",14,N],[12,"color_hint",E,"Supplementary color information.",14,N],[3,R[2082],E,"A ffi compatible description of a sample buffer.",N,N],[12,R[2023],E,"The number of channels in the color representation of the…",15,N],[12,"channel_stride",E,"Add this to an index to get to the sample in the next…",15,N],[12,"width",E,"The width of the represented image.",15,N],[12,"width_stride",E,R[1909],15,N],[12,"height",E,"The height of the represented image.",15,N],[12,"height_stride",E,R[1909],15,N],[3,"View",E,"A flat buffer that can be used as an image view.",N,N],[3,"ViewMut",E,"A mutable owning version of a flat buffer.",N,N],[4,"Error",E,"Denotes invalid flat sample buffers when trying to convert…",N,N],[13,"TooLarge",E,"The represented image was too large.",16,N],[13,"NormalFormRequired",E,"The represented image can not use this representation.",16,N],[13,"WrongColor",E,"The color format did not match the channel count.",16,N],[4,"NormalForm",E,"Different normal forms of buffers.",N,N],[13,"Unaliased",E,"No pixel aliases another.",17,N],[13,"PixelPacked",E,"At least pixels are packed.",17,N],[13,"ImagePacked",E,"All samples are packed.",17,N],[13,"RowMajorPacked",E,"The samples are in row-major form and all samples are…",17,N],[13,"ColumnMajorPacked",E,"The samples are in column-major form and all samples are…",17,N],[11,"row_major_packed",E,"Describe a row-major image packed in all directions.",15,[[["u32"],["u8"]],["self"]]],[11,"column_major_packed",E,"Describe a column-major image packed in all directions.",15,[[["u32"],["u8"]],["self"]]],[11,R[1910],E,R[1911],15,[[["self"]]]],[11,"extents",E,R[1912],15,[[["self"]]]],[11,"bounds",E,R[1913],15,[[["self"]]]],[11,R[1929],E,R[1917],15,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"fits",E,R[1918],15,[[["self"],["usize"]],["bool"]]],[11,R[1919],E,R[1920],15,[[["self"]],["bool"]]],[11,R[479],E,R[1921],15,[[["self"],[R[2045]]],["bool"]]],[11,R[2036],E,R[1922],15,[[["self"],["u32"],["u8"]],["bool"]]],[11,"index",E,R[1923],15,[[["self"],["u32"],["u8"]],[["usize"],[R[24],["usize"]]]]],[11,R[1924],E,"Get the theoretical position of sample (channel, x, y).",15,[[["self"],["usize"]],[["usize"],[R[24],["usize"]]]]],[11,R[1925],E,R[1926],15,[[["self"],["u32"],["u8"]],["usize"]]],[11,R[1936],E,R[1927],15,[[["self"],["u32"],["u8"]]]],[11,R[1910],E,R[1911],14,[[["self"]]]],[11,"extents",E,R[1912],14,[[["self"]]]],[11,"bounds",E,R[1913],14,[[["self"]]]],[11,"as_ref",E,"Get a reference based version.",14,[[["self"]],[R[1914]]]],[11,"as_mut",E,"Get a mutable reference based version.",14,[[["self"]],[R[1914]]]],[11,"to_vec",E,"Copy the data into an owned vector.",14,[[["self"]],[[R[1914],["vec"]],["vec"]]]],[11,R[1935],E,"Get a reference to a single sample.",14,[[["self"],["u32"],["u8"]],[[R[24]],[T]]]],[11,R[1928],E,"Get a mutable reference to a single sample.",14,[[["self"],["u32"],["u8"]],[[R[24]],[T]]]],[11,"as_view",E,"View this buffer as an image over some type of pixel.",14,[[["self"]],[["view"],[R[2],["view","error"]],["error"]]]],[11,"as_view_with_mut_samples",E,"View this buffer but keep mutability at a sample level.",14,[[["self"]],[["view"],["error"],[R[2],["view","error"]]]]],[11,"as_view_mut",E,"Interpret this buffer as a mutable image.",14,[[["self"]],[[R[2],["viewmut","error"]],["viewmut"],["error"]]]],[11,"as_slice",E,R[1916],14,[[["self"]]]],[11,R[1915],E,R[1916],14,[[["self"]]]],[11,R[1930],E,R[1931],14,[[["self"]],[R[24]]]],[11,R[1932],E,"Mutable portion of the buffer that holds sample values.",14,[[["self"]],[R[24]]]],[11,"try_into_buffer",E,"Move the data into an image buffer.",14,[[],[[R[2],[R[1908]]],[R[1908]]]]],[11,R[1929],E,R[1917],14,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"fits",E,R[1918],14,[[["self"],["usize"]],["bool"]]],[11,R[1919],E,R[1920],14,[[["self"]],["bool"]]],[11,R[479],E,R[1921],14,[[["self"],[R[2045]]],["bool"]]],[11,R[2036],E,R[1922],14,[[["self"],["u32"],["u8"]],["bool"]]],[11,"index",E,R[1923],14,[[["self"],["u32"],["u8"]],[["usize"],[R[24],["usize"]]]]],[11,R[1924],E,"Get the theoretical position of sample (x, y, channel).",14,[[["self"],["usize"]],[["usize"],[R[24],["usize"]]]]],[11,R[1925],E,R[1926],14,[[["self"],["u32"],["u8"]],["usize"]]],[11,R[1936],E,R[1927],14,[[["self"],["u32"],["u8"]]]],[11,R[25],E,R[1933],18,[[],[R[1914]]]],[11,"flat",E,"Get a reference on the inner sample descriptor.",18,[[["self"]],[R[1914]]]],[11,"samples",E,R[1934],18,[[["self"]],["buffer"]]],[11,R[1935],E,"Get a reference to a selected subpixel if it is in-bounds.",18,[[["self"],["u32"],["u8"]],[R[24]]]],[11,R[1928],E,"Get a mutable reference to a selected subpixel if it is…",18,[[["self"],["u32"],["u8"]],[R[24]]]],[11,R[1929],E,R[1917],18,[[["self"]],["usize"]]],[11,R[1930],E,R[1931],18,[[["self"]]]],[11,R[1932],E,"Return the mutable portion of the buffer that holds sample…",18,[[["self"]]]],[11,R[1936],E,R[1937],18,[[["self"],["u32"]]]],[11,"try_upgrade",E,"Try to convert this into an image with mutable pixels.",18,[[],[["viewmut"],[R[2],["viewmut"]]]]],[11,R[25],E,R[1933],19,[[],[R[1914]]]],[11,"flat",E,"Get a reference on the sample buffer descriptor.",19,[[["self"]],[R[1914]]]],[11,"samples",E,R[1934],19,[[["self"]],["buffer"]]],[11,R[1929],E,R[1917],19,[[["self"]],["usize"]]],[11,R[1935],E,"Get a reference to a selected subpixel.",19,[[["self"],["u32"],["u8"]],[R[24]]]],[11,R[1928],E,"Get a mutable reference to a selected sample.",19,[[["self"],["u32"],["u8"]],[R[24]]]],[11,R[1930],E,R[1931],19,[[["self"]]]],[11,R[1932],E,"Return the mutable buffer that holds sample values.",19,[[["self"]]]],[11,R[1936],E,R[1937],19,[[["self"],["u32"]]]],[0,"bmp","image","Decoding and Encoding of BMP Images",N,N],[3,"BMPDecoder",R[2024],"A bmp decoder",N,N],[3,"BMPEncoder",E,"The representation of a BMP encoder.",N,N],[11,"new",E,R[1961],20,[[["r"]],[[R[1898],["bmpdecoder"]],["bmpdecoder"]]]],[11,"new",E,R[1962],21,[[["w"]],["self"]]],[11,"encode",E,R[1963],21,[[["self"],["u32"],[R[1564]]],[R[2]]]],[0,"dxt","image","Decoding of DXT (S3TC) compression",N,N],[3,"DXTDecoder",R[2026],"DXT decoder",N,N],[3,"DXTReader",E,"DXT reader",N,N],[3,"DXTEncoder",E,"DXT encoder",N,N],[4,"DXTVariant",E,"What version of DXT compression are we using? Note that…",N,N],[13,"DXT1",E,"The DXT1 format. 48 bytes of RGB data in a 4x4 pixel…",22,N],[13,"DXT3",E,"The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel…",22,N],[13,"DXT5",E,"The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel…",22,N],[11,R[1564],E,"Returns the colortype that is stored in this DXT variant",22,[[],[R[1564]]]],[11,"new",E,"Create a new DXT decoder that decodes from the stream `r`.…",23,[[[R[2046]],["u32"],["r"]],[[R[2],["dxtdecoder",R[1976]]],[R[1976]],["dxtdecoder"]]]],[11,"new",E,R[1965],24,[[["w"]],["dxtencoder"]]],[11,"encode",E,"Encodes the image data `data` that has dimensions `width`…",24,[[[R[2046]],["u32"]],[R[1898]]]],[0,"gif","image","Decoding of GIF Images",N,N],[4,R[136],R[2012],R[1938],N,N],[13,"Any",E,R[1939],25,N],[13,"Keep",E,R[1940],25,N],[13,"Background",E,R[1941],25,N],[13,"Previous",E,R[1942],25,N],[3,"Frame",E,R[1943],N,N],[12,"delay",E,R[1944],26,N],[12,"dispose",E,R[1945],26,N],[12,R[1946],E,R[1947],26,N],[12,R[1948],E,R[1949],26,N],[12,"top",E,R[1950],26,N],[12,"left",E,R[1951],26,N],[12,"width",E,R[1952],26,N],[12,"height",E,R[1953],26,N],[12,R[2104],E,R[1954],26,N],[12,"palette",E,R[1955],26,N],[12,"buffer",E,R[1956],26,N],[3,"Decoder",E,R[122],N,N],[3,"Encoder",E,R[1957],N,N],[11,"new",E,"Creates a new decoder that decodes the input steam `r`",27,[[["r"]],[["decoder"],[R[1898],["decoder"]]]]],[11,"new",E,"Creates a new GIF encoder.",28,[[["w"]],["encoder"]]],[11,"encode",E,"Encodes a frame.",28,[[["self"],["frame"]],[R[1898]]]],[11,"encode_frames",E,"Encodes Frames. Consider using `try_encode_frames` instead…",28,[[["self"],["f"]],[R[1898]]]],[11,"try_encode_frames",E,"Try to encode a collection of…",28,[[["self"],["f"]],[R[1898]]]],[0,"hdr","image","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter",R[2029],"Adapter to conform to `ImageDecoder` trait",N,N],[3,"HDRDecoder",E,"An Radiance HDR decoder",N,N],[3,"RGBE8Pixel",E,"Refer to wikipedia",N,N],[12,"c",E,"Color components",29,N],[12,"e",E,"Exponent",29,N],[3,R[2101],E,"Scanline buffered pixel by pixel iterator",N,N],[3,R[2083],E,"Metadata for Radiance HDR image",N,N],[12,"width",E,"Width of decoded image. It could be either scanline…",30,N],[12,"height",E,"Height of decoded image. It depends on orientation too.",30,N],[12,"orientation",E,"Orientation matrix. For standard orientation it is…",30,N],[12,"exposure",E,"Divide color values by exposure to get to get physical…",30,N],[12,"color_correction",E,"Divide color values by corresponding tuple member (r, g,…",30,N],[12,"pixel_aspect_ratio",E,"Pixel height divided by pixel width",30,N],[12,"custom_attributes",E,"All lines contained in image header are put here. Ordering…",30,N],[3,"HDREncoder",E,"Radiance HDR encoder",N,N],[5,"rgbe8",E,"Creates `RGBE8Pixel` from components",N,[[["u8"]],[R[1960]]]],[5,"read_raw_file",E,"Helper function for reading raw 3-channel f32 images",N,[[["path"],["asref",["path"]]],[["vec",["rgb"]],[R[2],["vec"]]]]],[5,"to_rgbe8",E,"Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["f32"],["rgb",["f32"]]],[R[1960]]]],[11,"new",E,"Creates adapter",31,[[["r"]],[[R[1898],[R[1958]]],[R[1958]]]]],[11,"new_nonstrict",E,"Allows reading old Radiance HDR images",31,[[["r"]],[[R[1898],[R[1958]]],[R[1958]]]]],[11,"to_hdr",E,"Converts `RGBE8Pixel` into `Rgb<f32>` linearly",29,[[],[["f32"],["rgb",["f32"]]]]],[11,"to_ldr",E,"Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",29,[[],[["rgb"],[R[1896]],["zero"]]]],[11,"to_ldr_scale_gamma",E,"Converts RGBE8Pixel into Rgb using provided scale and gamma",29,[[["f32"]],[["rgb"],[R[1896]],["zero"]]]],[11,"new",E,"Reads Radiance HDR image header from stream `r` if the…",32,[[["r"]],[[R[1898],[R[1959]]],[R[1959]]]]],[11,"with_strictness",E,"Reads Radiance HDR image header from stream `reader`, if…",32,[[["bool"],["r"]],[[R[1898],[R[1959]]],[R[1959]]]]],[11,"metadata",E,"Returns file metadata. Refer to `HDRMetadata` for details.",32,[[["self"]],[R[2047]]]],[11,"read_image_native",E,"Consumes decoder and returns a vector of RGBE8 pixels",32,[[],[["vec",[R[1960]]],[R[1898],["vec"]]]]],[11,"read_image_transform",E,"Consumes decoder and returns a vector of transformed pixels",32,[[["send"],["fn"],["sync"]],[["vec"],[R[1898],["vec"]]]]],[11,"read_image_ldr",E,"Consumes decoder and returns a vector of Rgb pixels. scale…",32,[[],[[R[1898],["vec"]],["vec",["rgb"]]]]],[11,"read_image_hdr",E,"Consumes decoder and returns a vector of Rgb pixels.",32,[[],[["vec",["rgb"]],[R[1898],["vec"]]]]],[11,"new",E,"Creates encoder",33,[[["w"]],["hdrencoder"]]],[11,"encode",E,"Encodes the image `data` that has dimensions `width` and…",33,[[["usize"]],[R[2]]]],[17,"SIGNATURE",E,"Radiance HDR file signature",N,N],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder",R[2030],"An ico decoder",N,N],[3,"ICOEncoder",E,"ICO encoder",N,N],[11,"new",E,R[1961],34,[[["r"]],[[R[1898],["icodecoder"]],["icodecoder"]]]],[11,"new",E,R[1962],35,[[["w"]],["icoencoder"]]],[11,"encode",E,R[1963],35,[[[R[1564]],["u32"]],[R[2]]]],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,R[2084],R[2008],R[2102],N,N],[3,R[2085],E,"The representation of a JPEG encoder",N,N],[11,"new",E,R[1961],36,[[["r"]],[[R[1964]],[R[1898],[R[1964]]]]]],[11,"new",E,R[1965],37,[[["w"]],[R[1966]]]],[11,"new_with_quality",E,"Create a new encoder that writes its output to `w`, and…",37,[[["w"],["u8"]],[R[1966]]]],[11,"encode",E,R[1963],37,[[["self"],["u32"],[R[1564]]],[R[2]]]],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGDecoder",R[2031],"PNG decoder",N,N],[3,"PNGEncoder",E,"PNG encoder",N,N],[11,"new",E,"Creates a new decoder that decodes from the stream `r`",38,[[["r"]],[[R[1898],["pngdecoder"]],["pngdecoder"]]]],[11,"new",E,R[1965],39,[[["w"]],["pngencoder"]]],[11,"encode",E,R[1963],39,[[[R[1564]],["u32"]],[R[2]]]],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",N,N],[3,"PNMDecoder",R[2032],"PNM decoder",N,N],[3,"PNMEncoder",E,"Encodes images to any of the `pnm` image formats.",N,N],[3,R[2086],E,"Header produced by a `pam` file (\"Portable Arbitrary Map\")",N,N],[12,"height",E,R[1967],40,N],[12,"width",E,R[1968],40,N],[12,"depth",E,"Number of color channels",40,N],[12,"maxval",E,R[1970],40,N],[12,"tupltype",E,"Color interpretation of image pixels",40,N],[3,R[2087],E,"Header produced by a `pbm` file (\"Portable Bit Map\")",N,N],[12,"encoding",E,R[1969],41,N],[12,"height",E,R[1967],41,N],[12,"width",E,R[1968],41,N],[3,R[2088],E,"Header produced by a `pgm` file (\"Portable Gray Map\")",N,N],[12,"encoding",E,R[1969],42,N],[12,"height",E,R[1967],42,N],[12,"width",E,R[1968],42,N],[12,"maxwhite",E,R[1970],42,N],[3,R[2089],E,"Header produced by a `ppm` file (\"Portable Pixel Map\")",N,N],[12,"encoding",E,R[1969],43,N],[12,"height",E,R[1967],43,N],[12,"width",E,R[1968],43,N],[12,"maxval",E,R[1970],43,N],[3,"PNMHeader",E,"Stores the complete header data of a file.",N,N],[4,R[2090],E,"Standardized tuple type specifiers in the header of a `pam`.",N,N],[13,"BlackAndWhite",E,"Pixels are either black (0) or white (1)",44,N],[13,"BlackAndWhiteAlpha",E,"Pixels are either black (0) or white (1) and a second…",44,N],[13,"Grayscale",E,"Pixels represent the amount of white",44,N],[13,R[2105],E,"Grayscale with an additional alpha channel",44,N],[13,"RGB",E,"Three channels: Red, Green, Blue",44,N],[13,"RGBAlpha",E,"Four channels: Red, Green, Blue, Alpha",44,N],[13,"Custom",E,"An image format which is not standardized",44,N],[4,"PNMSubtype",E,"Denotes the category of the magic number",N,N],[13,"Bitmap",E,"Magic numbers P1 and P4",45,N],[13,"Graymap",E,"Magic numbers P2 and P5",45,N],[13,"Pixmap",E,"Magic numbers P3 and P6",45,N],[13,"ArbitraryMap",E,"Magic number P7",45,N],[4,R[2091],E,"The kind of encoding used to store sample values",N,N],[13,"Binary",E,"Samples are unsigned binary integers in big endian",46,N],[13,"Ascii",E,"Samples are encoded as decimal ascii strings separated by…",46,N],[11,"new",E,"Create a new decoder that decodes from the stream `read`",47,[[["r"]],[[R[1898],["pnmdecoder"]],["pnmdecoder"]]]],[11,R[25],E,"Extract the reader and header after an image has been read.",47,[[]]],[11,"subtype",E,"Get the pnm subtype, depending on the magic constant…",47,[[["self"]],[R[1971]]]],[11,"new",E,"Create new PNMEncoder from the `writer`.",48,[[["w"]],["self"]]],[11,"with_subtype",E,"Encode a specific pnm subtype image.",48,[[[R[1971]]],["self"]]],[11,"with_header",E,"Enforce the use of a chosen header.",48,[[["pnmheader"]],["self"]]],[11,"with_dynamic_header",E,"Create the header dynamically for each image.",48,[[],["self"]]],[11,"encode",E,"Encode an image whose samples are represented as `u8`.",48,[[["self"],["u32"],[R[1564]],["s"]],[R[2]]]],[11,"magic_constant",E,"Get the two magic constant bytes corresponding to this…",45,[[]]],[11,"sample_encoding",E,"Whether samples are stored as binary or as decimal ascii",45,[[],[R[2048]]]],[11,"subtype",E,"Retrieve the format subtype from which the header was…",49,[[["self"]],[R[1971]]]],[11,"width",E,"The width of the image this header is for.",49,[[["self"]],["u32"]]],[11,"height",E,"The height of the image this header is for.",49,[[["self"]],["u32"]]],[11,"maximal_sample",E,"The biggest value a sample can have. In other words, the…",49,[[["self"]],["u32"]]],[11,"as_bitmap",E,"Retrieve the underlying bitmap header if any",49,[[["self"]],[[R[1972]],[R[24],[R[1972]]]]]],[11,"as_graymap",E,"Retrieve the underlying graymap header if any",49,[[["self"]],[[R[24],[R[1973]]],[R[1973]]]]],[11,"as_pixmap",E,"Retrieve the underlying pixmap header if any",49,[[["self"]],[[R[24],[R[1974]]],[R[1974]]]]],[11,"as_arbitrary",E,"Retrieve the underlying arbitrary header if any",49,[[["self"]],[[R[1975]],[R[24],[R[1975]]]]]],[11,"write",E,"Write the header back into a binary stream",49,[[["self"],["write"]],[R[2]]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder",R[2033],"The representation of a TGA decoder",N,N],[11,"new",E,R[1961],50,[[["r"]],[["tgadecoder"],[R[1898],["tgadecoder"]]]]],[0,"tiff","image",R[2106],N,N],[3,R[2092],R[2009],"Decoder for TIFF images.",N,N],[11,"new",E,"Create a new TIFFDecoder.",51,[[["r"]],[[R[1977]],[R[1976]],[R[2],[R[1977],R[1976]]]]]],[0,"webp","image","Decoding of Webp Images",N,N],[3,R[2093],R[2010],"Webp Image format decoder. Currently only supportes the…",N,N],[11,"new",E,"Create a new WebpDecoder from the Reader `r`. This…",52,[[["r"]],[[R[1898],[R[1978]]],[R[1978]]]]],[0,"vp8",E,"An implementation of the VP8 Video Codec",N,N],[3,"Frame",R[2011],"A Representation of the last decoded video frame",N,N],[12,"width",E,"The width of the luma plane",53,N],[12,"height",E,"The height of the luma plane",53,N],[12,"ybuf",E,"The luma plane of the frame",53,N],[12,"keyframe",E,"Indicates whether this frame is a keyframe",53,N],[12,"for_display",E,"Indicates whether this frame is intended for display",53,N],[12,"pixel_type",E,"The pixel type of the frame as defined by Section 9.2 of…",53,N],[3,"VP8Decoder",E,"VP8 Decoder",N,N],[11,"new",E,"Create a new decoder. The reader must present a raw vp8…",54,[[["r"]],["vp8decoder"]]],[11,"decode_frame",E,"Decodes the current frame and returns a reference to it",54,[[["self"]],[["frame"],[R[2],["frame"]]]]],[11,"new","image","Creates a new `Frames` from an implementation specific…",55,[[["box",[R[2256]]],[R[2256]]],["self"]]],[11,"collect_frames",E,"Steps through the iterator from the current frame until…",55,[[],[["vec",["frame"]],[R[1898],["vec"]]]]],[11,"new",E,R[1979],56,[[[R[1981]]],["frame"]]],[11,"from_parts",E,R[1979],56,[[["u32"],["ratio",["u16"]],[R[1981]],["u16"]],["frame"]]],[11,"delay",E,"Delay of this frame",56,[[["self"]],[["u16"],["ratio",["u16"]]]]],[11,"buffer",E,R[1980],56,[[["self"]],[R[1981]]]],[11,"into_buffer",E,R[1980],56,[[],[R[1981]]]],[11,"left",E,"Returns the x offset",56,[[["self"]],["u32"]]],[11,"top",E,"Returns the y offset",56,[[["self"]],["u32"]]],[11,"from_raw",E,"Contructs a buffer from a generic container (for example a…",57,[[["u32"],["container"]],[[R[24],[R[1908]]],[R[1908]]]]],[11,"into_raw",E,"Returns the underlying raw buffer",57,[[],["container"]]],[11,R[1999],E,R[1995],57,[[["self"]]]],[11,"width",E,R[1996],57,[[["self"]],["u32"]]],[11,"height",E,R[1997],57,[[["self"]],["u32"]]],[11,"pixels",E,"Returns an iterator over the pixels of this image.",57,[[["self"]],["pixels"]]],[11,"enumerate_pixels",E,R[1982],57,[[["self"]],["enumeratepixels"]]],[11,R[2037],E,"Gets a reference to the pixel at location `(x, y)`",57,[[["self"],["u32"]],["p"]]],[11,"sample_layout",E,"Get the format of the buffer when viewed as a matrix of…",57,[[["self"]],[R[2044]]]],[11,"into_flat_samples",E,"Return the raw sample buffer with its stride an dimension…",57,[[],[R[1914]]]],[11,R[1986],E,R[1987],57,[[["self"]],[R[1914]]]],[11,R[2073],E,"Returns an iterator over the mutable pixels of this image.",57,[[["self"]],["pixelsmut"]]],[11,"enumerate_pixels_mut",E,R[1982],57,[[["self"]],["enumeratepixelsmut"]]],[11,R[1992],E,R[1993],57,[[["self"],["u32"]],["p"]]],[11,R[2040],E,"Puts a pixel at location `(x, y)`",57,[[["self"],["u32"],["p"]]]],[11,"save",E,R[1991],57,[[["self"],["q"]],[R[2]]]],[11,"new",E,"Creates a new image buffer based on a `Vec<P::Subpixel>`.",57,[[["u32"]],[["vec"],[R[1908],["vec"]]]]],[11,"from_pixel",E,"Constructs a new ImageBuffer by copying a pixel",57,[[["u32"],["p"]],[["vec"],[R[1908],["vec"]]]]],[11,"from_fn",E,"Constructs a new ImageBuffer by repeated application of…",57,[[["u32"],["f"]],[["vec"],[R[1908],["vec"]]]]],[11,"from_vec",E,"Creates an image buffer out of an existing buffer. Returns…",57,[[["vec"],["u32"]],[[R[1908],["vec"]],[R[24],[R[1908]]]]]],[11,"into_vec",E,"Consumes the image buffer and returns the underlying data…",57,[[],["vec"]]],[11,"new_luma8",E,"Creates a dynamic image backed by a buffer of grey pixels.",11,[[["u32"]],[R[1899]]]],[11,"new_luma_a8",E,"Creates a dynamic image backed by a buffer of grey pixels…",11,[[["u32"]],[R[1899]]]],[11,"new_rgb8",E,"Creates a dynamic image backed by a buffer of RGB pixels.",11,[[["u32"]],[R[1899]]]],[11,"new_rgba8",E,"Creates a dynamic image backed by a buffer of RGBA pixels.",11,[[["u32"]],[R[1899]]]],[11,"new_bgra8",E,"Creates a dynamic image backed by a buffer of BGRA pixels.",11,[[["u32"]],[R[1899]]]],[11,"new_bgr8",E,"Creates a dynamic image backed by a buffer of BGR pixels.",11,[[["u32"]],[R[1899]]]],[11,"to_rgb",E,"Returns a copy of this image as an RGB image.",11,[[["self"]],["rgbimage"]]],[11,"to_rgba",E,"Returns a copy of this image as an RGBA image.",11,[[["self"]],[R[1981]]]],[11,"to_bgr",E,"Returns a copy of this image as an BGR image.",11,[[["self"]],[["bgr",["u8"]],[R[1908],["bgr","vec"]],["vec",["u8"]]]]],[11,"to_bgra",E,"Returns a copy of this image as an BGRA image.",11,[[["self"]],[["vec",["u8"]],[R[1908],["bgra","vec"]],["bgra",["u8"]]]]],[11,"to_luma",E,"Returns a copy of this image as a Luma image.",11,[[["self"]],[R[1984]]]],[11,R[2000],E,"Returns a copy of this image as a LumaA image.",11,[[["self"]],[R[1985]]]],[11,"crop",E,"Return a cut out of this image delimited by the bounding…",11,[[["self"],["u32"]],[R[1899]]]],[11,"as_rgb8",E,"Return a reference to an 8bit RGB image",11,[[["self"]],[[R[24],["rgbimage"]],["rgbimage"]]]],[11,"as_mut_rgb8",E,"Return a mutable reference to an 8bit RGB image",11,[[["self"]],[[R[24],["rgbimage"]],["rgbimage"]]]],[11,"as_bgr8",E,"Return a reference to an 8bit BGR image",11,[[["self"]],[[R[24],[R[1908]]],[R[1908]]]]],[11,"as_mut_bgr8",E,"Return a mutable reference to an 8bit BGR image",11,[[["self"]],[[R[24],[R[1908]]],[R[1908]]]]],[11,"as_rgba8",E,"Return a reference to an 8bit RGBA image",11,[[["self"]],[[R[24],[R[1981]]],[R[1981]]]]],[11,"as_mut_rgba8",E,R[1983],11,[[["self"]],[[R[1981]],[R[24],[R[1981]]]]]],[11,"as_bgra8",E,"Return a reference to an 8bit BGRA image",11,[[["self"]],[[R[1908]],[R[24],[R[1908]]]]]],[11,"as_mut_bgra8",E,R[1983],11,[[["self"]],[[R[24],[R[1908]]],[R[1908]]]]],[11,"as_luma8",E,"Return a reference to an 8bit Grayscale image",11,[[["self"]],[[R[1984]],[R[24],[R[1984]]]]]],[11,"as_mut_luma8",E,"Return a mutable reference to an 8bit Grayscale image",11,[[["self"]],[[R[1984]],[R[24],[R[1984]]]]]],[11,"as_luma_alpha8",E,"Return a reference to an 8bit Grayscale image with an…",11,[[["self"]],[[R[1985]],[R[24],[R[1985]]]]]],[11,"as_mut_luma_alpha8",E,"Return a mutable reference to an 8bit Grayscale image with…",11,[[["self"]],[[R[1985]],[R[24],[R[1985]]]]]],[11,"raw_pixels",E,"Return this image's pixels as a byte vector.",11,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1986],E,R[1987],11,[[["self"]],[R[1914]]]],[11,"color",E,"Return this image's color type.",11,[[["self"]],[R[1564]]]],[11,"grayscale",E,"Return a grayscale version of this image.",11,[[["self"]],[R[1899]]]],[11,"invert",E,"Invert the colors of this image. This method operates…",11,[[["self"]]]],[11,"resize",E,R[1988],11,[[["self"],["u32"],[R[1563]]],[R[1899]]]],[11,"resize_exact",E,R[1988],11,[[["self"],["u32"],[R[1563]]],[R[1899]]]],[11,"thumbnail",E,"Scale this image down to fit within a specific size.…",11,[[["self"],["u32"]],[R[1899]]]],[11,"thumbnail_exact",E,"Scale this image down to a specific size. Returns a new…",11,[[["self"],["u32"]],[R[1899]]]],[11,"resize_to_fill",E,R[1988],11,[[["self"],["u32"],[R[1563]]],[R[1899]]]],[11,"blur",E,"Performs a Gaussian blur on this image. `sigma` is a…",11,[[["self"],["f32"]],[R[1899]]]],[11,"unsharpen",E,"Performs an unsharpen mask on this image. `sigma` is the…",11,[[["self"],["f32"],["i32"]],[R[1899]]]],[11,"filter3x3",E,"Filters this image with the specified 3x3 kernel.",11,[[["self"]],[R[1899]]]],[11,"adjust_contrast",E,"Adjust the contrast of this image. `contrast` is the…",11,[[["self"],["f32"]],[R[1899]]]],[11,"brighten",E,"Brighten the pixels of this image. `value` is the amount…",11,[[["self"],["i32"]],[R[1899]]]],[11,"huerotate",E,R[1989],11,[[["self"],["i32"]],[R[1899]]]],[11,"flipv",E,"Flip this image vertically",11,[[["self"]],[R[1899]]]],[11,"fliph",E,"Flip this image horizontally",11,[[["self"]],[R[1899]]]],[11,"rotate90",E,"Rotate this image 90 degrees clockwise.",11,[[["self"]],[R[1899]]]],[11,"rotate180",E,"Rotate this image 180 degrees clockwise.",11,[[["self"]],[R[1899]]]],[11,"rotate270",E,"Rotate this image 270 degrees clockwise.",11,[[["self"]],[R[1899]]]],[11,"write_to",E,"Encode this image and write it to `w`",11,[[["self"],["into",[R[1990]]],["w"],[R[1990]]],[R[1898]]]],[11,"save",E,R[1991],11,[[["self"],["q"]],[R[2]]]],[11,"new",E,"Construct a new subimage",58,[[["i"],["u32"]],[R[2071]]]],[11,"change_bounds",E,"Change the coordinates of this subimage.",58,[[["self"],["u32"]]]],[11,"to_image",E,"Convert this subimage to an ImageBuffer",58,[[["self"]],[["vec"],[R[1908],["vec"]]]]],[6,"ImageResult",E,R[2118],N,N],[6,"GrayAlphaImage",E,"Sendable grayscale + alpha channel image buffer",N,N],[6,"GrayImage",E,"Sendable grayscale image buffer",N,N],[6,"RgbImage",E,"Sendable Rgb image buffer",N,N],[6,"RgbaImage",E,"Sendable Rgb + alpha channel image buffer",N,N],[8,R[2095],E,"AnimationDecoder trait",N,N],[10,R[2035],E,"Consume the decoder producing a series of frames.",59,[[],["frames"]]],[8,R[2096],E,"A trait for manipulating images.",N,N],[16,"InnerImage",E,R[1994],60,N],[10,R[1992],E,R[1993],60,[[["self"],["u32"]]]],[10,R[2040],E,"Put a pixel at location (x, y)",60,[[["self"],["u32"]]]],[11,R[2041],E,R[2072],60,[[["self"],["u32"]]]],[10,R[2039],E,R[2042],60,[[["self"],["u32"]]]],[11,R[2073],E,R[2074],60,[[["self"]],["mutpixels"]]],[11,"copy_from",E,R[2075],60,[[["self"],["o"],["u32"]],["bool"]]],[10,R[2043],E,"Returns a mutable reference to the underlying image.",60,[[["self"]]]],[11,"sub_image",E,R[2076],60,[[["self"],["u32"]],[R[2071]]]],[8,R[2097],E,"Trait to inspect an image.",N,N],[16,"Pixel",E,"The type of pixel.",61,N],[16,"InnerImageView",E,R[1994],61,N],[10,R[1999],E,R[1995],61,[[["self"]]]],[11,"width",E,R[1996],61,[[["self"]],["u32"]]],[11,"height",E,R[1997],61,[[["self"]],["u32"]]],[10,"bounds",E,"The bounding rectangle of this image.",61,[[["self"]]]],[11,R[2036],E,R[2068],61,[[["self"],["u32"]],["bool"]]],[10,R[2037],E,R[1998],61,[[["self"],["u32"]]]],[11,R[2038],E,R[1998],61,[[["self"],["u32"]]]],[11,"pixels",E,R[2069],61,[[["self"]],["pixels"]]],[10,"inner",E,"Returns a reference to the underlying image.",61,[[["self"]]]],[11,"view",E,R[2070],61,[[["self"],["u32"]],[R[2071]]]],[8,R[2098],E,"The trait that all decoders implement",N,N],[16,"Reader",E,"The type of reader produced by `into_reader`.",62,N],[10,R[1999],E,"Returns a tuple containing the width and height of the image",62,[[["self"]]]],[10,R[1564],E,"Returns the color type of the image e.g. RGB(8) (8bit RGB)",62,[[["self"]],[R[1564]]]],[10,R[2025],E,"Returns a reader that can be used to obtain the bytes of…",62,[[],[R[1898]]]],[11,"row_bytes",E,R[2060],62,[[["self"]],["u64"]]],[11,R[2061],E,R[2062],62,[[["self"]],["u64"]]],[11,R[2027],E,R[2063],62,[[["self"]],["u64"]]],[11,R[2028],E,R[2064],62,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[2065],E,R[2066],62,[[["fn"]],[["vec",["u8"]],[R[1898],["vec"]]]]],[8,R[2099],E,"ImageDecoderExt trait",N,N],[11,"read_rect",E,R[2067],63,[[["self"],["u64"]],[R[1898]]]],[10,R[2034],E,"Read a rectangular section of the image, periodically…",63,[[["self"],["fn"],["u64"]],[R[1898]]]],[8,R[2100],E,"Provides color conversions for whole image buffers.",N,N],[10,"convert",E,"Converts `self` to a buffer of type T",64,[[["self"]],[T]]],[8,"Pixel",E,"A generalized pixel.",N,N],[16,"Subpixel",E,"The underlying subpixel type.",65,N],[10,R[2013],E,"Returns the number of channels of this pixel type.",65,[[],["u8"]]],[10,R[2023],E,"Returns the components as a slice.",65,[[["self"]]]],[10,R[2015],E,"Returns the components as a mutable slice",65,[[["self"]]]],[10,R[2014],E,"Returns a string that can help to interpret the meaning…",65,[[],["str"]]],[10,R[2020],E,"Returns the ColorType for this pixel format",65,[[],[R[1564]]]],[10,R[2022],E,"Returns the channels of this pixel as a 4 tuple. If the…",65,[[["self"]]]],[10,R[2016],E,"Construct a pixel from the 4 channels a, b, c and d. If…",65,[[],["self"]]],[10,R[2021],E,"Returns a view into a slice.",65,[[],["self"]]],[10,R[2017],E,"Returns mutable view into a mutable slice.",65,[[],["self"]]],[10,"to_rgb",E,"Convert this pixel to RGB",65,[[["self"]],["rgb"]]],[10,"to_rgba",E,"Convert this pixel to RGB with an alpha channel",65,[[["self"]],["rgba"]]],[10,"to_luma",E,"Convert this pixel to luma",65,[[["self"]],["luma"]]],[10,R[2000],E,"Convert this pixel to luma with an alpha channel",65,[[["self"]],["lumaa"]]],[10,"to_bgr",E,"Convert this pixel to BGR",65,[[["self"]],["bgr"]]],[10,"to_bgra",E,"Convert this pixel to BGR with an alpha channel",65,[[["self"]],["bgra"]]],[10,"map",E,R[2001],65,[[["self"],["f"]],["self"]]],[10,"apply",E,R[2001],65,[[["self"],["f"]]]],[10,R[2018],E,R[2002],65,[[["self"],["f"],["g"]],["self"]]],[10,R[2019],E,R[2002],65,[[["self"],["f"],["g"]]]],[10,"map2",E,R[2003],65,[[["self"],["f"]],["self"]]],[10,"apply2",E,R[2003],65,[[["self"],["self"],["f"]]]],[10,"invert",E,"Invert this pixel",65,[[["self"]]]],[10,"blend",E,"Blend the color of a given pixel into ourself, taking into…",65,[[["self"],["self"]]]],[8,"Primitive",E,"Primitive trait from old stdlib",N,N],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,66,[[],[U]]],[11,R[22],E,E,66,[[],["i"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,R[2007],E,E,66,[[],[R[1636]]]],[11,"into",E,E,67,[[],[U]]],[11,R[22],E,E,67,[[],["i"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[2007],E,E,67,[[],[R[1636]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"into",E,E,57,[[],[U]]],[11,R[83],E,E,57,[[["self"]],[T]]],[11,R[84],E,E,57,[[["self"],[T]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"into",E,E,56,[[],[U]]],[11,R[83],E,E,56,[[["self"]],[T]]],[11,R[84],E,E,56,[[["self"],[T]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"into",E,E,55,[[],[U]]],[11,R[22],E,E,55,[[],["i"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[R[81]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",R[2004],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",R[2005],E,68,[[],[U]]],[11,R[83],E,E,68,[[["self"]],[T]]],[11,R[84],E,E,68,[[["self"],[T]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,"into",R[2006],E,14,[[],[U]]],[11,R[83],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"into",E,E,15,[[],[U]]],[11,R[83],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"into",E,E,18,[[],[U]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"into",E,E,19,[[],[U]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"into",E,E,16,[[],[U]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"into",E,E,17,[[],[U]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"into",R[2024],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"into",R[2026],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"into",E,E,22,[[],[U]]],[11,R[83],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"into",R[2012],E,25,[[],[U]]],[11,R[83],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"into",E,E,26,[[],[U]]],[11,R[83],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"into",R[2029],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"into",E,E,32,[[],[U]]],[11,R[22],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"into",E,E,29,[[],[U]]],[11,R[83],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"into",E,E,70,[[],[U]]],[11,R[22],E,E,70,[[],["i"]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,R[2007],E,E,70,[[],[R[1636]]]],[11,"into",E,E,30,[[],[U]]],[11,R[83],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"into",R[2030],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"into",R[2008],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"into",R[2031],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"into",R[2032],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"into",E,E,40,[[],[U]]],[11,R[83],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"],[T]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,"into",E,E,41,[[],[U]]],[11,R[83],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"],[T]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"into",E,E,42,[[],[U]]],[11,R[83],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"],[T]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"into",E,E,43,[[],[U]]],[11,R[83],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"],[T]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"into",E,E,44,[[],[U]]],[11,R[83],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"],[T]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"into",E,E,45,[[],[U]]],[11,R[83],E,E,45,[[["self"]],[T]]],[11,R[84],E,E,45,[[["self"],[T]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"into",E,E,46,[[],[U]]],[11,R[83],E,E,46,[[["self"]],[T]]],[11,R[84],E,E,46,[[["self"],[T]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"into",R[2033],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"into",R[2009],E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"into",R[2010],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"into",R[2011],E,53,[[],[U]]],[11,R[83],E,E,53,[[["self"]],[T]]],[11,R[84],E,E,53,[[["self"],[T]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,"fmt",R[2012],E,26,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"clone",E,E,26,[[["self"]],["frame"]]],[11,"clone",E,E,25,[[["self"]],[R[124]]]],[11,R[188],E,E,26,[[],["frame"]]],[11,"eq",E,E,25,[[["self"],[R[124]]],["bool"]]],[11,"index_of",R[2005],E,68,[[["self"],["luma"]],["usize"]]],[11,"map_color",E,E,68,[[["self"],["luma"]]]],[11,"index_of",R[2004],E,12,[[["self"],["rgba"]],["usize"]]],[11,"map_color",E,E,12,[[["self"],["rgba"]]]],[11,R[2013],"image",E,2,[[],["u8"]]],[11,R[2014],E,E,2,[[],["str"]]],[11,R[2020],E,E,2,[[],[R[1564]]]],[11,R[2023],E,E,2,[[["self"]]]],[11,R[2015],E,E,2,[[["self"]]]],[11,R[2022],E,E,2,[[["self"]]]],[11,R[2016],E,E,2,[[[T]],["rgb"]]],[11,R[2021],E,E,2,[[],["rgb"]]],[11,R[2017],E,E,2,[[],["rgb"]]],[11,"to_rgb",E,E,2,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,2,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,2,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,2,[[["self"]],["bgra"]]],[11,"to_luma",E,E,2,[[["self"]],["luma"]]],[11,R[2000],E,E,2,[[["self"]],["lumaa"]]],[11,"map",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply",E,E,2,[[["self"],["f"]]]],[11,R[2018],E,E,2,[[["self"],["f"],["g"]],["rgb"]]],[11,R[2019],E,E,2,[[["self"],["f"],["g"]]]],[11,"map2",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply2",E,E,2,[[["self"],["rgb"],["f"]]]],[11,"invert",E,E,2,[[["self"]]]],[11,"blend",E,E,2,[[["self"],["rgb"]]]],[11,R[2013],E,E,4,[[],["u8"]]],[11,R[2014],E,E,4,[[],["str"]]],[11,R[2020],E,E,4,[[],[R[1564]]]],[11,R[2023],E,E,4,[[["self"]]]],[11,R[2015],E,E,4,[[["self"]]]],[11,R[2022],E,E,4,[[["self"]]]],[11,R[2016],E,E,4,[[[T]],["bgr"]]],[11,R[2021],E,E,4,[[],["bgr"]]],[11,R[2017],E,E,4,[[],["bgr"]]],[11,"to_rgb",E,E,4,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,4,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,4,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,4,[[["self"]],["bgra"]]],[11,"to_luma",E,E,4,[[["self"]],["luma"]]],[11,R[2000],E,E,4,[[["self"]],["lumaa"]]],[11,"map",E,E,4,[[["self"],["f"]],["bgr"]]],[11,"apply",E,E,4,[[["self"],["f"]]]],[11,R[2018],E,E,4,[[["self"],["f"],["g"]],["bgr"]]],[11,R[2019],E,E,4,[[["self"],["f"],["g"]]]],[11,"map2",E,E,4,[[["self"],["f"]],["bgr"]]],[11,"apply2",E,E,4,[[["self"],["f"],["bgr"]]]],[11,"invert",E,E,4,[[["self"]]]],[11,"blend",E,E,4,[[["self"],["bgr"]]]],[11,R[2013],E,E,0,[[],["u8"]]],[11,R[2014],E,E,0,[[],["str"]]],[11,R[2020],E,E,0,[[],[R[1564]]]],[11,R[2023],E,E,0,[[["self"]]]],[11,R[2015],E,E,0,[[["self"]]]],[11,R[2022],E,E,0,[[["self"]]]],[11,R[2016],E,E,0,[[[T]],["luma"]]],[11,R[2021],E,E,0,[[],["luma"]]],[11,R[2017],E,E,0,[[],["luma"]]],[11,"to_rgb",E,E,0,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,0,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,0,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,0,[[["self"]],["bgra"]]],[11,"to_luma",E,E,0,[[["self"]],["luma"]]],[11,R[2000],E,E,0,[[["self"]],["lumaa"]]],[11,"map",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply",E,E,0,[[["self"],["f"]]]],[11,R[2018],E,E,0,[[["self"],["f"],["g"]],["luma"]]],[11,R[2019],E,E,0,[[["self"],["f"],["g"]]]],[11,"map2",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply2",E,E,0,[[["self"],["luma"],["f"]]]],[11,"invert",E,E,0,[[["self"]]]],[11,"blend",E,E,0,[[["self"],["luma"]]]],[11,R[2013],E,E,3,[[],["u8"]]],[11,R[2014],E,E,3,[[],["str"]]],[11,R[2020],E,E,3,[[],[R[1564]]]],[11,R[2023],E,E,3,[[["self"]]]],[11,R[2015],E,E,3,[[["self"]]]],[11,R[2022],E,E,3,[[["self"]]]],[11,R[2016],E,E,3,[[[T]],["rgba"]]],[11,R[2021],E,E,3,[[],["rgba"]]],[11,R[2017],E,E,3,[[],["rgba"]]],[11,"to_rgb",E,E,3,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,3,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,3,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,3,[[["self"]],["bgra"]]],[11,"to_luma",E,E,3,[[["self"]],["luma"]]],[11,R[2000],E,E,3,[[["self"]],["lumaa"]]],[11,"map",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply",E,E,3,[[["self"],["f"]]]],[11,R[2018],E,E,3,[[["self"],["f"],["g"]],["rgba"]]],[11,R[2019],E,E,3,[[["self"],["f"],["g"]]]],[11,"map2",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply2",E,E,3,[[["self"],["f"],["rgba"]]]],[11,"invert",E,E,3,[[["self"]]]],[11,"blend",E,E,3,[[["self"],["rgba"]]]],[11,R[2013],E,E,5,[[],["u8"]]],[11,R[2014],E,E,5,[[],["str"]]],[11,R[2020],E,E,5,[[],[R[1564]]]],[11,R[2023],E,E,5,[[["self"]]]],[11,R[2015],E,E,5,[[["self"]]]],[11,R[2022],E,E,5,[[["self"]]]],[11,R[2016],E,E,5,[[[T]],["bgra"]]],[11,R[2021],E,E,5,[[],["bgra"]]],[11,R[2017],E,E,5,[[],["bgra"]]],[11,"to_rgb",E,E,5,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,5,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,5,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,5,[[["self"]],["bgra"]]],[11,"to_luma",E,E,5,[[["self"]],["luma"]]],[11,R[2000],E,E,5,[[["self"]],["lumaa"]]],[11,"map",E,E,5,[[["self"],["f"]],["bgra"]]],[11,"apply",E,E,5,[[["self"],["f"]]]],[11,R[2018],E,E,5,[[["self"],["f"],["g"]],["bgra"]]],[11,R[2019],E,E,5,[[["self"],["f"],["g"]]]],[11,"map2",E,E,5,[[["self"],["f"]],["bgra"]]],[11,"apply2",E,E,5,[[["self"],["bgra"],["f"]]]],[11,"invert",E,E,5,[[["self"]]]],[11,"blend",E,E,5,[[["self"],["bgra"]]]],[11,R[2013],E,E,1,[[],["u8"]]],[11,R[2014],E,E,1,[[],["str"]]],[11,R[2020],E,E,1,[[],[R[1564]]]],[11,R[2023],E,E,1,[[["self"]]]],[11,R[2015],E,E,1,[[["self"]]]],[11,R[2022],E,E,1,[[["self"]]]],[11,R[2016],E,E,1,[[[T]],["lumaa"]]],[11,R[2021],E,E,1,[[],["lumaa"]]],[11,R[2017],E,E,1,[[],["lumaa"]]],[11,"to_rgb",E,E,1,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,1,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,1,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,1,[[["self"]],["bgra"]]],[11,"to_luma",E,E,1,[[["self"]],["luma"]]],[11,R[2000],E,E,1,[[["self"]],["lumaa"]]],[11,"map",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply",E,E,1,[[["self"],["f"]]]],[11,R[2018],E,E,1,[[["self"],["f"],["g"]],["lumaa"]]],[11,R[2019],E,E,1,[[["self"],["f"],["g"]]]],[11,"map2",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply2",E,E,1,[[["self"],["f"],["lumaa"]]]],[11,"invert",E,E,1,[[["self"]]]],[11,"blend",E,E,1,[[["self"],["lumaa"]]]],[11,"convert",E,E,57,[[["self"]],[[R[1908],["vec"]],["vec"]]]],[11,R[1999],R[2024],E,20,[[["self"]]]],[11,R[1564],E,E,20,[[["self"]],[R[1564]]]],[11,R[2025],E,E,20,[[],[R[1898]]]],[11,R[2028],E,E,20,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2026],E,23,[[["self"]]]],[11,R[1564],E,E,23,[[["self"]],[R[1564]]]],[11,R[2027],E,E,23,[[["self"]],["u64"]]],[11,R[2025],E,E,23,[[],[R[1898]]]],[11,R[2028],E,E,23,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2012],E,27,[[["self"]]]],[11,R[1564],E,E,27,[[["self"]],[R[1564]]]],[11,R[2025],E,E,27,[[],[R[1898]]]],[11,R[2028],E,E,27,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2029],E,31,[[["self"]]]],[11,R[1564],E,E,31,[[["self"]],[R[1564]]]],[11,R[2025],E,E,31,[[],[R[1898]]]],[11,R[2028],E,E,31,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2030],E,34,[[["self"]]]],[11,R[1564],E,E,34,[[["self"]],[R[1564]]]],[11,R[2025],E,E,34,[[],[R[1898]]]],[11,R[2028],E,E,34,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2008],E,36,[[["self"]]]],[11,R[1564],E,E,36,[[["self"]],[R[1564]]]],[11,R[2025],E,E,36,[[],[R[1898]]]],[11,R[2028],E,E,36,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2031],E,38,[[["self"]]]],[11,R[1564],E,E,38,[[["self"]],[R[1564]]]],[11,R[2025],E,E,38,[[],[R[1898]]]],[11,R[2028],E,E,38,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2032],E,47,[[["self"]]]],[11,R[1564],E,E,47,[[["self"]],[R[1564]]]],[11,R[2025],E,E,47,[[],[R[1898]]]],[11,R[2028],E,E,47,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2033],E,50,[[["self"]]]],[11,R[1564],E,E,50,[[["self"]],[R[1564]]]],[11,R[2027],E,E,50,[[["self"]],["u64"]]],[11,R[2025],E,E,50,[[],[R[1898]]]],[11,R[2028],E,E,50,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2009],E,51,[[["self"]]]],[11,R[1564],E,E,51,[[["self"]],[R[1564]]]],[11,R[2025],E,E,51,[[],[R[1898]]]],[11,R[2028],E,E,51,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[1999],R[2010],E,52,[[["self"]]]],[11,R[1564],E,E,52,[[["self"]],[R[1564]]]],[11,R[2025],E,E,52,[[],[R[1898]]]],[11,R[2028],E,E,52,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[2034],R[2024],E,20,[[["self"],["fn"],["u64"]],[R[1898]]]],[11,R[2034],R[2026],E,23,[[["self"],["fn"],["u64"]],[R[1898]]]],[11,R[2034],R[2029],E,31,[[["self"],["fn"],["u64"]],[R[1898]]]],[11,R[2035],R[2012],E,27,[[],["frames"]]],[11,R[1999],R[2006],E,18,[[["self"]]]],[11,"bounds",E,E,18,[[["self"]]]],[11,R[2036],E,E,18,[[["self"],["u32"]],["bool"]]],[11,R[2037],E,E,18,[[["self"],["u32"]]]],[11,"inner",E,E,18,[[["self"]],["self"]]],[11,R[1999],E,E,19,[[["self"]]]],[11,"bounds",E,E,19,[[["self"]]]],[11,R[2036],E,E,19,[[["self"],["u32"]],["bool"]]],[11,R[2037],E,E,19,[[["self"],["u32"]]]],[11,"inner",E,E,19,[[["self"]],["self"]]],[11,R[1999],"image",E,57,[[["self"]]]],[11,"bounds",E,E,57,[[["self"]]]],[11,R[2037],E,E,57,[[["self"],["u32"]],["p"]]],[11,R[2038],E,"Returns the pixel located at (x, y), ignoring bounds…",57,[[["self"],["u32"]],["p"]]],[11,"inner",E,E,57,[[["self"]]]],[11,R[1999],E,E,11,[[["self"]]]],[11,"bounds",E,E,11,[[["self"]]]],[11,R[2037],E,E,11,[[["self"],["u32"]],[["rgba",["u8"]],["u8"]]]],[11,"inner",E,E,11,[[["self"]]]],[11,R[1999],E,E,58,[[["self"]]]],[11,"bounds",E,E,58,[[["self"]]]],[11,R[2037],E,E,58,[[["self"],["u32"]]]],[11,"view",E,E,58,[[["self"],["u32"]],[R[2071]]]],[11,"inner",E,E,58,[[["self"]]]],[11,R[1992],R[2006],E,19,[[["self"],["u32"]]]],[11,R[2040],E,E,19,[[["self"],["u32"]]]],[11,R[2039],E,E,19,[[["self"],["u32"]]]],[11,R[2043],E,E,19,[[["self"]],["self"]]],[11,R[1992],"image",E,57,[[["self"],["u32"]],["p"]]],[11,R[2040],E,E,57,[[["self"],["u32"],["p"]]]],[11,R[2041],E,"Puts a pixel at location (x, y), ignoring bounds checking.",57,[[["self"],["u32"],["p"]]]],[11,R[2039],E,R[2042],57,[[["self"],["u32"],["p"]]]],[11,R[2043],E,E,57,[[["self"]]]],[11,R[2040],E,E,11,[[["self"],["u32"],["rgba",["u8"]],["u8"]]]],[11,R[2039],E,"DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",11,[[["self"],["u32"],["rgba",["u8"]],["u8"]]]],[11,R[1992],E,"DEPRECATED: Do not use is function: It is unimplemented!",11,[[["self"],["u32"]],["rgba"]]],[11,R[2043],E,E,11,[[["self"]]]],[11,R[1992],E,E,58,[[["self"],["u32"]]]],[11,R[2040],E,E,58,[[["self"],["u32"]]]],[11,R[2039],E,"DEPRECATED: This method will be removed. Blend the pixel…",58,[[["self"],["u32"]]]],[11,"sub_image",E,E,58,[[["self"],["u32"]],[R[2071]]]],[11,R[2043],E,E,58,[[["self"]]]],[11,R[188],R[2029],E,29,[[],[R[1960]]]],[11,R[188],R[2011],E,53,[[],["frame"]]],[11,"clone",R[2005],E,68,[[["self"]],["bilevel"]]],[11,"clone","image",E,8,[[["self"]],[R[1563]]]],[11,"clone",R[2006],E,14,[[["self"]],[R[1914]]]],[11,"clone",E,E,15,[[["self"]],[R[2044]]]],[11,"clone",E,E,18,[[["self"]],["view"]]],[11,"clone",E,E,19,[[["self"]],["viewmut"]]],[11,"clone",E,E,16,[[["self"]],["error"]]],[11,"clone",E,E,17,[[["self"]],[R[2045]]]],[11,"clone",R[2026],E,22,[[["self"]],[R[2046]]]],[11,"clone",R[2029],E,29,[[["self"]],[R[1960]]]],[11,"clone",E,E,30,[[["self"]],[R[2047]]]],[11,"clone",R[2032],E,46,[[["self"]],[R[2048]]]],[11,"clone",E,E,45,[[["self"]],[R[1971]]]],[11,"clone",E,E,41,[[["self"]],[R[1972]]]],[11,"clone",E,E,42,[[["self"]],[R[1973]]]],[11,"clone",E,E,43,[[["self"]],[R[1974]]]],[11,"clone",E,E,40,[[["self"]],[R[1975]]]],[11,"clone",E,E,44,[[["self"]],["arbitrarytupltype"]]],[11,"clone",R[2011],E,53,[[["self"]],["frame"]]],[11,"clone","image",E,56,[[["self"]],["frame"]]],[11,"clone",E,E,57,[[["self"]],[R[1908]]]],[11,"clone",E,E,6,[[["self"]],[R[1564]]]],[11,"clone",E,E,2,[[["self"]],["rgb"]]],[11,"clone",E,E,4,[[["self"]],["bgr"]]],[11,"clone",E,E,0,[[["self"]],["luma"]]],[11,"clone",E,E,3,[[["self"]],["rgba"]]],[11,"clone",E,E,5,[[["self"]],["bgra"]]],[11,"clone",E,E,1,[[["self"]],["lumaa"]]],[11,"clone",E,E,11,[[["self"]],[R[1899]]]],[11,"clone",E,E,9,[[["self"]],[R[1897]]]],[11,"clone",E,E,10,[[["self"]],[R[1990]]]],[11,R[153],R[2006],"Compares the logical preconditions.",17,[[["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,R[22],R[2029],E,32,[[]]],[11,"eq",R[2006],E,15,[[["self"],[R[2044]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[2044]]],["bool"]]],[11,"eq",E,E,16,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[2045]]],["bool"]]],[11,"eq",R[2026],E,22,[[["self"],[R[2046]]],["bool"]]],[11,"eq",R[2029],E,29,[[["self"],[R[1960]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[1960]]],["bool"]]],[11,"eq",R[2032],E,46,[[["self"],[R[2048]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[1971]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[1971]]],["bool"]]],[11,"eq","image",E,6,[[["self"],[R[1564]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[1564]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["rgb"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["rgb"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["bgr"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["bgr"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["bgra"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["bgra"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["lumaa"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["lumaa"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1897]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1990]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1990]]],["bool"]]],[11,"from",E,E,7,[[["error"]],[R[1976]]]],[11,"from",E,E,7,[[[R[127]]],[R[1976]]]],[11,"from",E,E,6,[[[R[1888]]],[R[1564]]]],[11,"from",E,E,7,[[["error"]],[R[1976]]]],[11,"from",E,E,6,[[],[R[1564]]]],[11,"from",E,E,7,[[[R[127]]],[R[1976]]]],[11,"from",R[2032],E,49,[[[R[1972]]],["self"]]],[11,"from",E,E,49,[[[R[1973]]],["self"]]],[11,"from",E,E,49,[[[R[1974]]],["self"]]],[11,"from",E,E,49,[[[R[1975]]],["self"]]],[11,"from","image",E,7,[[["tifferror"]],[R[1976]]]],[11,"from",E,E,6,[[[R[1564]]],[R[1564]]]],[11,"from",E,E,7,[[["error"]],[R[1976]]]],[11,"from",E,E,10,[[[R[1897]]],["self"]]],[11,"next",R[2029],E,70,[[["self"]],[R[24]]]],[11,R[154],E,E,70,[[["self"]]]],[11,"next","image",E,55,[[["self"]],[[R[1898],["frame"]],[R[24],[R[1898]]]]]],[11,"next",E,E,67,[[["self"]],[R[24]]]],[11,"next",E,E,66,[[["self"]],[R[24]]]],[11,R[13],E,E,57,[[["self"]]]],[11,"hash",R[2006],E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash","image",E,6,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"deref",E,E,57,[[["self"]]]],[11,"index",R[2006],"Return a reference to a single sample at specified…",14,[[["self"]]]],[11,"index","image",E,57,[[["self"]],["p"]]],[11,"index",E,E,2,[[["self"],["usize"]],[T]]],[11,"index",E,E,4,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,3,[[["self"],["usize"]],[T]]],[11,"index",E,E,5,[[["self"],["usize"]],[T]]],[11,"index",E,E,1,[[["self"],["usize"]],[T]]],[11,R[2049],R[2006],"Return a mutable reference to a single sample at specified…",14,[[["self"]]]],[11,R[2049],"image",E,57,[[["self"]],["p"]]],[11,R[2049],E,E,2,[[["self"],["usize"]],[T]]],[11,R[2049],E,E,4,[[["self"],["usize"]],[T]]],[11,R[2049],E,E,0,[[["self"],["usize"]],[T]]],[11,R[2049],E,E,3,[[["self"],["usize"]],[T]]],[11,R[2049],E,E,5,[[["self"],["usize"]],[T]]],[11,R[2049],E,E,1,[[["self"],["usize"]],[T]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2006],E,14,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2026],E,22,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2029],E,31,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,32,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2032],E,46,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,45,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2011],E,53,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","image",E,57,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,7,[[["self"]],["str"]]],[11,"cause",E,E,7,[[["self"]],[[R[24],["error"]],["error"]]]],[11,"read",R[2026],E,69,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"from_u8",R[2012],R[125],25,[[["u8"]],[[R[24],[R[124]]],[R[124]]]]],[11,"from_rgba",E,R[2050],26,[[["u16"]],["frame"]]],[11,R[2051],E,R[2052],26,[[["u16"],["i32"]],["frame"]]],[11,R[2053],E,R[2054],26,[[[R[24],["u8"]],["u16"],["u8"]],["frame"]]],[11,R[2055],E,R[2056],26,[[[R[24],["u8"]],["u16"],["u8"]],["frame"]]],[11,R[1861],E,R[2057],26,[[["u16"]],["frame"]]],[11,R[2058],E,R[2059],26,[[["u16"],["i32"]],["frame"]]],[11,"expand_palette","image","Expands a color palette by re-using the existing buffer.…",71,[[["u8"],[R[24],["u8"]]],[R[1981]]]],[11,"row_bytes",E,R[2060],62,[[["self"]],["u64"]]],[11,R[2061],E,R[2062],62,[[["self"]],["u64"]]],[11,R[2027],E,R[2063],62,[[["self"]],["u64"]]],[11,R[2028],E,R[2064],62,[[],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,R[2065],E,R[2066],62,[[["fn"]],[["vec",["u8"]],[R[1898],["vec"]]]]],[11,"read_rect",E,R[2067],63,[[["self"],["u64"]],[R[1898]]]],[11,"width",E,R[1996],61,[[["self"]],["u32"]]],[11,"height",E,R[1997],61,[[["self"]],["u32"]]],[11,R[2036],E,R[2068],61,[[["self"],["u32"]],["bool"]]],[11,R[2038],E,R[1998],61,[[["self"],["u32"]]]],[11,"pixels",E,R[2069],61,[[["self"]],["pixels"]]],[11,"view",E,R[2070],61,[[["self"],["u32"]],[R[2071]]]],[11,R[2041],E,R[2072],60,[[["self"],["u32"]]]],[11,R[2073],E,R[2074],60,[[["self"]],["mutpixels"]]],[11,"copy_from",E,R[2075],60,[[["self"],["o"],["u32"]],["bool"]]],[11,"sub_image",E,R[2076],60,[[["self"],["u32"]],[R[2071]]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,R[1587]],[4,"ImageError"],[4,R[2077]],[4,R[2078]],[4,R[2079]],[4,R[2080]],[3,R[44]],[8,"ColorMap"],[3,R[2081]],[3,R[2082]],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"BMPDecoder"],[3,"BMPEncoder"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[4,R[136]],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,R[2083]],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDREncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,R[2084]],[3,R[2085]],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,R[2086]],[3,R[2087]],[3,R[2088]],[3,R[2089]],[4,R[2090]],[4,"PNMSubtype"],[4,R[2091]],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TGADecoder"],[3,R[2092]],[3,R[2093]],[3,"Frame"],[3,"VP8Decoder"],[3,"Frames"],[3,"Frame"],[3,R[2094]],[3,"SubImage"],[8,R[2095]],[8,R[2096]],[8,R[2097]],[8,R[2098]],[8,R[2099]],[8,R[2100]],[8,"Pixel"],[3,"MutPixels"],[3,"Pixels"],[3,"BiLevel"],[3,"DXTReader"],[3,R[2101]],[6,"GrayImage"]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","i":[[3,R[118],"inflate","A DEFLATE decoder.",N,N],[3,R[120],E,R[100],N,N],[3,R[119],E,R[100],N,N],[3,R[121],E,E,N,N],[5,"inflate_bytes",E,"Decompress the given slice of DEFLATE compressed data.",N,[[],[[R[2],["vec",R[81]]],[R[81]],["vec",["u8"]]]]],[5,"inflate_bytes_zlib",E,R[101],N,[[],[[R[2],["vec",R[81]]],[R[81]],["vec",["u8"]]]]],[5,"inflate_bytes_zlib_no_checksum",E,R[101],N,[[],[[R[2],["vec",R[81]]],[R[81]],["vec",["u8"]]]]],[11,"new",E,E,0,[[["w"]],[R[102]]]],[11,R[103],E,E,0,[[["w"]],[R[102]]]],[11,"finish",E,E,0,[[],[R[2]]]],[11,"new",E,R[106],1,[[["r"]],[R[104]]]],[11,R[103],E,R[105],1,[[["r"]],[R[104]]]],[11,R[108],E,R[105],1,[[["r"]],[R[104]]]],[11,"reset",E,R[109],1,[[["self"],["r"]],["r"]]],[11,R[111],E,R[112],1,[[["self"]]]],[11,"get_ref",E,"Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying `BufRead`…",1,[[["self"]],["r"]]],[11,R[25],E,"Drops the decoder and return the inner `BufRead` instance.",1,[[],["r"]]],[11,"total_in",E,"Returns the total bytes read from the underlying `BufRead`…",1,[[["self"]],["u64"]]],[11,R[113],E,R[110],1,[[["self"]],["u64"]]],[11,R[114],E,R[115],1,[[["self"]],["u32"]]],[11,"new",E,R[106],2,[[["r"]],[R[107]]]],[11,R[103],E,R[105],2,[[["r"]],[R[107]]]],[11,R[108],E,R[105],2,[[["r"]],[R[107]]]],[11,"reset",E,R[109],2,[[["self"],["r"]],["r"]]],[11,"get_ref",E,"Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,R[25],E,R[110],2,[[],["r"]]],[11,R[111],E,R[112],2,[[["self"]]]],[11,"total_in",E,"Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,R[113],E,R[110],2,[[["self"]],["u64"]]],[11,R[114],E,R[115],2,[[["self"]],["u32"]]],[11,"new",E,"Create a new stream for decoding raw deflate encoded data.",3,[[],[R[116]]]],[11,R[103],E,R[117],3,[[],[R[116]]]],[11,R[108],E,R[117],3,[[],[R[116]]]],[11,"reset",E,E,3,[[["self"]]]],[11,"reset_to_zlib",E,E,3,[[["self"]]]],[11,"update",E,"Try to uncompress/decode the data in `data`.",3,[[["self"]],[[R[81]],[R[2],[R[81]]]]]],[11,R[114],E,R[115],3,[[["self"]],["u32"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"write",E,E,0,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[2]]]],[11,"read",E,E,1,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"read",E,E,2,[[["self"]],[[R[2],["usize"]],["usize"]]]]],"p":[[3,R[118]],[3,R[119]],[3,R[120]],[3,R[121]]]};
searchIndex["jpeg_decoder"]={"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder","jpeg_decoder",R[2102],N,N],[3,"ImageInfo",E,"Represents metadata of an image.",N,N],[12,"width",E,"The width of the image, in pixels.",0,N],[12,"height",E,"The height of the image, in pixels.",0,N],[12,"pixel_format",E,"The pixel format of the image.",0,N],[4,R[1890],E,"An enumeration over combinations of color spaces and bit…",N,N],[13,"L8",E,"Luminance (grayscale), 8 bits",1,N],[13,"RGB24",E,"RGB, 8 bits per channel",1,N],[13,"CMYK32",E,"CMYK, 8 bits per channel",1,N],[4,"Error",E,"Errors that can occur while decoding a JPEG image.",N,N],[13,"Format",E,"The image is not formatted properly. The string contains…",2,N],[13,R[2103],E,"The image makes use of a JPEG feature not (currently)…",2,N],[13,"Io",E,"An I/O error occurred while decoding the image.",2,N],[13,"Internal",E,"An internal error occurred while decoding the image.",2,N],[4,R[1891],E,"An enumeration over JPEG features (currently) unsupported…",N,N],[13,"Hierarchical",E,"Hierarchical JPEG.",3,N],[13,"Lossless",E,"Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding",E,"JPEG using arithmetic entropy coding instead of Huffman…",3,N],[13,"SamplePrecision",E,"Sample precision in bits. 8 bit sample precision is what…",3,N],[13,"ComponentCount",E,"Number of components in an image. 1, 3 and 4 components…",3,N],[13,"DNL",E,"An image can specify a zero height in the frame header and…",3,N],[13,"SubsamplingRatio",E,"Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio",E,"A subsampling ratio not representable as an integer.",3,N],[11,"new",E,"Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info",E,"Returns metadata about the image.",4,[[["self"]],[[R[24],[R[1889]]],[R[1889]]]]],[11,"read_info",E,"Tries to read metadata from the image without decoding it.",4,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"decode",E,"Decodes the image and returns the decoded pixels if…",4,[[["self"]],[["vec",["u8"]],["error"],[R[2],["vec","error"]]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[82],E,E,2,[[["self"]],[R[81]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"clone",E,E,1,[[["self"]],[R[1888]]]],[11,"clone",E,E,0,[[["self"]],[R[1889]]]],[11,"eq",E,E,1,[[["self"],[R[1888]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1889]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1889]]],["bool"]]],[11,"from",E,E,2,[[["ioerror"]],["error"]]],[11,"from",E,E,2,[[["recverror"]],["error"]]],[11,"from",E,E,2,[[["senderror"]],["error"]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[["stderror"],[R[24],["stderror"]]]]]],"p":[[3,"ImageInfo"],[4,R[1890]],[4,"Error"],[4,R[1891]],[3,"Decoder"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[5],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[5],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[306],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[245],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[246],E,E,N,N],[12,R[218],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[307],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,18,N],[12,"imr_interface",E,E,18,N],[3,R[308],E,E,N,N],[12,"sa_family",E,E,19,N],[12,"sa_data",E,E,19,N],[3,R[247],E,E,N,N],[12,"sin_family",E,E,20,N],[12,"sin_port",E,E,20,N],[12,"sin_addr",E,E,20,N],[12,"sin_zero",E,E,20,N],[3,R[248],E,E,N,N],[12,"sin6_family",E,E,21,N],[12,"sin6_port",E,E,21,N],[12,"sin6_flowinfo",E,E,21,N],[12,"sin6_addr",E,E,21,N],[12,"sin6_scope_id",E,E,21,N],[3,R[309],E,E,N,N],[12,"ai_flags",E,E,22,N],[12,"ai_family",E,E,22,N],[12,"ai_socktype",E,E,22,N],[12,"ai_protocol",E,E,22,N],[12,"ai_addrlen",E,E,22,N],[12,"ai_addr",E,E,22,N],[12,"ai_canonname",E,E,22,N],[12,"ai_next",E,E,22,N],[3,R[249],E,E,N,N],[12,"sll_family",E,E,23,N],[12,"sll_protocol",E,E,23,N],[12,"sll_ifindex",E,E,23,N],[12,"sll_hatype",E,E,23,N],[12,"sll_pkttype",E,E,23,N],[12,"sll_halen",E,E,23,N],[12,"sll_addr",E,E,23,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,24,N],[12,"tm_min",E,E,24,N],[12,"tm_hour",E,E,24,N],[12,"tm_mday",E,E,24,N],[12,"tm_mon",E,E,24,N],[12,"tm_year",E,E,24,N],[12,"tm_wday",E,E,24,N],[12,"tm_yday",E,E,24,N],[12,"tm_isdst",E,E,24,N],[12,"tm_gmtoff",E,E,24,N],[12,"tm_zone",E,E,24,N],[3,R[250],E,E,N,N],[12,"sched_priority",E,E,25,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,26,N],[12,"dli_fbase",E,E,26,N],[12,"dli_sname",E,E,26,N],[12,"dli_saddr",E,E,26,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,27,N],[12,"thousands_sep",E,E,27,N],[12,"grouping",E,E,27,N],[12,"int_curr_symbol",E,E,27,N],[12,"currency_symbol",E,E,27,N],[12,"mon_decimal_point",E,E,27,N],[12,"mon_thousands_sep",E,E,27,N],[12,"mon_grouping",E,E,27,N],[12,"positive_sign",E,E,27,N],[12,"negative_sign",E,E,27,N],[12,"int_frac_digits",E,E,27,N],[12,"frac_digits",E,E,27,N],[12,"p_cs_precedes",E,E,27,N],[12,"p_sep_by_space",E,E,27,N],[12,"n_cs_precedes",E,E,27,N],[12,"n_sep_by_space",E,E,27,N],[12,"p_sign_posn",E,E,27,N],[12,"n_sign_posn",E,E,27,N],[12,"int_p_cs_precedes",E,E,27,N],[12,"int_p_sep_by_space",E,E,27,N],[12,"int_n_cs_precedes",E,E,27,N],[12,"int_n_sep_by_space",E,E,27,N],[12,"int_p_sign_posn",E,E,27,N],[12,"int_n_sign_posn",E,E,27,N],[3,R[310],E,E,N,N],[12,"sigev_value",E,E,28,N],[12,"sigev_signo",E,E,28,N],[12,"sigev_notify",E,E,28,N],[12,"sigev_notify_thread_id",E,E,28,N],[3,R[251],E,E,N,N],[12,"ipi_ifindex",E,E,29,N],[12,"ipi_spec_dst",E,E,29,N],[12,"ipi_addr",E,E,29,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,30,N],[12,"ifa_name",E,E,30,N],[12,"ifa_flags",E,E,30,N],[12,"ifa_addr",E,E,30,N],[12,"ifa_netmask",E,E,30,N],[12,"ifa_ifu",E,E,30,N],[12,"ifa_data",E,E,30,N],[3,R[252],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[216],E,E,31,N],[12,R[217],E,E,31,N],[12,"arp_dev",E,E,31,N],[3,R[253],E,E,N,N],[12,"arp_pa",E,E,32,N],[12,"arp_ha",E,E,32,N],[12,R[216],E,E,32,N],[12,R[217],E,E,32,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,33,N],[12,"ar_pro",E,E,33,N],[12,"ar_hln",E,E,33,N],[12,"ar_pln",E,E,33,N],[12,"ar_op",E,E,33,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,34,N],[12,"msg_len",E,E,34,N],[3,R[254],E,E,N,N],[12,"events",E,E,35,N],[12,"u64",E,E,35,N],[3,R[255],E,E,N,N],[12,"sun_family",E,E,36,N],[12,"sun_path",E,E,36,N],[3,R[256],E,E,N,N],[12,"ss_family",E,E,37,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,38,N],[12,"nodename",E,E,38,N],[12,"release",E,E,38,N],[12,"version",E,E,38,N],[12,"machine",E,E,38,N],[12,"domainname",E,E,38,N],[3,R[311],E,E,N,N],[12,"rlim_cur",E,E,39,N],[12,"rlim_max",E,E,39,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,40,N],[12,"gl_pathv",E,E,40,N],[12,"gl_offs",E,E,40,N],[12,"gl_flags",E,E,40,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,41,N],[12,"pw_passwd",E,E,41,N],[12,"pw_uid",E,E,41,N],[12,"pw_gid",E,E,41,N],[12,"pw_gecos",E,E,41,N],[12,"pw_dir",E,E,41,N],[12,"pw_shell",E,E,41,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,42,N],[12,"sp_pwdp",E,E,42,N],[12,"sp_lstchg",E,E,42,N],[12,"sp_min",E,E,42,N],[12,"sp_max",E,E,42,N],[12,"sp_warn",E,E,42,N],[12,"sp_inact",E,E,42,N],[12,"sp_expire",E,E,42,N],[12,"sp_flag",E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[257],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,"ssi_overrun",E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[12,"ssi_addr_lsb",E,E,44,N],[12,"ssi_syscall",E,E,44,N],[12,"ssi_call_addr",E,E,44,N],[12,"ssi_arch",E,E,44,N],[3,R[258],E,E,N,N],[12,R[218],E,E,45,N],[12,"it_value",E,E,45,N],[3,"fsid_t",E,E,N,N],[3,R[259],E,E,N,N],[12,"mr_ifindex",E,E,46,N],[12,"mr_type",E,E,46,N],[12,"mr_alen",E,E,46,N],[12,"mr_address",E,E,46,N],[3,R[240],E,E,N,N],[3,R[244],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,49,N],[12,"sem_op",E,E,49,N],[12,"sem_flg",E,E,49,N],[3,R[260],E,E,N,N],[12,"time",E,E,50,N],[12,"type_",E,E,50,N],[12,"code",E,E,50,N],[12,"value",E,E,50,N],[3,R[312],E,E,N,N],[12,"bustype",E,E,51,N],[12,"vendor",E,E,51,N],[12,"product",E,E,51,N],[12,"version",E,E,51,N],[3,R[261],E,E,N,N],[12,"value",E,E,52,N],[12,"minimum",E,E,52,N],[12,"maximum",E,E,52,N],[12,"fuzz",E,E,52,N],[12,"flat",E,E,52,N],[12,"resolution",E,E,52,N],[3,R[262],E,E,N,N],[12,"flags",E,E,53,N],[12,"len",E,E,53,N],[12,"index",E,E,53,N],[12,"keycode",E,E,53,N],[12,"scancode",E,E,53,N],[3,R[263],E,E,N,N],[12,"type_",E,E,54,N],[12,"codes_size",E,E,54,N],[12,"codes_ptr",E,E,54,N],[3,R[264],E,E,N,N],[12,"length",E,E,55,N],[12,"delay",E,E,55,N],[3,R[265],E,E,N,N],[12,"button",E,E,56,N],[12,"interval",E,E,56,N],[3,R[266],E,E,N,N],[12,"attack_length",E,E,57,N],[12,"attack_level",E,E,57,N],[12,"fade_length",E,E,57,N],[12,"fade_level",E,E,57,N],[3,R[267],E,E,N,N],[12,"level",E,E,58,N],[12,R[219],E,E,58,N],[3,R[268],E,E,N,N],[12,"start_level",E,E,59,N],[12,"end_level",E,E,59,N],[12,R[219],E,E,59,N],[3,R[269],E,E,N,N],[12,"right_saturation",E,E,60,N],[12,"left_saturation",E,E,60,N],[12,"right_coeff",E,E,60,N],[12,"left_coeff",E,E,60,N],[12,"deadband",E,E,60,N],[12,"center",E,E,60,N],[3,R[270],E,E,N,N],[12,"waveform",E,E,61,N],[12,"period",E,E,61,N],[12,"magnitude",E,E,61,N],[12,"offset",E,E,61,N],[12,"phase",E,E,61,N],[12,R[219],E,E,61,N],[12,"custom_len",E,E,61,N],[12,"custom_data",E,E,61,N],[3,R[271],E,E,N,N],[12,"strong_magnitude",E,E,62,N],[12,"weak_magnitude",E,E,62,N],[3,R[272],E,E,N,N],[12,"type_",E,E,63,N],[12,"id",E,E,63,N],[12,"direction",E,E,63,N],[12,"trigger",E,E,63,N],[12,"replay",E,E,63,N],[12,U,E,E,63,N],[3,R[273],E,E,N,N],[12,"dlpi_addr",E,E,64,N],[12,"dlpi_name",E,E,64,N],[12,"dlpi_phdr",E,E,64,N],[12,"dlpi_phnum",E,E,64,N],[12,"dlpi_adds",E,E,64,N],[12,"dlpi_subs",E,E,64,N],[12,"dlpi_tls_modid",E,E,64,N],[12,"dlpi_tls_data",E,E,64,N],[3,R[313],E,E,N,N],[12,"e_ident",E,E,65,N],[12,"e_type",E,E,65,N],[12,R[220],E,E,65,N],[12,R[221],E,E,65,N],[12,"e_entry",E,E,65,N],[12,"e_phoff",E,E,65,N],[12,"e_shoff",E,E,65,N],[12,"e_flags",E,E,65,N],[12,"e_ehsize",E,E,65,N],[12,R[222],E,E,65,N],[12,"e_phnum",E,E,65,N],[12,R[223],E,E,65,N],[12,"e_shnum",E,E,65,N],[12,R[224],E,E,65,N],[3,R[314],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[220],E,E,66,N],[12,R[221],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[222],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[223],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[224],E,E,66,N],[3,R[315],E,E,N,N],[12,"st_name",E,E,67,N],[12,"st_value",E,E,67,N],[12,"st_size",E,E,67,N],[12,"st_info",E,E,67,N],[12,"st_other",E,E,67,N],[12,"st_shndx",E,E,67,N],[3,R[316],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[3,R[317],E,E,N,N],[12,"p_type",E,E,69,N],[12,"p_offset",E,E,69,N],[12,"p_vaddr",E,E,69,N],[12,"p_paddr",E,E,69,N],[12,"p_filesz",E,E,69,N],[12,"p_memsz",E,E,69,N],[12,"p_flags",E,E,69,N],[12,"p_align",E,E,69,N],[3,R[318],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[319],E,E,N,N],[12,"sh_name",E,E,71,N],[12,"sh_type",E,E,71,N],[12,"sh_flags",E,E,71,N],[12,"sh_addr",E,E,71,N],[12,R[225],E,E,71,N],[12,"sh_size",E,E,71,N],[12,"sh_link",E,E,71,N],[12,"sh_info",E,E,71,N],[12,R[226],E,E,71,N],[12,R[227],E,E,71,N],[3,R[320],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[225],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[226],E,E,72,N],[12,R[227],E,E,72,N],[3,R[321],E,E,N,N],[12,"ch_type",E,E,73,N],[12,"ch_size",E,E,73,N],[12,R[228],E,E,73,N],[3,R[322],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_reserved",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[228],E,E,74,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,75,N],[12,"uid",E,E,75,N],[12,"gid",E,E,75,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,76,N],[12,"mnt_dir",E,E,76,N],[12,"mnt_type",E,E,76,N],[12,"mnt_opts",E,E,76,N],[12,"mnt_freq",E,E,76,N],[12,"mnt_passno",E,E,76,N],[3,R[274],E,E,N,N],[3,R[275],E,E,N,N],[3,R[276],E,E,N,N],[12,"cmd",E,E,77,N],[12,"version",E,E,77,N],[12,"reserved",E,E,77,N],[3,R[277],E,E,N,N],[12,"ipi6_addr",E,E,78,N],[12,"ipi6_ifindex",E,E,78,N],[3,R[278],E,E,N,N],[12,"req",E,E,79,N],[12,"ip",E,E,79,N],[12,"dev",E,E,79,N],[12,"stamp",E,E,79,N],[12,"updated",E,E,79,N],[12,"ha",E,E,79,N],[3,R[279],E,E,N,N],[12,"wd",E,E,80,N],[12,"mask",E,E,80,N],[12,"cookie",E,E,80,N],[12,"len",E,E,80,N],[3,R[280],E,E,N,N],[12,"nl_family",E,E,81,N],[12,"nl_pid",E,E,81,N],[12,"nl_groups",E,E,81,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,82,N],[12,"d_off",E,E,82,N],[12,"d_reclen",E,E,82,N],[12,"d_type",E,E,82,N],[12,"d_name",E,E,82,N],[3,R[323],E,E,N,N],[12,"d_ino",E,E,83,N],[12,"d_off",E,E,83,N],[12,"d_reclen",E,E,83,N],[12,"d_type",E,E,83,N],[12,"d_name",E,E,83,N],[3,R[281],E,E,N,N],[12,"salg_family",E,E,84,N],[12,"salg_type",E,E,84,N],[12,"salg_feat",E,E,84,N],[12,"salg_mask",E,E,84,N],[12,"salg_name",E,E,84,N],[3,R[282],E,E,N,N],[12,"ivlen",E,E,85,N],[12,"iv",E,E,85,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,86,N],[12,"mq_maxmsg",E,E,86,N],[12,"mq_msgsize",E,E,86,N],[12,"mq_curmsgs",E,E,86,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,87,N],[12,"stx_blksize",E,E,87,N],[12,"stx_attributes",E,E,87,N],[12,"stx_nlink",E,E,87,N],[12,"stx_uid",E,E,87,N],[12,"stx_gid",E,E,87,N],[12,"stx_mode",E,E,87,N],[12,"__statx_pad1",E,E,87,N],[12,"stx_ino",E,E,87,N],[12,"stx_size",E,E,87,N],[12,"stx_blocks",E,E,87,N],[12,"stx_attributes_mask",E,E,87,N],[12,"stx_atime",E,E,87,N],[12,"stx_btime",E,E,87,N],[12,"stx_ctime",E,E,87,N],[12,"stx_mtime",E,E,87,N],[12,"stx_rdev_major",E,E,87,N],[12,"stx_rdev_minor",E,E,87,N],[12,"stx_dev_major",E,E,87,N],[12,"stx_dev_minor",E,E,87,N],[12,"__statx_pad2",E,E,87,N],[3,R[283],E,E,N,N],[12,"tv_sec",E,E,88,N],[12,"tv_nsec",E,E,88,N],[12,"__statx_timestamp_pad1",E,E,88,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,89,N],[12,"aio_lio_opcode",E,E,89,N],[12,"aio_reqprio",E,E,89,N],[12,"aio_buf",E,E,89,N],[12,"aio_nbytes",E,E,89,N],[12,"aio_sigevent",E,E,89,N],[12,"aio_offset",E,E,89,N],[3,R[284],E,E,N,N],[12,"e_termination",E,E,90,N],[12,"e_exit",E,E,90,N],[3,R[285],E,E,N,N],[12,"tv_sec",E,E,91,N],[12,"tv_usec",E,E,91,N],[3,R[242],E,E,N,N],[12,"sa_sigaction",E,E,92,N],[12,"sa_mask",E,E,92,N],[12,"sa_flags",E,E,92,N],[12,"sa_restorer",E,E,92,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,93,N],[12,"ss_flags",E,E,93,N],[12,"ss_size",E,E,93,N],[3,R[286],E,E,N,N],[12,"si_signo",E,E,94,N],[12,"si_errno",E,E,94,N],[12,"si_code",E,E,94,N],[3,R[324],E,E,N,N],[12,"gl_pathc",E,E,95,N],[12,"gl_pathv",E,E,95,N],[12,"gl_offs",E,E,95,N],[12,"gl_flags",E,E,95,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,96,N],[12,"f_bsize",E,E,96,N],[12,R[236],E,E,96,N],[12,"f_bfree",E,E,96,N],[12,R[237],E,E,96,N],[12,"f_files",E,E,96,N],[12,"f_ffree",E,E,96,N],[12,"f_fsid",E,E,96,N],[12,R[234],E,E,96,N],[12,R[235],E,E,96,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,97,N],[12,"msg_namelen",E,E,97,N],[12,"msg_iov",E,E,97,N],[12,"msg_iovlen",E,E,97,N],[12,"msg_control",E,E,97,N],[12,"msg_controllen",E,E,97,N],[12,"msg_flags",E,E,97,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,98,N],[12,"cmsg_level",E,E,98,N],[12,"cmsg_type",E,E,98,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,99,N],[12,"c_oflag",E,E,99,N],[12,"c_cflag",E,E,99,N],[12,"c_lflag",E,E,99,N],[12,"c_line",E,E,99,N],[12,"c_cc",E,E,99,N],[12,"c_ispeed",E,E,99,N],[12,"c_ospeed",E,E,99,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,100,N],[12,"l_whence",E,E,100,N],[12,"l_start",E,E,100,N],[12,"l_len",E,E,100,N],[12,"l_pid",E,E,100,N],[3,R[287],E,E,N,N],[12,"arena",E,E,101,N],[12,"ordblks",E,E,101,N],[12,"smblks",E,E,101,N],[12,"hblks",E,E,101,N],[12,"hblkhd",E,E,101,N],[12,"usmblks",E,E,101,N],[12,"fsmblks",E,E,101,N],[12,"uordblks",E,E,101,N],[12,"fordblks",E,E,101,N],[12,"keepcost",E,E,101,N],[3,R[325],E,E,N,N],[12,"nlmsg_len",E,E,102,N],[12,"nlmsg_type",E,E,102,N],[12,"nlmsg_flags",E,E,102,N],[12,"nlmsg_seq",E,E,102,N],[12,"nlmsg_pid",E,E,102,N],[3,R[326],E,E,N,N],[12,"error",E,E,103,N],[12,"msg",E,E,103,N],[3,R[288],E,E,N,N],[12,"group",E,E,104,N],[3,R[289],E,E,N,N],[12,"nm_block_size",E,E,105,N],[12,"nm_block_nr",E,E,105,N],[12,"nm_frame_size",E,E,105,N],[12,"nm_frame_nr",E,E,105,N],[3,R[290],E,E,N,N],[12,"nm_status",E,E,106,N],[12,"nm_len",E,E,106,N],[12,"nm_group",E,E,106,N],[12,"nm_pid",E,E,106,N],[12,"nm_uid",E,E,106,N],[12,"nm_gid",E,E,106,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,107,N],[12,"nla_type",E,E,107,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,108,N],[12,"rt_dst",E,E,108,N],[12,"rt_gateway",E,E,108,N],[12,"rt_genmask",E,E,108,N],[12,"rt_flags",E,E,108,N],[12,"rt_pad2",E,E,108,N],[12,"rt_pad3",E,E,108,N],[12,"rt_tos",E,E,108,N],[12,"rt_class",E,E,108,N],[12,"rt_pad4",E,E,108,N],[12,"rt_metric",E,E,108,N],[12,"rt_dev",E,E,108,N],[12,"rt_mtu",E,E,108,N],[12,"rt_window",E,E,108,N],[12,"rt_irtt",E,E,108,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,109,N],[12,"ut_pid",E,E,109,N],[12,"ut_line",E,E,109,N],[12,"ut_id",E,E,109,N],[12,"ut_user",E,E,109,N],[12,"ut_host",E,E,109,N],[12,"ut_exit",E,E,109,N],[12,"ut_session",E,E,109,N],[12,"ut_tv",E,E,109,N],[12,"ut_addr_v6",E,E,109,N],[3,R[332],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,110,N],[12,"loads",E,E,110,N],[12,"totalram",E,E,110,N],[12,"freeram",E,E,110,N],[12,"sharedram",E,E,110,N],[12,"bufferram",E,E,110,N],[12,"totalswap",E,E,110,N],[12,"freeswap",E,E,110,N],[12,"procs",E,E,110,N],[12,"pad",E,E,110,N],[12,"totalhigh",E,E,110,N],[12,"freehigh",E,E,110,N],[12,"mem_unit",E,E,110,N],[12,"_f",E,E,110,N],[3,R[327],E,E,N,N],[12,"msg_perm",E,E,111,N],[12,"msg_stime",E,E,111,N],[12,"msg_rtime",E,E,111,N],[12,"msg_ctime",E,E,111,N],[12,"msg_qnum",E,E,111,N],[12,"msg_qbytes",E,E,111,N],[12,"msg_lspid",E,E,111,N],[12,"msg_lrpid",E,E,111,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,112,N],[12,"st_ino",E,E,112,N],[12,"st_nlink",E,E,112,N],[12,"st_mode",E,E,112,N],[12,"st_uid",E,E,112,N],[12,"st_gid",E,E,112,N],[12,"st_rdev",E,E,112,N],[12,"st_size",E,E,112,N],[12,R[229],E,E,112,N],[12,R[230],E,E,112,N],[12,"st_atime",E,E,112,N],[12,R[231],E,E,112,N],[12,"st_mtime",E,E,112,N],[12,R[232],E,E,112,N],[12,"st_ctime",E,E,112,N],[12,R[233],E,E,112,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,113,N],[12,"st_ino",E,E,113,N],[12,"st_nlink",E,E,113,N],[12,"st_mode",E,E,113,N],[12,"st_uid",E,E,113,N],[12,"st_gid",E,E,113,N],[12,"st_rdev",E,E,113,N],[12,"st_size",E,E,113,N],[12,R[229],E,E,113,N],[12,R[230],E,E,113,N],[12,"st_atime",E,E,113,N],[12,R[231],E,E,113,N],[12,"st_mtime",E,E,113,N],[12,R[232],E,E,113,N],[12,"st_ctime",E,E,113,N],[12,R[233],E,E,113,N],[3,R[291],E,E,N,N],[12,"f_type",E,E,114,N],[12,"f_bsize",E,E,114,N],[12,R[236],E,E,114,N],[12,"f_bfree",E,E,114,N],[12,R[237],E,E,114,N],[12,"f_files",E,E,114,N],[12,"f_ffree",E,E,114,N],[12,"f_fsid",E,E,114,N],[12,R[234],E,E,114,N],[12,R[235],E,E,114,N],[12,"f_flags",E,E,114,N],[12,"f_spare",E,E,114,N],[3,R[243],E,E,N,N],[12,"f_bsize",E,E,115,N],[12,R[235],E,E,115,N],[12,R[236],E,E,115,N],[12,"f_bfree",E,E,115,N],[12,R[237],E,E,115,N],[12,"f_files",E,E,115,N],[12,"f_ffree",E,E,115,N],[12,"f_favail",E,E,115,N],[12,"f_fsid",E,E,115,N],[12,"f_flag",E,E,115,N],[12,R[239],E,E,115,N],[3,R[292],E,E,N,N],[3,R[293],E,E,N,N],[12,"significand",E,E,116,N],[12,"exponent",E,E,116,N],[3,R[294],E,E,N,N],[12,"element",E,E,117,N],[3,R[295],E,E,N,N],[12,"cwd",E,E,118,N],[12,"swd",E,E,118,N],[12,"ftw",E,E,118,N],[12,"fop",E,E,118,N],[12,"rip",E,E,118,N],[12,"rdp",E,E,118,N],[12,"mxcsr",E,E,118,N],[12,R[238],E,E,118,N],[12,"_st",E,E,118,N],[12,"_xmm",E,E,118,N],[3,R[296],E,E,N,N],[12,"r15",E,E,119,N],[12,"r14",E,E,119,N],[12,"r13",E,E,119,N],[12,"r12",E,E,119,N],[12,"rbp",E,E,119,N],[12,"rbx",E,E,119,N],[12,"r11",E,E,119,N],[12,"r10",E,E,119,N],[12,"r9",E,E,119,N],[12,"r8",E,E,119,N],[12,"rax",E,E,119,N],[12,"rcx",E,E,119,N],[12,"rdx",E,E,119,N],[12,"rsi",E,E,119,N],[12,"rdi",E,E,119,N],[12,"orig_rax",E,E,119,N],[12,"rip",E,E,119,N],[12,"cs",E,E,119,N],[12,"eflags",E,E,119,N],[12,"rsp",E,E,119,N],[12,"ss",E,E,119,N],[12,"fs_base",E,E,119,N],[12,"gs_base",E,E,119,N],[12,"ds",E,E,119,N],[12,"es",E,E,119,N],[12,"fs",E,E,119,N],[12,"gs",E,E,119,N],[3,"user",E,E,N,N],[12,"regs",E,E,120,N],[12,"u_fpvalid",E,E,120,N],[12,"i387",E,E,120,N],[12,"u_tsize",E,E,120,N],[12,"u_dsize",E,E,120,N],[12,"u_ssize",E,E,120,N],[12,"start_code",E,E,120,N],[12,"start_stack",E,E,120,N],[12,"signal",E,E,120,N],[12,"u_ar0",E,E,120,N],[12,"u_fpstate",E,E,120,N],[12,"magic",E,E,120,N],[12,"u_comm",E,E,120,N],[12,"u_debugreg",E,E,120,N],[3,R[297],E,E,N,N],[12,"gregs",E,E,121,N],[12,"fpregs",E,E,121,N],[3,R[328],E,E,N,N],[12,"__key",E,E,122,N],[12,"uid",E,E,122,N],[12,"gid",E,E,122,N],[12,"cuid",E,E,122,N],[12,"cgid",E,E,122,N],[12,"mode",E,E,122,N],[12,"__seq",E,E,122,N],[3,R[329],E,E,N,N],[12,"shm_perm",E,E,123,N],[12,"shm_segsz",E,E,123,N],[12,"shm_atime",E,E,123,N],[12,"shm_dtime",E,E,123,N],[12,"shm_ctime",E,E,123,N],[12,"shm_cpid",E,E,123,N],[12,"shm_lpid",E,E,123,N],[12,"shm_nattch",E,E,123,N],[3,R[330],E,E,N,N],[12,"c_iflag",E,E,124,N],[12,"c_oflag",E,E,124,N],[12,"c_cflag",E,E,124,N],[12,"c_lflag",E,E,124,N],[12,"c_line",E,E,124,N],[12,"c_cc",E,E,124,N],[12,"c_ispeed",E,E,124,N],[12,"c_ospeed",E,E,124,N],[3,R[298],E,E,N,N],[12,"cwd",E,E,125,N],[12,"swd",E,E,125,N],[12,"ftw",E,E,125,N],[12,"fop",E,E,125,N],[12,"rip",E,E,125,N],[12,"rdp",E,E,125,N],[12,"mxcsr",E,E,125,N],[12,R[238],E,E,125,N],[12,"st_space",E,E,125,N],[12,"xmm_space",E,E,125,N],[3,R[299],E,E,N,N],[12,"uc_flags",E,E,126,N],[12,"uc_link",E,E,126,N],[12,"uc_stack",E,E,126,N],[12,"uc_mcontext",E,E,126,N],[12,"uc_sigmask",E,E,126,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,127,N],[12,R[235],E,E,127,N],[12,R[236],E,E,127,N],[12,"f_bfree",E,E,127,N],[12,R[237],E,E,127,N],[12,"f_files",E,E,127,N],[12,"f_ffree",E,E,127,N],[12,"f_favail",E,E,127,N],[12,"f_fsid",E,E,127,N],[12,"f_flag",E,E,127,N],[12,R[239],E,E,127,N],[3,"sem_t",E,E,N,N],[3,R[300],E,E,N,N],[3,R[301],E,E,N,N],[3,R[302],E,E,N,N],[3,R[303],E,E,N,N],[3,R[304],E,E,N,N],[3,R[305],E,E,N,N],[3,R[331],E,E,N,N],[12,"s6_addr",E,E,128,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[333],E,E,N,N],[4,R[334],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[240]]]]],[5,"CPU_SET",E,E,N,[[[R[240]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[240]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[240]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[240]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,R[241],E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[242],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[291],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[243],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[244],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[287],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,94,[[["self"]]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS",E,E,N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,"IN_CLOSE_WRITE",E,E,N,N],[17,"IN_CLOSE_NOWRITE",E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,"IN_MOVED_FROM",E,E,N,N],[17,"IN_MOVED_TO",E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,"IN_DELETE_SELF",E,E,N,N],[17,"IN_MOVE_SELF",E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,"IN_Q_OVERFLOW",E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,"IN_DONT_FOLLOW",E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,"IN_ALL_EVENTS",E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,"IN_NONBLOCK",E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,"from",E,E,129,[[[T]],[T]]],[11,R[8],E,E,129,[[[U]],[R[2]]]],[11,"into",E,E,129,[[],[U]]],[11,R[9],E,E,129,[[],[R[2]]]],[11,R[28],E,E,129,[[["self"]],[T]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[11],E,E,129,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,"into",E,E,7,[[],[U]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,"into",E,E,8,[[],[U]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,"into",E,E,9,[[],[U]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,"into",E,E,10,[[],[U]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,"into",E,E,11,[[],[U]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,"into",E,E,12,[[],[U]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,"into",E,E,13,[[],[U]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,"into",E,E,14,[[],[U]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,"into",E,E,15,[[],[U]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,"into",E,E,16,[[],[U]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,"into",E,E,17,[[],[U]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,"into",E,E,18,[[],[U]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,"into",E,E,19,[[],[U]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,"into",E,E,20,[[],[U]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,"into",E,E,21,[[],[U]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,"into",E,E,22,[[],[U]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,"into",E,E,23,[[],[U]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[8],E,E,130,[[[U]],[R[2]]]],[11,"into",E,E,130,[[],[U]]],[11,R[9],E,E,130,[[],[R[2]]]],[11,R[28],E,E,130,[[["self"]],[T]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[11],E,E,130,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,"into",E,E,24,[[],[U]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,"into",E,E,25,[[],[U]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,"into",E,E,26,[[],[U]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,"into",E,E,27,[[],[U]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,"into",E,E,28,[[],[U]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,"into",E,E,29,[[],[U]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,"into",E,E,30,[[],[U]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[8],E,E,131,[[[U]],[R[2]]]],[11,"into",E,E,131,[[],[U]]],[11,R[9],E,E,131,[[],[R[2]]]],[11,R[28],E,E,131,[[["self"]],[T]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[11],E,E,131,[[["self"]],[R[29]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,"into",E,E,31,[[],[U]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,"into",E,E,32,[[],[U]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,"into",E,E,33,[[],[U]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,"into",E,E,34,[[],[U]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,"into",E,E,35,[[],[U]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,"into",E,E,36,[[],[U]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,"into",E,E,37,[[],[U]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,"into",E,E,38,[[],[U]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,"into",E,E,39,[[],[U]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,"into",E,E,40,[[],[U]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,"into",E,E,41,[[],[U]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,"into",E,E,42,[[],[U]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,"into",E,E,43,[[],[U]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,"into",E,E,44,[[],[U]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,"into",E,E,45,[[],[U]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[8],E,E,132,[[[U]],[R[2]]]],[11,"into",E,E,132,[[],[U]]],[11,R[9],E,E,132,[[],[R[2]]]],[11,R[28],E,E,132,[[["self"]],[T]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[11],E,E,132,[[["self"]],[R[29]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,"into",E,E,46,[[],[U]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[8],E,E,133,[[[U]],[R[2]]]],[11,"into",E,E,133,[[],[U]]],[11,R[9],E,E,133,[[],[R[2]]]],[11,R[28],E,E,133,[[["self"]],[T]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[11],E,E,133,[[["self"]],[R[29]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,"into",E,E,47,[[],[U]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,"into",E,E,48,[[],[U]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,"into",E,E,49,[[],[U]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,"into",E,E,50,[[],[U]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,"into",E,E,51,[[],[U]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,"into",E,E,52,[[],[U]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,"into",E,E,53,[[],[U]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,"into",E,E,54,[[],[U]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,"into",E,E,55,[[],[U]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,"into",E,E,56,[[],[U]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,"into",E,E,57,[[],[U]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,"into",E,E,58,[[],[U]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,"into",E,E,59,[[],[U]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,"into",E,E,60,[[],[U]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,"into",E,E,61,[[],[U]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,"into",E,E,62,[[],[U]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,"into",E,E,63,[[],[U]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,"into",E,E,64,[[],[U]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,"into",E,E,65,[[],[U]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,"into",E,E,66,[[],[U]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,"into",E,E,67,[[],[U]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,"into",E,E,68,[[],[U]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,"into",E,E,69,[[],[U]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,"into",E,E,70,[[],[U]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,"into",E,E,71,[[],[U]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,"into",E,E,72,[[],[U]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,"into",E,E,73,[[],[U]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[8],E,E,74,[[[U]],[R[2]]]],[11,"into",E,E,74,[[],[U]]],[11,R[9],E,E,74,[[],[R[2]]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[8],E,E,75,[[[U]],[R[2]]]],[11,"into",E,E,75,[[],[U]]],[11,R[9],E,E,75,[[],[R[2]]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[29]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[8],E,E,76,[[[U]],[R[2]]]],[11,"into",E,E,76,[[],[U]]],[11,R[9],E,E,76,[[],[R[2]]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[29]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[8],E,E,134,[[[U]],[R[2]]]],[11,"into",E,E,134,[[],[U]]],[11,R[9],E,E,134,[[],[R[2]]]],[11,R[28],E,E,134,[[["self"]],[T]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[11],E,E,134,[[["self"]],[R[29]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[8],E,E,135,[[[U]],[R[2]]]],[11,"into",E,E,135,[[],[U]]],[11,R[9],E,E,135,[[],[R[2]]]],[11,R[28],E,E,135,[[["self"]],[T]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[11],E,E,135,[[["self"]],[R[29]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[8],E,E,77,[[[U]],[R[2]]]],[11,"into",E,E,77,[[],[U]]],[11,R[9],E,E,77,[[],[R[2]]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[29]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[8],E,E,78,[[[U]],[R[2]]]],[11,"into",E,E,78,[[],[U]]],[11,R[9],E,E,78,[[],[R[2]]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[29]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[8],E,E,79,[[[U]],[R[2]]]],[11,"into",E,E,79,[[],[U]]],[11,R[9],E,E,79,[[],[R[2]]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[29]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[8],E,E,80,[[[U]],[R[2]]]],[11,"into",E,E,80,[[],[U]]],[11,R[9],E,E,80,[[],[R[2]]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[29]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[8],E,E,81,[[[U]],[R[2]]]],[11,"into",E,E,81,[[],[U]]],[11,R[9],E,E,81,[[],[R[2]]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[29]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[8],E,E,82,[[[U]],[R[2]]]],[11,"into",E,E,82,[[],[U]]],[11,R[9],E,E,82,[[],[R[2]]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[29]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[8],E,E,83,[[[U]],[R[2]]]],[11,"into",E,E,83,[[],[U]]],[11,R[9],E,E,83,[[],[R[2]]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[29]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[8],E,E,84,[[[U]],[R[2]]]],[11,"into",E,E,84,[[],[U]]],[11,R[9],E,E,84,[[],[R[2]]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[29]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[8],E,E,85,[[[U]],[R[2]]]],[11,"into",E,E,85,[[],[U]]],[11,R[9],E,E,85,[[],[R[2]]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[29]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[8],E,E,86,[[[U]],[R[2]]]],[11,"into",E,E,86,[[],[U]]],[11,R[9],E,E,86,[[],[R[2]]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[29]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[8],E,E,87,[[[U]],[R[2]]]],[11,"into",E,E,87,[[],[U]]],[11,R[9],E,E,87,[[],[R[2]]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[29]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[8],E,E,88,[[[U]],[R[2]]]],[11,"into",E,E,88,[[],[U]]],[11,R[9],E,E,88,[[],[R[2]]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[29]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[8],E,E,89,[[[U]],[R[2]]]],[11,"into",E,E,89,[[],[U]]],[11,R[9],E,E,89,[[],[R[2]]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[29]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[8],E,E,90,[[[U]],[R[2]]]],[11,"into",E,E,90,[[],[U]]],[11,R[9],E,E,90,[[],[R[2]]]],[11,R[28],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[29]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[8],E,E,91,[[[U]],[R[2]]]],[11,"into",E,E,91,[[],[U]]],[11,R[9],E,E,91,[[],[R[2]]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[29]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[8],E,E,92,[[[U]],[R[2]]]],[11,"into",E,E,92,[[],[U]]],[11,R[9],E,E,92,[[],[R[2]]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[29]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[8],E,E,93,[[[U]],[R[2]]]],[11,"into",E,E,93,[[],[U]]],[11,R[9],E,E,93,[[],[R[2]]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[29]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[8],E,E,94,[[[U]],[R[2]]]],[11,"into",E,E,94,[[],[U]]],[11,R[9],E,E,94,[[],[R[2]]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[29]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[8],E,E,95,[[[U]],[R[2]]]],[11,"into",E,E,95,[[],[U]]],[11,R[9],E,E,95,[[],[R[2]]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[29]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[8],E,E,96,[[[U]],[R[2]]]],[11,"into",E,E,96,[[],[U]]],[11,R[9],E,E,96,[[],[R[2]]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[29]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[8],E,E,97,[[[U]],[R[2]]]],[11,"into",E,E,97,[[],[U]]],[11,R[9],E,E,97,[[],[R[2]]]],[11,R[28],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[29]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[8],E,E,98,[[[U]],[R[2]]]],[11,"into",E,E,98,[[],[U]]],[11,R[9],E,E,98,[[],[R[2]]]],[11,R[28],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[29]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[8],E,E,99,[[[U]],[R[2]]]],[11,"into",E,E,99,[[],[U]]],[11,R[9],E,E,99,[[],[R[2]]]],[11,R[28],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[29]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[8],E,E,100,[[[U]],[R[2]]]],[11,"into",E,E,100,[[],[U]]],[11,R[9],E,E,100,[[],[R[2]]]],[11,R[28],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[29]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[8],E,E,101,[[[U]],[R[2]]]],[11,"into",E,E,101,[[],[U]]],[11,R[9],E,E,101,[[],[R[2]]]],[11,R[28],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[29]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[8],E,E,102,[[[U]],[R[2]]]],[11,"into",E,E,102,[[],[U]]],[11,R[9],E,E,102,[[],[R[2]]]],[11,R[28],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[29]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[8],E,E,103,[[[U]],[R[2]]]],[11,"into",E,E,103,[[],[U]]],[11,R[9],E,E,103,[[],[R[2]]]],[11,R[28],E,E,103,[[["self"]],[T]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[29]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[8],E,E,104,[[[U]],[R[2]]]],[11,"into",E,E,104,[[],[U]]],[11,R[9],E,E,104,[[],[R[2]]]],[11,R[28],E,E,104,[[["self"]],[T]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[29]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[8],E,E,105,[[[U]],[R[2]]]],[11,"into",E,E,105,[[],[U]]],[11,R[9],E,E,105,[[],[R[2]]]],[11,R[28],E,E,105,[[["self"]],[T]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[11],E,E,105,[[["self"]],[R[29]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[8],E,E,106,[[[U]],[R[2]]]],[11,"into",E,E,106,[[],[U]]],[11,R[9],E,E,106,[[],[R[2]]]],[11,R[28],E,E,106,[[["self"]],[T]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[11],E,E,106,[[["self"]],[R[29]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[8],E,E,107,[[[U]],[R[2]]]],[11,"into",E,E,107,[[],[U]]],[11,R[9],E,E,107,[[],[R[2]]]],[11,R[28],E,E,107,[[["self"]],[T]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[11],E,E,107,[[["self"]],[R[29]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[8],E,E,108,[[[U]],[R[2]]]],[11,"into",E,E,108,[[],[U]]],[11,R[9],E,E,108,[[],[R[2]]]],[11,R[28],E,E,108,[[["self"]],[T]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[11],E,E,108,[[["self"]],[R[29]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[8],E,E,109,[[[U]],[R[2]]]],[11,"into",E,E,109,[[],[U]]],[11,R[9],E,E,109,[[],[R[2]]]],[11,R[28],E,E,109,[[["self"]],[T]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[11],E,E,109,[[["self"]],[R[29]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[8],E,E,136,[[[U]],[R[2]]]],[11,"into",E,E,136,[[],[U]]],[11,R[9],E,E,136,[[],[R[2]]]],[11,R[28],E,E,136,[[["self"]],[T]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[11],E,E,136,[[["self"]],[R[29]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[8],E,E,110,[[[U]],[R[2]]]],[11,"into",E,E,110,[[],[U]]],[11,R[9],E,E,110,[[],[R[2]]]],[11,R[28],E,E,110,[[["self"]],[T]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[11],E,E,110,[[["self"]],[R[29]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[8],E,E,111,[[[U]],[R[2]]]],[11,"into",E,E,111,[[],[U]]],[11,R[9],E,E,111,[[],[R[2]]]],[11,R[28],E,E,111,[[["self"]],[T]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[11],E,E,111,[[["self"]],[R[29]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[8],E,E,112,[[[U]],[R[2]]]],[11,"into",E,E,112,[[],[U]]],[11,R[9],E,E,112,[[],[R[2]]]],[11,R[28],E,E,112,[[["self"]],[T]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[11],E,E,112,[[["self"]],[R[29]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[8],E,E,113,[[[U]],[R[2]]]],[11,"into",E,E,113,[[],[U]]],[11,R[9],E,E,113,[[],[R[2]]]],[11,R[28],E,E,113,[[["self"]],[T]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[11],E,E,113,[[["self"]],[R[29]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[8],E,E,114,[[[U]],[R[2]]]],[11,"into",E,E,114,[[],[U]]],[11,R[9],E,E,114,[[],[R[2]]]],[11,R[28],E,E,114,[[["self"]],[T]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[11],E,E,114,[[["self"]],[R[29]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[8],E,E,115,[[[U]],[R[2]]]],[11,"into",E,E,115,[[],[U]]],[11,R[9],E,E,115,[[],[R[2]]]],[11,R[28],E,E,115,[[["self"]],[T]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[11],E,E,115,[[["self"]],[R[29]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[8],E,E,137,[[[U]],[R[2]]]],[11,"into",E,E,137,[[],[U]]],[11,R[9],E,E,137,[[],[R[2]]]],[11,R[28],E,E,137,[[["self"]],[T]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[11],E,E,137,[[["self"]],[R[29]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[8],E,E,116,[[[U]],[R[2]]]],[11,"into",E,E,116,[[],[U]]],[11,R[9],E,E,116,[[],[R[2]]]],[11,R[28],E,E,116,[[["self"]],[T]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[11],E,E,116,[[["self"]],[R[29]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[8],E,E,117,[[[U]],[R[2]]]],[11,"into",E,E,117,[[],[U]]],[11,R[9],E,E,117,[[],[R[2]]]],[11,R[28],E,E,117,[[["self"]],[T]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[11],E,E,117,[[["self"]],[R[29]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[8],E,E,118,[[[U]],[R[2]]]],[11,"into",E,E,118,[[],[U]]],[11,R[9],E,E,118,[[],[R[2]]]],[11,R[28],E,E,118,[[["self"]],[T]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[11],E,E,118,[[["self"]],[R[29]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[8],E,E,119,[[[U]],[R[2]]]],[11,"into",E,E,119,[[],[U]]],[11,R[9],E,E,119,[[],[R[2]]]],[11,R[28],E,E,119,[[["self"]],[T]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[11],E,E,119,[[["self"]],[R[29]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[8],E,E,120,[[[U]],[R[2]]]],[11,"into",E,E,120,[[],[U]]],[11,R[9],E,E,120,[[],[R[2]]]],[11,R[28],E,E,120,[[["self"]],[T]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[11],E,E,120,[[["self"]],[R[29]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[8],E,E,121,[[[U]],[R[2]]]],[11,"into",E,E,121,[[],[U]]],[11,R[9],E,E,121,[[],[R[2]]]],[11,R[28],E,E,121,[[["self"]],[T]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[11],E,E,121,[[["self"]],[R[29]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[8],E,E,122,[[[U]],[R[2]]]],[11,"into",E,E,122,[[],[U]]],[11,R[9],E,E,122,[[],[R[2]]]],[11,R[28],E,E,122,[[["self"]],[T]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[11],E,E,122,[[["self"]],[R[29]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[8],E,E,123,[[[U]],[R[2]]]],[11,"into",E,E,123,[[],[U]]],[11,R[9],E,E,123,[[],[R[2]]]],[11,R[28],E,E,123,[[["self"]],[T]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[11],E,E,123,[[["self"]],[R[29]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[8],E,E,124,[[[U]],[R[2]]]],[11,"into",E,E,124,[[],[U]]],[11,R[9],E,E,124,[[],[R[2]]]],[11,R[28],E,E,124,[[["self"]],[T]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[11],E,E,124,[[["self"]],[R[29]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[8],E,E,125,[[[U]],[R[2]]]],[11,"into",E,E,125,[[],[U]]],[11,R[9],E,E,125,[[],[R[2]]]],[11,R[28],E,E,125,[[["self"]],[T]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[11],E,E,125,[[["self"]],[R[29]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[8],E,E,126,[[[U]],[R[2]]]],[11,"into",E,E,126,[[],[U]]],[11,R[9],E,E,126,[[],[R[2]]]],[11,R[28],E,E,126,[[["self"]],[T]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[11],E,E,126,[[["self"]],[R[29]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[8],E,E,127,[[[U]],[R[2]]]],[11,"into",E,E,127,[[],[U]]],[11,R[9],E,E,127,[[],[R[2]]]],[11,R[28],E,E,127,[[["self"]],[T]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[11],E,E,127,[[["self"]],[R[29]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[8],E,E,138,[[[U]],[R[2]]]],[11,"into",E,E,138,[[],[U]]],[11,R[9],E,E,138,[[],[R[2]]]],[11,R[28],E,E,138,[[["self"]],[T]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[11],E,E,138,[[["self"]],[R[29]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[8],E,E,139,[[[U]],[R[2]]]],[11,"into",E,E,139,[[],[U]]],[11,R[9],E,E,139,[[],[R[2]]]],[11,R[28],E,E,139,[[["self"]],[T]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[11],E,E,139,[[["self"]],[R[29]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[8],E,E,140,[[[U]],[R[2]]]],[11,"into",E,E,140,[[],[U]]],[11,R[9],E,E,140,[[],[R[2]]]],[11,R[28],E,E,140,[[["self"]],[T]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[11],E,E,140,[[["self"]],[R[29]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[8],E,E,141,[[[U]],[R[2]]]],[11,"into",E,E,141,[[],[U]]],[11,R[9],E,E,141,[[],[R[2]]]],[11,R[28],E,E,141,[[["self"]],[T]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[11],E,E,141,[[["self"]],[R[29]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[8],E,E,142,[[[U]],[R[2]]]],[11,"into",E,E,142,[[],[U]]],[11,R[9],E,E,142,[[],[R[2]]]],[11,R[28],E,E,142,[[["self"]],[T]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[11],E,E,142,[[["self"]],[R[29]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[8],E,E,143,[[[U]],[R[2]]]],[11,"into",E,E,143,[[],[U]]],[11,R[9],E,E,143,[[],[R[2]]]],[11,R[28],E,E,143,[[["self"]],[T]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[11],E,E,143,[[["self"]],[R[29]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[8],E,E,144,[[[U]],[R[2]]]],[11,"into",E,E,144,[[],[U]]],[11,R[9],E,E,144,[[],[R[2]]]],[11,R[28],E,E,144,[[["self"]],[T]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[11],E,E,144,[[["self"]],[R[29]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[8],E,E,128,[[[U]],[R[2]]]],[11,"into",E,E,128,[[],[U]]],[11,R[9],E,E,128,[[],[R[2]]]],[11,R[28],E,E,128,[[["self"]],[T]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[11],E,E,128,[[["self"]],[R[29]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[8],E,E,145,[[[U]],[R[2]]]],[11,"into",E,E,145,[[],[U]]],[11,R[9],E,E,145,[[],[R[2]]]],[11,R[28],E,E,145,[[["self"]],[T]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[11],E,E,145,[[["self"]],[R[29]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[8],E,E,146,[[[U]],[R[2]]]],[11,"into",E,E,146,[[],[U]]],[11,R[9],E,E,146,[[],[R[2]]]],[11,R[28],E,E,146,[[["self"]],[T]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[11],E,E,146,[[["self"]],[R[29]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[8],E,E,147,[[[U]],[R[2]]]],[11,"into",E,E,147,[[],[U]]],[11,R[9],E,E,147,[[],[R[2]]]],[11,R[28],E,E,147,[[["self"]],[T]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[11],E,E,147,[[["self"]],[R[29]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[8],E,E,148,[[[U]],[R[2]]]],[11,"into",E,E,148,[[],[U]]],[11,R[9],E,E,148,[[],[R[2]]]],[11,R[28],E,E,148,[[["self"]],[T]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[11],E,E,148,[[["self"]],[R[29]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[8],E,E,149,[[[U]],[R[2]]]],[11,"into",E,E,149,[[],[U]]],[11,R[9],E,E,149,[[],[R[2]]]],[11,R[28],E,E,149,[[["self"]],[T]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[11],E,E,149,[[["self"]],[R[29]]]],[11,"fmt",E,E,129,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"clone",E,E,145,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[306]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[245]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[246]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[307]]]],[11,"clone",E,E,146,[[["self"]],["file"]]],[11,"clone",E,E,147,[[["self"]],["fpos_t"]]],[11,"clone",E,E,148,[[["self"]],[R[333]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[308]]]],[11,"clone",E,E,20,[[["self"]],[R[247]]]],[11,"clone",E,E,21,[[["self"]],[R[248]]]],[11,"clone",E,E,22,[[["self"]],[R[309]]]],[11,"clone",E,E,23,[[["self"]],[R[249]]]],[11,"clone",E,E,130,[[["self"]],["fd_set"]]],[11,"clone",E,E,24,[[["self"]],["tm"]]],[11,"clone",E,E,25,[[["self"]],[R[250]]]],[11,"clone",E,E,26,[[["self"]],["dl_info"]]],[11,"clone",E,E,27,[[["self"]],["lconv"]]],[11,"clone",E,E,28,[[["self"]],[R[310]]]],[11,"clone",E,E,29,[[["self"]],[R[251]]]],[11,"clone",E,E,30,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,131,[[["self"]],[R[252]]]],[11,"clone",E,E,31,[[["self"]],["arpreq"]]],[11,"clone",E,E,32,[[["self"]],[R[253]]]],[11,"clone",E,E,33,[[["self"]],["arphdr"]]],[11,"clone",E,E,34,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,35,[[["self"]],[R[254]]]],[11,"clone",E,E,36,[[["self"]],[R[255]]]],[11,"clone",E,E,37,[[["self"]],[R[256]]]],[11,"clone",E,E,38,[[["self"]],["utsname"]]],[11,"clone",E,E,149,[[["self"]],[R[334]]]],[11,"clone",E,E,39,[[["self"]],[R[311]]]],[11,"clone",E,E,40,[[["self"]],["glob_t"]]],[11,"clone",E,E,41,[[["self"]],["passwd"]]],[11,"clone",E,E,42,[[["self"]],["spwd"]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[257]]]],[11,"clone",E,E,45,[[["self"]],[R[258]]]],[11,"clone",E,E,132,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],[R[259]]]],[11,"clone",E,E,133,[[["self"]],[R[240]]]],[11,"clone",E,E,47,[[["self"]],[R[244]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["sembuf"]]],[11,"clone",E,E,50,[[["self"]],[R[260]]]],[11,"clone",E,E,51,[[["self"]],[R[312]]]],[11,"clone",E,E,52,[[["self"]],[R[261]]]],[11,"clone",E,E,53,[[["self"]],[R[262]]]],[11,"clone",E,E,54,[[["self"]],[R[263]]]],[11,"clone",E,E,55,[[["self"]],[R[264]]]],[11,"clone",E,E,56,[[["self"]],[R[265]]]],[11,"clone",E,E,57,[[["self"]],[R[266]]]],[11,"clone",E,E,58,[[["self"]],[R[267]]]],[11,"clone",E,E,59,[[["self"]],[R[268]]]],[11,"clone",E,E,60,[[["self"]],[R[269]]]],[11,"clone",E,E,61,[[["self"]],[R[270]]]],[11,"clone",E,E,62,[[["self"]],[R[271]]]],[11,"clone",E,E,63,[[["self"]],[R[272]]]],[11,"clone",E,E,64,[[["self"]],[R[273]]]],[11,"clone",E,E,65,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,66,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,68,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,70,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,72,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,74,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,75,[[["self"]],["ucred"]]],[11,"clone",E,E,76,[[["self"]],["mntent"]]],[11,"clone",E,E,134,[[["self"]],[R[274]]]],[11,"clone",E,E,135,[[["self"]],[R[275]]]],[11,"clone",E,E,77,[[["self"]],[R[276]]]],[11,"clone",E,E,78,[[["self"]],[R[277]]]],[11,"clone",E,E,79,[[["self"]],[R[278]]]],[11,"clone",E,E,80,[[["self"]],[R[279]]]],[11,"clone",E,E,81,[[["self"]],[R[280]]]],[11,"clone",E,E,82,[[["self"]],["dirent"]]],[11,"clone",E,E,83,[[["self"]],[R[323]]]],[11,"clone",E,E,84,[[["self"]],[R[281]]]],[11,"clone",E,E,85,[[["self"]],[R[282]]]],[11,"clone",E,E,86,[[["self"]],["mq_attr"]]],[11,"clone",E,E,87,[[["self"]],["statx"]]],[11,"clone",E,E,88,[[["self"]],[R[283]]]],[11,"clone",E,E,89,[[["self"]],["aiocb"]]],[11,"clone",E,E,90,[[["self"]],[R[284]]]],[11,"clone",E,E,91,[[["self"]],[R[285]]]],[11,"clone",E,E,92,[[["self"]],[R[242]]]],[11,"clone",E,E,93,[[["self"]],["stack_t"]]],[11,"clone",E,E,94,[[["self"]],[R[286]]]],[11,"clone",E,E,95,[[["self"]],[R[324]]]],[11,"clone",E,E,96,[[["self"]],["statfs"]]],[11,"clone",E,E,97,[[["self"]],["msghdr"]]],[11,"clone",E,E,98,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,99,[[["self"]],["termios"]]],[11,"clone",E,E,100,[[["self"]],["flock"]]],[11,"clone",E,E,101,[[["self"]],[R[287]]]],[11,"clone",E,E,102,[[["self"]],[R[325]]]],[11,"clone",E,E,103,[[["self"]],[R[326]]]],[11,"clone",E,E,104,[[["self"]],[R[288]]]],[11,"clone",E,E,105,[[["self"]],[R[289]]]],[11,"clone",E,E,106,[[["self"]],[R[290]]]],[11,"clone",E,E,107,[[["self"]],["nlattr"]]],[11,"clone",E,E,108,[[["self"]],["rtentry"]]],[11,"clone",E,E,109,[[["self"]],["utmpx"]]],[11,"clone",E,E,136,[[["self"]],[R[332]]]],[11,"clone",E,E,110,[[["self"]],["sysinfo"]]],[11,"clone",E,E,111,[[["self"]],[R[327]]]],[11,"clone",E,E,112,[[["self"]],["stat"]]],[11,"clone",E,E,113,[[["self"]],["stat64"]]],[11,"clone",E,E,114,[[["self"]],[R[291]]]],[11,"clone",E,E,115,[[["self"]],[R[243]]]],[11,"clone",E,E,137,[[["self"]],[R[292]]]],[11,"clone",E,E,116,[[["self"]],[R[293]]]],[11,"clone",E,E,117,[[["self"]],[R[294]]]],[11,"clone",E,E,118,[[["self"]],[R[295]]]],[11,"clone",E,E,119,[[["self"]],[R[296]]]],[11,"clone",E,E,120,[[["self"]],["user"]]],[11,"clone",E,E,121,[[["self"]],[R[297]]]],[11,"clone",E,E,122,[[["self"]],[R[328]]]],[11,"clone",E,E,123,[[["self"]],[R[329]]]],[11,"clone",E,E,124,[[["self"]],[R[330]]]],[11,"clone",E,E,125,[[["self"]],[R[298]]]],[11,"clone",E,E,126,[[["self"]],[R[299]]]],[11,"clone",E,E,127,[[["self"]],["statvfs"]]],[11,"clone",E,E,138,[[["self"]],["sem_t"]]],[11,"clone",E,E,139,[[["self"]],[R[300]]]],[11,"clone",E,E,140,[[["self"]],[R[301]]]],[11,"clone",E,E,141,[[["self"]],[R[302]]]],[11,"clone",E,E,142,[[["self"]],[R[303]]]],[11,"clone",E,E,143,[[["self"]],[R[304]]]],[11,"clone",E,E,144,[[["self"]],[R[305]]]],[11,"clone",E,E,128,[[["self"]],[R[331]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[306]],[3,"rlimit"],[3,"rusage"],[3,R[245]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[246]],[3,"tms"],[3,"servent"],[3,R[307]],[3,"in_addr"],[3,"ip_mreq"],[3,R[308]],[3,R[247]],[3,R[248]],[3,R[309]],[3,R[249]],[3,"tm"],[3,R[250]],[3,"Dl_info"],[3,"lconv"],[3,R[310]],[3,R[251]],[3,"ifaddrs"],[3,"arpreq"],[3,R[253]],[3,"arphdr"],[3,"mmsghdr"],[3,R[254]],[3,R[255]],[3,R[256]],[3,"utsname"],[3,R[311]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[257]],[3,R[258]],[3,R[259]],[3,R[244]],[3,"msginfo"],[3,"sembuf"],[3,R[260]],[3,R[312]],[3,R[261]],[3,R[262]],[3,R[263]],[3,R[264]],[3,R[265]],[3,R[266]],[3,R[267]],[3,R[268]],[3,R[269]],[3,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[3,R[313]],[3,R[314]],[3,R[315]],[3,R[316]],[3,R[317]],[3,R[318]],[3,R[319]],[3,R[320]],[3,R[321]],[3,R[322]],[3,"ucred"],[3,"mntent"],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[280]],[3,"dirent"],[3,R[323]],[3,R[281]],[3,R[282]],[3,"mq_attr"],[3,"statx"],[3,R[283]],[3,"aiocb"],[3,R[284]],[3,R[285]],[3,R[242]],[3,"stack_t"],[3,R[286]],[3,R[324]],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,R[287]],[3,R[325]],[3,R[326]],[3,R[288]],[3,R[289]],[3,R[290]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[327]],[3,"stat"],[3,"stat64"],[3,R[291]],[3,R[243]],[3,R[293]],[3,R[294]],[3,R[295]],[3,R[296]],[3,"user"],[3,R[297]],[3,R[328]],[3,R[329]],[3,R[330]],[3,R[298]],[3,R[299]],[3,"statvfs"],[3,R[331]],[4,"c_void"],[3,"fd_set"],[3,R[252]],[3,"fsid_t"],[3,R[240]],[3,R[274]],[3,R[275]],[3,R[332]],[3,R[292]],[3,"sem_t"],[3,R[300]],[3,R[301]],[3,R[302]],[3,R[303]],[3,R[304]],[3,R[305]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[333]],[4,R[334]]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","i":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is…",N,N],[3,R[36],E,"Decoder for a LZW compressed stream using an “early…",N,N],[3,"Encoder",E,"LZW encoder using the algorithm of GIF files.",N,N],[3,R[37],E,"Reads bits from a byte stream, LSB first.",N,N],[3,R[39],E,"Writes bits to a byte stream, LSB first.",N,N],[3,R[38],E,"Reads bits from a byte stream, MSB first.",N,N],[3,R[40],E,"Writes bits to a byte stream, MSB first.",N,N],[4,"Bits",E,"Containes either the consumed bytes and reconstructed bits…",N,N],[13,"Some",E,"Consumed bytes, reconstructed bits",0,N],[13,"None",E,"Consumed bytes",0,N],[5,"encode",E,"Convenience function that reads and compresses all bytes…",N,[[["w"],["u8"],["r"]],[R[2]]]],[11,"new",E,R[30],1,[[["u8"],["r"]],["decoder"]]],[11,R[31],E,R[32],1,[[["self"]],[R[2]]]],[11,"new",E,R[30],2,[[["u8"],["r"]],["decoderearlychange"]]],[11,R[31],E,R[32],2,[[["self"]],[R[2]]]],[11,"new",E,"Creates a new LZW encoder.",3,[[["w"],["u8"]],[["encoder"],[R[2],["encoder"]]]]],[11,"encode_bytes",E,"Compresses `bytes` and writes the result into the writer.",3,[[["self"]],[R[2]]]],[11,"new",E,R[33],4,[[],["lsbreader"]]],[11,"new",E,R[33],5,[[],["msbreader"]]],[11,"new",E,R[33],6,[[["w"]],["lsbwriter"]]],[11,"new",E,R[33],7,[[["w"]],["msbwriter"]]],[8,R[41],E,"A bit reader.",N,N],[10,R[34],E,"Returns the next `n` bits.",8,[[["self"],["u8"]],["bits"]]],[8,R[42],E,"A bit writer.",N,N],[10,R[35],E,"Writes the next `n` bits.",9,[[["self"],["u16"],["u8"]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[34],E,E,4,[[["self"],["u8"]],["bits"]]],[11,R[34],E,E,5,[[["self"],["u8"]],["bits"]]],[11,R[35],E,E,6,[[["self"],["u16"],["u8"]],[R[2]]]],[11,R[35],E,E,7,[[["self"],["u16"],["u8"]],[R[2]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"write",E,E,6,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,6,[[["self"]],[R[2]]]],[11,"write",E,E,7,[[["self"]],[[R[2],["usize"]],["usize"]]]],[11,"flush",E,E,7,[[["self"]],[R[2]]]]],"p":[[4,"Bits"],[3,"Decoder"],[3,R[36]],[3,"Encoder"],[3,R[37]],[3,R[38]],[3,R[39]],[3,R[40]],[8,R[41]],[8,R[42]]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,R[3],R[1],"A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],[R[1]]]],[11,R[25],E,"Extract the inner value.",0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,R[3]]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_derive"]={"doc":"Procedural macros to derive numeric traits in Rust.","i":[[24,R[542],"num_derive","Derives [`num_traits::FromPrimitive`][from] for simple…",N,N],[24,R[541],E,"Derives [`num_traits::ToPrimitive`][to] for simple enums…",N,N],[24,"NumOps",E,"Derives [`num_traits::NumOps`][num_ops] for newtypes. The…",N,N],[24,"NumCast",E,"Derives [`num_traits::NumCast`][num_cast] for newtypes.…",N,N],[24,"Zero",E,"Derives [`num_traits::Zero`][zero] for newtypes. The inner…",N,N],[24,"One",E,"Derives [`num_traits::One`][one] for newtypes. The inner…",N,N],[24,"Num",E,"Derives [`num_traits::Num`][num] for newtypes. The inner…",N,N],[24,"Float",E,"Derives [`num_traits::Float`][float] for newtypes. The…",N,N]],"p":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[639],"num_integer","Greatest common divisor and Bézout coefficients",N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[640],E,"An iterator over binomial coefficients.",N,N],[5,"cbrt",E,R[634],N,[[["roots"]],["roots"]]],[5,"nth_root",E,R[632],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[633],N,[[["roots"]],["roots"]]],[5,"div_rem",E,"Simultaneous integer division and modulus",N,[[[R[631]]]]],[5,R[635],E,"Floored integer division",N,[[[R[631]]],[R[631]]]],[5,R[636],E,"Floored integer modulus",N,[[[R[631]]],[R[631]]]],[5,R[637],E,"Simultaneous floored integer division and modulus",N,[[[R[631]]]]],[5,"div_ceil",E,"Ceiled integer division",N,[[[R[631]]],[R[631]]]],[5,"gcd",E,"Calculates the Greatest Common Divisor (GCD) of the number…",N,[[[R[631]]],[R[631]]]],[5,"lcm",E,"Calculates the Lowest Common Multiple (LCM) of the number…",N,[[[R[631]]],[R[631]]]],[5,"gcd_lcm",E,"Calculates the Greatest Common Divisor (GCD) and Lowest…",N,[[[R[631]]]]],[5,"binomial",E,"Calculate the binomial coefficient.",N,[[["clone"],[R[631]]],[["clone"],[R[631]]]]],[5,"multinomial",E,"Calculate the multinomial coefficient.",N,[[],[["clone"],[R[631]]]]],[8,"Roots",E,"Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root",E,R[632],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[633],1,[[["self"]],["self"]]],[11,"cbrt",E,R[634],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[635],E,"Floored integer division.",2,[[["self"]],["self"]]],[10,R[636],E,"Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil",E,"Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd",E,"Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm",E,"Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm",E,"Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd",E,"Greatest common divisor and Bézout coefficients.",2,[[["self"]],[R[638]]]],[11,"extended_gcd_lcm",E,"Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides",E,"Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of",E,"Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even",E,"Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd",E,"Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem",E,"Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,R[637],E,"Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of",E,"Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of",E,"Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new",E,"For a given n, iterate over all binomial coefficients…",3,[[[T]],["iterbinomial"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[22],E,E,3,[[],["i"]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"eq",E,E,0,[[["self"],[R[638]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[638]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"next",E,E,3,[[["self"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],[R[638]]]],[11,"sqrt",E,R[633],1,[[["self"]],["self"]]],[11,"cbrt",E,R[634],1,[[["self"]],["self"]]]],"p":[[3,R[639]],[8,"Roots"],[8,"Integer"],[3,R[640]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,R[1042],E,"An iterator over the range [start, stop]",N,N],[3,"RangeStep",E,"An iterator over the range [start, stop) by `step`. It…",N,N],[3,R[1043],E,"An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range",E,"Returns an iterator over the given range [start, stop)…",N,[[["a"]],["range"]]],[5,R[1614],E,"Return an iterator over the range [start, stop]",N,[[["a"]],[R[1040]]]],[5,"range_step",E,"Return an iterator over the range [start, stop) by `step`.…",N,[[["a"]],["rangestep"]]],[5,"range_step_inclusive",E,"Return an iterator over the range [start, stop] by `step`.…",N,[[["a"]],[R[1041]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[22],E,E,0,[[],["i"]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[22],E,E,1,[[],["i"]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[22],E,E,2,[[],["i"]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[22],E,E,3,[[],["i"]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[154],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[24]]]],[11,R[154],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[24]]]],[11,"next",E,E,3,[[["self"]],[R[24]]]],[11,R[155],E,E,0,[[["self"]],[R[24]]]],[11,R[155],E,E,1,[[["self"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[1040]]]],[11,"clone",E,E,2,[[["self"]],["rangestep"]]],[11,"clone",E,E,3,[[["self"]],[R[1041]]]]],"p":[[3,"Range"],[3,R[1042]],[3,"RangeStep"],[3,R[1043]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",N,N],[3,R[1051],E,E,N,N],[6,"Rational",E,"Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32",E,"Alias for a `Ratio` of 32-bit-sized integers.",N,N],[6,"Rational64",E,"Alias for a `Ratio` of 64-bit-sized integers.",N,N],[11,"new",E,"Creates a new `Ratio`. Fails if `denom` is zero.",0,[[[T]],["ratio"]]],[11,"from_integer",E,"Creates a `Ratio` representing the integer `t`.",0,[[[T]],["ratio"]]],[11,"new_raw",E,"Creates a `Ratio` without checking for `denom == 0` or…",0,[[[T]],["ratio"]]],[11,"to_integer",E,"Converts to an integer, rounding towards zero.",0,[[["self"]],[T]]],[11,"numer",E,"Gets an immutable reference to the numerator.",0,[[["self"]],[T]]],[11,"denom",E,"Gets an immutable reference to the denominator.",0,[[["self"]],[T]]],[11,"is_integer",E,"Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced",E,"Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip",E,"Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor",E,"Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil",E,"Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round",E,"Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc",E,"Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract",E,"Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow",E,"Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"approximate_float",E,E,0,[[["floatcore"],["numcast"]],[["ratio"],[R[24],["ratio"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[82],E,E,1,[[["self"]],[R[81]]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1044]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1044]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[23]]]],[11,R[153],E,E,0,[[["self"]],[[R[23]],[R[24],[R[23]]]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[656],E,E,0,[[["self"],["ratio"]]]],[11,R[656],E,E,0,[[["self"],[T]]]],[11,R[656],E,E,0,[[["self"],["ratio"]]]],[11,R[656],E,E,0,[[["self"],[T]]]],[11,R[657],E,E,0,[[["self"],["ratio"]]]],[11,R[657],E,E,0,[[["self"],[T]]]],[11,R[657],E,E,0,[[["self"],["ratio"]]]],[11,R[657],E,E,0,[[["self"],[T]]]],[11,R[658],E,E,0,[[["self"],["ratio"]]]],[11,R[658],E,E,0,[[["self"],[T]]]],[11,R[658],E,E,0,[[["self"],["ratio"]]]],[11,R[658],E,E,0,[[["self"],[T]]]],[11,R[659],E,E,0,[[["self"],["ratio"]]]],[11,R[659],E,E,0,[[["self"],[T]]]],[11,R[659],E,E,0,[[["self"],["ratio"]]]],[11,R[659],E,E,0,[[["self"],[T]]]],[11,R[660],E,E,0,[[["self"],["ratio"]]]],[11,R[660],E,E,0,[[["self"],[T]]]],[11,R[660],E,E,0,[[["self"],["ratio"]]]],[11,R[660],E,E,0,[[["self"],[T]]]],[11,"fmt",E,"Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,R[670],E,"Parses `numer/denom` or just `numer`.",0,[[["str"]],[[R[2],["ratio",R[1044]]],["ratio"],[R[1044]]]]],[11,"into",E,E,0,[[]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[1044]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,"set_zero",E,E,0,[[["self"]]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,0,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[665],E,E,0,[[["self"]],["bool"]]],[11,R[666],E,E,0,[[["self"]],["bool"]]],[11,R[664],E,"Parses `numer/denom` where the numbers are in base `radix`.",0,[[["u32"],["str"]],[[R[2],["ratio",R[1044]]],["ratio"],[R[1044]]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,R[1047],E,E,0,[[["i64"]],[R[24]]]],[11,R[1045],E,E,0,[[["i128"]],[R[24]]]],[11,R[1048],E,E,0,[[["u64"]],[R[24]]]],[11,R[1046],E,E,0,[[["u128"]],[R[24]]]],[11,R[1049],E,E,0,[[["f32"]],[R[24]]]],[11,R[1050],E,E,0,[[["f64"]],[R[24]]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,R[1053],E,E,0,[[["self"],["ratio"]],[["ratio"],[R[24],["ratio"]]]]],[11,R[582],E,E,0,[[["self"],["ratio"]],[["ratio"],[R[24],["ratio"]]]]],[11,R[1052],E,E,0,[[["self"],["ratio"]],[["ratio"],[R[24],["ratio"]]]]],[11,R[581],E,E,0,[[["self"],["ratio"]],[["ratio"],[R[24],["ratio"]]]]],[11,"inv",E,E,0,[[],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]]],"p":[[3,"Ratio"],[3,R[1051]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[539],R[467],E,N,N],[12,"kind",E,E,0,N],[4,R[540],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,"A value bounded by a minimum and a maximum",N,[[[R[466]]],[R[466]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,R[468],E,"returns the smallest finite number this type can represent",2,[[],["self"]]],[10,R[469],E,"returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast",R[467],E,N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["numcast"]],[[R[24]],["numcast"]]]],[8,R[541],E,"A generic trait for converting a value to a number.",N,N],[11,"to_isize",E,"Converts the value of `self` to an `isize`.",3,[[["self"]],[["isize"],[R[24],["isize"]]]]],[11,"to_i8",E,"Converts the value of `self` to an `i8`.",3,[[["self"]],[["i8"],[R[24],["i8"]]]]],[11,"to_i16",E,"Converts the value of `self` to an `i16`.",3,[[["self"]],[["i16"],[R[24],["i16"]]]]],[11,"to_i32",E,"Converts the value of `self` to an `i32`.",3,[[["self"]],[[R[24],["i32"]],["i32"]]]],[10,"to_i64",E,"Converts the value of `self` to an `i64`.",3,[[["self"]],[["i64"],[R[24],["i64"]]]]],[11,"to_i128",E,"Converts the value of `self` to an `i128`.",3,[[["self"]],[[R[24],["i128"]],["i128"]]]],[11,"to_usize",E,"Converts the value of `self` to a `usize`.",3,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"to_u8",E,"Converts the value of `self` to an `u8`.",3,[[["self"]],[[R[24],["u8"]],["u8"]]]],[11,"to_u16",E,"Converts the value of `self` to an `u16`.",3,[[["self"]],[["u16"],[R[24],["u16"]]]]],[11,"to_u32",E,"Converts the value of `self` to an `u32`.",3,[[["self"]],[[R[24],["u32"]],["u32"]]]],[10,"to_u64",E,"Converts the value of `self` to an `u64`.",3,[[["self"]],[[R[24],["u64"]],["u64"]]]],[11,"to_u128",E,"Converts the value of `self` to an `u128`.",3,[[["self"]],[[R[24],["u128"]],["u128"]]]],[11,"to_f32",E,"Converts the value of `self` to an `f32`.",3,[[["self"]],[[R[24],["f32"]],["f32"]]]],[11,"to_f64",E,"Converts the value of `self` to an `f64`.",3,[[["self"]],[[R[24],["f64"]],["f64"]]]],[8,R[542],E,"A generic trait for converting a number to a value.",N,N],[11,R[662],E,"Convert an `isize` to return an optional value of this…",4,[[["isize"]],[R[24]]]],[11,"from_i8",E,"Convert an `i8` to return an optional value of this type.…",4,[[["i8"]],[R[24]]]],[11,"from_i16",E,"Convert an `i16` to return an optional value of this type.…",4,[[["i16"]],[R[24]]]],[11,"from_i32",E,"Convert an `i32` to return an optional value of this type.…",4,[[["i32"]],[R[24]]]],[10,R[1047],E,"Convert an `i64` to return an optional value of this type.…",4,[[["i64"]],[R[24]]]],[11,R[1045],E,"Convert an `i128` to return an optional value of this…",4,[[["i128"]],[R[24]]]],[11,R[571],E,"Convert a `usize` to return an optional value of this…",4,[[["usize"]],[R[24]]]],[11,"from_u8",E,"Convert an `u8` to return an optional value of this type.…",4,[[["u8"]],[R[24]]]],[11,"from_u16",E,"Convert an `u16` to return an optional value of this type.…",4,[[["u16"]],[R[24]]]],[11,"from_u32",E,"Convert an `u32` to return an optional value of this type.…",4,[[["u32"]],[R[24]]]],[10,R[1048],E,"Convert an `u64` to return an optional value of this type.…",4,[[["u64"]],[R[24]]]],[11,R[1046],E,"Convert an `u128` to return an optional value of this…",4,[[["u128"]],[R[24]]]],[11,R[1049],E,"Convert a `f32` to return an optional value of this type.…",4,[[["f32"]],[R[24]]]],[11,R[1050],E,"Convert a `f64` to return an optional value of this type.…",4,[[["f64"]],[R[24]]]],[8,"NumCast",E,"An interface for casting between machine scalars.",N,N],[10,"from",E,"Creates a number from another value that can be converted…",5,[[[R[663]]],[R[24]]]],[8,R[543],E,"A generic interface for casting between machine scalars…",N,N],[10,"as_",E,"Convert a value to another, using the `as` operator.",6,[[],[T]]],[0,"float",R[467],E,N,N],[8,R[544],"num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity",E,"Returns positive infinity.",7,[[],["self"]]],[10,R[470],E,"Returns negative infinity.",7,[[],["self"]]],[10,"nan",E,"Returns NaN.",7,[[],["self"]]],[10,"neg_zero",E,R[471],7,[[],["self"]]],[10,R[468],E,R[472],7,[[],["self"]]],[10,R[473],E,R[474],7,[[],["self"]]],[10,R[49],E,R[475],7,[[],["self"]]],[10,R[469],E,R[476],7,[[],["self"]]],[11,"is_nan",E,"Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,R[477],E,"Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,R[478],E,"Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,R[479],E,R[480],7,[[],["bool"]]],[10,"classify",E,R[481],7,[[],[R[482]]]],[11,"floor",E,R[483],7,[[],["self"]]],[11,"ceil",E,R[484],7,[[],["self"]]],[11,"round",E,R[485],7,[[],["self"]]],[11,"trunc",E,R[486],7,[[],["self"]]],[11,"fract",E,R[487],7,[[],["self"]]],[11,"abs",E,R[488],7,[[],["self"]]],[11,"signum",E,R[489],7,[[],["self"]]],[11,R[490],E,"Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,R[491],E,"Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min",E,R[496],7,[[],["self"]]],[11,"max",E,R[495],7,[[],["self"]]],[11,"recip",E,"Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi",E,R[492],7,[[["i32"]],["self"]]],[10,R[493],E,"Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,R[494],E,"Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,R[497],E,R[498],7,[[]]],[8,"Float",E,"Generic trait for floating point numbers",N,N],[10,"nan",E,"Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity",E,"Returns the infinite value.",8,[[],["self"]]],[10,R[470],E,"Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero",E,R[471],8,[[],["self"]]],[10,R[468],E,R[472],8,[[],["self"]]],[10,R[473],E,R[474],8,[[],["self"]]],[11,R[49],E,R[475],8,[[],["self"]]],[10,R[469],E,R[476],8,[[],["self"]]],[10,"is_nan",E,"Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,R[477],E,"Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,R[478],E,"Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,R[479],E,R[480],8,[[],["bool"]]],[10,"classify",E,R[481],8,[[],[R[482]]]],[10,"floor",E,R[483],8,[[],["self"]]],[10,"ceil",E,R[484],8,[[],["self"]]],[10,"round",E,R[485],8,[[],["self"]]],[10,"trunc",E,R[486],8,[[],["self"]]],[10,"fract",E,R[487],8,[[],["self"]]],[10,"abs",E,R[488],8,[[],["self"]]],[10,"signum",E,R[489],8,[[],["self"]]],[10,R[490],E,R[506],8,[[],["bool"]]],[10,R[491],E,R[507],8,[[],["bool"]]],[10,"mul_add",E,R[502],8,[[],["self"]]],[10,"recip",E,R[508],8,[[],["self"]]],[10,"powi",E,R[492],8,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt",E,R[509],8,[[],["self"]]],[10,"exp",E,R[510],8,[[],["self"]]],[10,"exp2",E,R[511],8,[[],["self"]]],[10,"ln",E,R[512],8,[[],["self"]]],[10,"log",E,R[513],8,[[],["self"]]],[10,"log2",E,R[514],8,[[],["self"]]],[10,"log10",E,R[515],8,[[],["self"]]],[11,R[493],E,R[516],8,[[],["self"]]],[11,R[494],E,R[517],8,[[],["self"]]],[10,"max",E,R[495],8,[[],["self"]]],[10,"min",E,R[496],8,[[],["self"]]],[10,"abs_sub",E,R[518],8,[[],["self"]]],[10,"cbrt",E,R[519],8,[[],["self"]]],[10,"hypot",E,R[520],8,[[],["self"]]],[10,"sin",E,R[521],8,[[],["self"]]],[10,"cos",E,R[522],8,[[],["self"]]],[10,"tan",E,R[523],8,[[],["self"]]],[10,"asin",E,R[524],8,[[],["self"]]],[10,"acos",E,R[525],8,[[],["self"]]],[10,"atan",E,R[526],8,[[],["self"]]],[10,"atan2",E,R[527],8,[[],["self"]]],[10,"sin_cos",E,R[528],8,[[]]],[10,"exp_m1",E,R[529],8,[[],["self"]]],[10,"ln_1p",E,R[530],8,[[],["self"]]],[10,"sinh",E,R[531],8,[[],["self"]]],[10,"cosh",E,R[532],8,[[],["self"]]],[10,"tanh",E,R[533],8,[[],["self"]]],[10,"asinh",E,R[534],8,[[],["self"]]],[10,"acosh",E,R[535],8,[[],["self"]]],[10,"atanh",E,R[536],8,[[],["self"]]],[10,R[497],E,R[498],8,[[]]],[8,R[545],E,E,N,N],[10,"E",E,"Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI",E,"Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2",E,"Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI",E,"Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI",E,"Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2",E,"Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3",E,"Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4",E,"Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6",E,"Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8",E,"Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10",E,"Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2",E,"Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E",E,"Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E",E,"Return `log2(e)`.",9,[[],["self"]]],[10,"PI",E,"Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2",E,"Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities",R[467],E,N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["zero"]]],[5,"one",E,"Returns the multiplicative identity, `1`.",N,[[],["one"]]],[8,"Zero",E,"Defines an additive identity element for `Self`.",N,N],[10,"zero",E,"Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero",E,"Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero",E,"Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One",E,"Defines a multiplicative identity element for `Self`.",N,N],[10,"one",E,"Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one",E,"Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one",E,"Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int",R[467],E,N,N],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",N,N],[10,"count_ones",E,"Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros",E,"Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros",E,"Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros",E,"Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left",E,R[499],12,[[["u32"]],["self"]]],[10,"rotate_right",E,R[500],12,[[["u32"]],["self"]]],[10,"signed_shl",E,R[499],12,[[["u32"]],["self"]]],[10,"signed_shr",E,R[500],12,[[["u32"]],["self"]]],[10,"unsigned_shl",E,R[499],12,[[["u32"]],["self"]]],[10,"unsigned_shr",E,R[500],12,[[["u32"]],["self"]]],[10,"swap_bytes",E,"Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be",E,"Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le",E,"Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be",E,"Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le",E,"Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow",E,"Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops",R[467],E,N,N],[0,"checked",R[501],E,N,N],[8,R[546],"num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,R[581],E,"Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],[R[24]]]],[8,R[547],E,"Performs subtraction that returns `None` instead of…",N,N],[10,R[582],E,"Subtracts two numbers, checking for underflow. If…",14,[[["self"]],[R[24]]]],[8,R[548],E,"Performs multiplication that returns `None` instead of…",N,N],[10,R[1052],E,"Multiplies two numbers, checking for underflow or…",15,[[["self"]],[R[24]]]],[8,R[549],E,"Performs division that returns `None` instead of panicking…",N,N],[10,R[1053],E,"Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],[R[24]]]],[8,R[550],E,"Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem",E,"Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],[R[24]]]],[8,R[551],E,"Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg",E,"Negates a number, returning `None` for results that can't…",18,[[["self"]],[R[24]]]],[8,R[552],E,"Performs a left shift that returns `None` on shifts larger…",N,N],[10,"checked_shl",E,"Checked shift left. Computes `self << rhs`, returning…",19,[[["self"],["u32"]],[R[24]]]],[8,R[553],E,"Performs a right shift that returns `None` on shifts…",N,N],[10,"checked_shr",E,"Checked shift right. Computes `self >> rhs`, returning…",20,[[["self"],["u32"]],[R[24]]]],[0,"inv",R[501],E,N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output",E,R[505],21,N],[10,"inv",E,"Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add",R[501],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[502],N,N],[16,"Output",E,"The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add",E,R[503],22,[[["a"],["b"]]]],[8,R[554],E,"The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign",E,R[503],23,[[["self"],["a"],["b"]]]],[0,"saturating",R[501],E,N,N],[8,R[555],"num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add",E,"Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub",E,"Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping",R[501],E,N,N],[8,R[556],"num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add",E,"Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,R[557],E,"Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub",E,"Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,R[558],E,"Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul",E,"Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,R[559],E,"Performs a left shift that does not panic.",N,N],[10,"wrapping_shl",E,"Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["self"],["u32"]],["self"]]],[8,R[560],E,"Performs a right shift that does not panic.",N,N],[10,"wrapping_shr",E,"Panic-free bitwise shift-right; yields `self >>…",29,[[["self"],["u32"]],["self"]]],[0,"pow",R[467],E,N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["usize"],["one"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow",E,"Raises a value to the power of exp, returning `None` if an…",N,[[[R[504]],["one"],["clone"],["usize"]],[[R[24]],[R[504]],["clone"],["one"]]]],[8,"Pow",E,"Binary operator for raising a value to a power.",N,N],[16,"Output",E,R[505],30,N],[10,"pow",E,"Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real",R[467],E,N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,R[468],E,R[472],31,[[],["self"]]],[10,R[473],E,R[474],31,[[],["self"]]],[10,R[49],E,R[475],31,[[],["self"]]],[10,R[469],E,R[476],31,[[],["self"]]],[10,"floor",E,R[483],31,[[],["self"]]],[10,"ceil",E,R[484],31,[[],["self"]]],[10,"round",E,R[485],31,[[],["self"]]],[10,"trunc",E,R[486],31,[[],["self"]]],[10,"fract",E,R[487],31,[[],["self"]]],[10,"abs",E,R[488],31,[[],["self"]]],[10,"signum",E,R[489],31,[[],["self"]]],[10,R[490],E,R[506],31,[[],["bool"]]],[10,R[491],E,R[507],31,[[],["bool"]]],[10,"mul_add",E,R[502],31,[[],["self"]]],[10,"recip",E,R[508],31,[[],["self"]]],[10,"powi",E,R[492],31,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt",E,R[509],31,[[],["self"]]],[10,"exp",E,R[510],31,[[],["self"]]],[10,"exp2",E,R[511],31,[[],["self"]]],[10,"ln",E,R[512],31,[[],["self"]]],[10,"log",E,R[513],31,[[],["self"]]],[10,"log2",E,R[514],31,[[],["self"]]],[10,"log10",E,R[515],31,[[],["self"]]],[10,R[493],E,R[516],31,[[],["self"]]],[10,R[494],E,R[517],31,[[],["self"]]],[10,"max",E,R[495],31,[[],["self"]]],[10,"min",E,R[496],31,[[],["self"]]],[10,"abs_sub",E,R[518],31,[[],["self"]]],[10,"cbrt",E,R[519],31,[[],["self"]]],[10,"hypot",E,R[520],31,[[],["self"]]],[10,"sin",E,R[521],31,[[],["self"]]],[10,"cos",E,R[522],31,[[],["self"]]],[10,"tan",E,R[523],31,[[],["self"]]],[10,"asin",E,R[524],31,[[],["self"]]],[10,"acos",E,R[525],31,[[],["self"]]],[10,"atan",E,R[526],31,[[],["self"]]],[10,"atan2",E,R[527],31,[[],["self"]]],[10,"sin_cos",E,R[528],31,[[]]],[10,"exp_m1",E,R[529],31,[[],["self"]]],[10,"ln_1p",E,R[530],31,[[],["self"]]],[10,"sinh",E,R[531],31,[[],["self"]]],[10,"cosh",E,R[532],31,[[],["self"]]],[10,"tanh",E,R[533],31,[[],["self"]]],[10,"asinh",E,R[534],31,[[],["self"]]],[10,"acosh",E,R[535],31,[[],["self"]]],[10,"atanh",E,R[536],31,[[],["self"]]],[0,"sign",R[467],E,N,N],[5,"abs","num_traits::sign",R[537],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[518],N,[[["signed"]],["signed"]]],[5,"signum",E,R[538],N,[[["signed"]],["signed"]]],[8,"Signed",E,"Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs",E,R[537],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[518],32,[[["self"]],["self"]]],[10,"signum",E,R[538],32,[[["self"]],["self"]]],[10,R[665],E,"Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,R[666],E,"Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned",E,"A trait for values which cannot be negative",N,N],[8,"Num",R[467],"The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr",E,E,33,N],[10,R[664],E,"Convert from a string and radix <= 36.",33,[[["u32"],["str"]],[R[2]]]],[8,"NumOps",E,"The trait for types implementing basic numeric operations",N,N],[8,"NumRef",E,"The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum",E,"The trait for references which implement numeric…",N,N],[8,"NumAssignOps",E,"The trait for types implementing numeric assignment…",N,N],[8,"NumAssign",E,"The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef",E,"The trait for `NumAssign` types which also implement…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]]],"p":[[3,R[539]],[4,R[540]],[8,"Bounded"],[8,R[541]],[8,R[542]],[8,"NumCast"],[8,R[543]],[8,R[544]],[8,"Float"],[8,R[545]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[546]],[8,R[547]],[8,R[548]],[8,R[549]],[8,R[550]],[8,R[551]],[8,R[552]],[8,R[553]],[8,"Inv"],[8,"MulAdd"],[8,R[554]],[8,R[555]],[8,R[556]],[8,R[557]],[8,R[558]],[8,R[559]],[8,R[560]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["ordered_float"]={"doc":"Wrappers for total order on Floats.","i":[[3,R[667],"ordered_float",R[651],N,N],[12,"0",E,E,0,N],[3,"NotNan",E,R[651],N,N],[3,R[669],E,R[652],N,N],[4,R[668],E,"An error indicating a parse error from a string for…",N,N],[13,R[539],E,"A plain parse error from the underlying float type.",1,N],[13,"IsNaN",E,"The parsed float value resulted in a NaN.",1,N],[6,"NotNaN",E,R[651],N,N],[6,"FloatIsNaN",E,R[652],N,N],[11,R[25],E,R[654],0,[[],[T]]],[11,"new",E,"Create a NotNan value.",2,[[[T]],[[R[2],[R[653]]],[R[653]]]]],[11,"unchecked_new",E,"Create a NotNan value from a value that is guaranteed to…",2,[[[T]],["self"]]],[11,R[25],E,R[654],2,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[82],E,E,2,[[["self"]],[R[81]]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[82],E,E,3,[[["self"]],[R[81]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[82],E,E,1,[[["self"]],[R[81]]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,R[13],E,E,0,[[["self"]]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[661]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[653]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[655]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[655]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[23]]]],[11,"cmp",E,E,2,[[["self"],["notnan"]],[R[23]]]],[11,R[153],E,E,0,[[["self"]],[[R[24],[R[23]]],[R[23]]]]],[11,R[153],E,E,2,[[["self"],["notnan"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"le",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,2,[[["self"],["h"]]]],[11,"add",E,E,2,[[],["self"]]],[11,"add",E,E,2,[[[T]],["self"]]],[11,"sub",E,E,2,[[],["self"]]],[11,"sub",E,E,2,[[[T]],["self"]]],[11,"mul",E,E,2,[[],["self"]]],[11,"mul",E,E,2,[[[T]],["self"]]],[11,"div",E,E,2,[[],["self"]]],[11,"div",E,E,2,[[[T]],["self"]]],[11,"rem",E,E,2,[[],["self"]]],[11,"rem",E,E,2,[[[T]],["self"]]],[11,"neg",E,E,2,[[],["self"]]],[11,R[656],E,E,2,[[["self"]]]],[11,R[656],E,E,2,[[["self"],[T]]]],[11,R[657],E,E,2,[[["self"]]]],[11,R[657],E,E,2,[[["self"],[T]]]],[11,R[658],E,E,2,[[["self"]]]],[11,R[658],E,E,2,[[["self"],[T]]]],[11,R[659],E,E,2,[[["self"]]]],[11,R[659],E,E,2,[[["self"],[T]]]],[11,R[660],E,E,2,[[["self"]]]],[11,R[660],E,E,2,[[["self"],[T]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,2,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,R[670],E,"Convert a &str to `OrderedFloat`. Returns an error if the…",0,[[["str"]],[R[2]]]],[11,R[670],E,"Convert a &str to `NotNan`. Returns an error if the string…",2,[[["str"]],[R[2]]]],[11,"as_ref",E,E,0,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"as_mut",E,E,0,[[["self"]],[T]]],[11,"into",E,E,0,[[],["f32"]]],[11,"into",E,E,0,[[],["f64"]]],[11,"into",E,E,3,[[],["error"]]],[11,"clone",E,E,0,[[["self"]],[R[661]]]],[11,"clone",E,E,2,[[["self"]],["notnan"]]],[11,"clone",E,E,3,[[["self"]],[R[653]]]],[11,"clone",E,E,1,[[["self"]],[R[655]]]],[11,R[188],E,E,0,[[],[R[661]]]],[11,R[188],E,E,2,[[],["notnan"]]],[11,R[468],E,E,0,[[],["self"]]],[11,R[469],E,E,0,[[],["self"]]],[11,R[468],E,E,2,[[],["self"]]],[11,R[469],E,E,2,[[],["self"]]],[11,"to_i64",E,E,2,[[["self"]],[["i64"],[R[24],["i64"]]]]],[11,"to_u64",E,E,2,[[["self"]],[[R[24],["u64"]],["u64"]]]],[11,"to_isize",E,E,2,[[["self"]],[["isize"],[R[24],["isize"]]]]],[11,"to_i8",E,E,2,[[["self"]],[["i8"],[R[24],["i8"]]]]],[11,"to_i16",E,E,2,[[["self"]],[["i16"],[R[24],["i16"]]]]],[11,"to_i32",E,E,2,[[["self"]],[[R[24],["i32"]],["i32"]]]],[11,"to_usize",E,E,2,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"to_u8",E,E,2,[[["self"]],[[R[24],["u8"]],["u8"]]]],[11,"to_u16",E,E,2,[[["self"]],[["u16"],[R[24],["u16"]]]]],[11,"to_u32",E,E,2,[[["self"]],[[R[24],["u32"]],["u32"]]]],[11,"to_f32",E,E,2,[[["self"]],[[R[24],["f32"]],["f32"]]]],[11,"to_f64",E,E,2,[[["self"]],[[R[24],["f64"]],["f64"]]]],[11,R[1047],E,E,2,[[["i64"]],[R[24]]]],[11,R[1048],E,E,2,[[["u64"]],[R[24]]]],[11,R[662],E,E,2,[[["isize"]],[R[24]]]],[11,"from_i8",E,E,2,[[["i8"]],[R[24]]]],[11,"from_i16",E,E,2,[[["i16"]],[R[24]]]],[11,"from_i32",E,E,2,[[["i32"]],[R[24]]]],[11,R[571],E,E,2,[[["usize"]],[R[24]]]],[11,"from_u8",E,E,2,[[["u8"]],[R[24]]]],[11,"from_u16",E,E,2,[[["u16"]],[R[24]]]],[11,"from_u32",E,E,2,[[["u32"]],[R[24]]]],[11,R[1049],E,E,2,[[["f32"]],[R[24]]]],[11,R[1050],E,E,2,[[["f64"]],[R[24]]]],[11,"from",E,E,2,[[[R[663]]],[R[24]]]],[11,R[664],E,E,2,[[["u32"],["str"]],[R[2]]]],[11,"zero",E,E,2,[[],["self"]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["self"]]],[11,"abs",E,E,2,[[["self"]],["self"]]],[11,"abs_sub",E,E,2,[[["self"]],["self"]]],[11,"signum",E,E,2,[[["self"]],["self"]]],[11,R[665],E,E,2,[[["self"]],["bool"]]],[11,R[666],E,E,2,[[["self"]],["bool"]]],[11,R[93],E,E,3,[[["self"]],["str"]]],[11,R[93],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[667]],[4,R[668]],[3,"NotNan"],[3,R[669]]]};
searchIndex["palette"]={"doc":"A library that makes linear color calculations and…","i":[[3,"Alpha","palette","An alpha component wrapper for colors.",N,N],[12,"color",E,"The color.",0,N],[12,"alpha",E,R[1739],0,N],[3,"Hsl",E,"Linear HSL color space.",N,N],[12,"hue",E,R[1732],1,N],[12,"saturation",E,R[1733],1,N],[12,"lightness",E,"Decides how light the color will look. 0.0 will be black,…",1,N],[12,"space",E,R[1734],1,N],[3,"Hsv",E,"Linear HSV color space.",N,N],[12,"hue",E,R[1732],2,N],[12,"saturation",E,R[1733],2,N],[12,"value",E,"Decides how bright the color will look. 0.0 will be black,…",2,N],[12,"space",E,R[1734],2,N],[3,"Hwb",E,"Linear HWB color space.",N,N],[12,"hue",E,R[1732],3,N],[12,"whiteness",E,"The whiteness of the color. It specifies the amount white…",3,N],[12,"blackness",E,"The blackness of the color. It specifies the amount black…",3,N],[12,"space",E,R[1734],3,N],[3,"Lab",E,"The CIE L*a*b* (CIELAB) color space.",N,N],[12,"l",E,R[1735],4,N],[12,"a",E,"a* goes from red at -128 to green at 127.",4,N],[12,"b",E,"b* goes from yellow at -128 to blue at 127.",4,N],[12,R[1736],E,R[1737],4,N],[3,"Lch",E,R[1738],N,N],[12,"l",E,R[1735],5,N],[12,"chroma",E,"C* is the colorfulness of the color. It's similar to…",5,N],[12,"hue",E,R[1732],5,N],[12,R[1736],E,R[1737],5,N],[3,"Xyz",E,"The CIE 1931 XYZ color space.",N,N],[12,"x",E,"X is the scale of what can be seen as a response curve for…",6,N],[12,"y",E,"Y is the luminance of the color, where 0.0 is black and…",6,N],[12,"z",E,"Z is the scale of what can be seen as the blue…",6,N],[12,R[1736],E,R[1737],6,N],[3,"Yxy",E,"The CIE 1931 Yxy (xyY)  color space.",N,N],[12,"x",E,"x chromacity co-ordinate derived from XYZ color space as…",7,N],[12,"y",E,"y chromacity co-ordinate derived from XYZ color space as…",7,N],[12,"luma",E,"luma (Y) was a measure of the brightness or luminance of a…",7,N],[12,R[1736],E,R[1737],7,N],[3,"LabHue",E,"A hue type for the CIE L*a*b* family of color spaces.",N,N],[3,"RgbHue",E,"A hue type for the RGB family of color spaces.",N,N],[4,"Color",E,"A generic color type.",N,N],[13,"Luma",E,R[1754],8,N],[13,"Rgb",E,R[1811],8,N],[13,"Xyz",E,"CIE 1931 XYZ.",8,N],[13,"Yxy",E,"CIE 1931 Yxy.",8,N],[13,"Lab",E,"CIE L*a*b* (CIELAB).",8,N],[13,"Lch",E,R[1738],8,N],[13,"Hsv",E,"Linear HSV, a cylindrical version of RGB.",8,N],[13,"Hsl",E,"Linear HSL, a cylindrical version of RGB.",8,N],[13,"Hwb",E,"Linear HWB, an intuitive cylindrical version of RGB.",8,N],[0,"blend",E,"Color blending and blending equations.",N,N],[3,"Equations",R[1794],"A pair of blending equations and corresponding parameters.",N,N],[12,"color_equation",E,"The equation for the color components.",9,N],[12,"alpha_equation",E,"The equation for the alpha component.",9,N],[12,"color_parameters",E,"The parameters for the color components.",9,N],[12,"alpha_parameters",E,"The parameters for the alpha component.",9,N],[3,R[99],E,"A pair of source and destination parameters.",N,N],[12,"source",E,"The source parameter.",10,N],[12,"destination",E,"The destination parameter.",10,N],[3,"PreAlpha",E,"Premultiplied alpha wrapper.",N,N],[12,"color",E,"The premultiplied color components (`original.color *…",11,N],[12,"alpha",E,R[1739],11,N],[4,"Equation",E,"A blending equation.",N,N],[13,"Add",E,"Add the source and destination, according to `sp * S + dp…",12,N],[13,"Subtract",E,"Subtract the destination from the source, according to `sp…",12,N],[13,"ReverseSubtract",E,"Subtract the source from the destination, according to `dp…",12,N],[13,"Min",E,"Create a color where each component is the smallest of…",12,N],[13,"Max",E,"Create a color where each component is the largest of each…",12,N],[4,R[143],E,"A blending parameter.",N,N],[13,"One",E,"A simple 1.",13,N],[13,"Zero",E,"A simple 0.",13,N],[13,"SourceColor",E,"The source color, or alpha.",13,N],[13,"OneMinusSourceColor",E,"One minus the source color, or alpha.",13,N],[13,"DestinationColor",E,"The destination color, or alpha.",13,N],[13,"OneMinusDestinationColor",E,"One minus the destination color, or alpha.",13,N],[13,"SourceAlpha",E,"The source alpha.",13,N],[13,"OneMinusSourceAlpha",E,"One minus the source alpha.",13,N],[13,"DestinationAlpha",E,"The destination alpha.",13,N],[13,"OneMinusDestinationAlpha",E,"One minus the destination alpha.",13,N],[11,"from_equations",E,"Create a pair of blending equations, where all the…",9,[[["equation"]],[R[1846]]]],[11,"from_parameters",E,"Create a pair of additive blending equations with the…",9,[[[R[134]]],[R[1846]]]],[8,"Blend",E,R[1788],N,N],[16,"Color",E,R[1789],14,N],[10,R[1790],E,R[1791],14,[[],[R[1819]]]],[10,R[1792],E,R[1793],14,[[[R[1819]]],["self"]]],[11,"blend",E,R[1795],14,[[["f"]],["self"]]],[11,"over",E,R[1796],14,[[],["self"]]],[11,"inside",E,R[1797],14,[[],["self"]]],[11,"outside",E,R[1798],14,[[],["self"]]],[11,"atop",E,R[1799],14,[[],["self"]]],[11,"xor",E,R[1800],14,[[],["self"]]],[11,"plus",E,R[1801],14,[[],["self"]]],[11,"multiply",E,R[1802],14,[[],["self"]]],[11,"screen",E,R[1803],14,[[],["self"]]],[11,"overlay",E,R[1740],14,[[],["self"]]],[11,"darken",E,R[1804],14,[[],["self"]]],[11,"lighten",E,R[1805],14,[[],["self"]]],[11,"dodge",E,R[1806],14,[[],["self"]]],[11,"burn",E,R[1807],14,[[],["self"]]],[11,R[1855],E,R[1740],14,[[],["self"]]],[11,R[1856],E,R[1808],14,[[],["self"]]],[11,R[1857],E,R[1809],14,[[],["self"]]],[11,"exclusion",E,R[1810],14,[[],["self"]]],[8,R[1877],E,"A trait for custom blend functions.",N,N],[10,"apply_to",E,"Apply this blend function to a pair of colors.",15,[[[R[1819]]],[R[1819]]]],[0,"gradient","palette","Types for interpolation between multiple colors.",N,N],[3,"Gradient",R[1820],"A linear interpolation between colors.",N,N],[3,"Take",E,"An iterator over interpolated colors.",N,N],[3,"Slice",E,"A slice of a Gradient that limits its domain.",N,N],[3,"Range",E,"A domain range for gradient slices.",N,N],[11,"new",E,"Create a gradient of evenly spaced colors with the domain…",16,[[[R[156]]],["gradient"]]],[11,"with_domain",E,"Create a gradient of colors with custom spacing and…",16,[[["vec"]],["gradient"]]],[11,"get",E,"Get a color from the gradient. The color of the closest…",16,[[["self"]],["c"]]],[11,"take",E,"Take `n` evenly spaced colors from the gradient, as an…",16,[[["self"],["usize"]],["take"]]],[11,"slice",E,"Slice this gradient to limit its domain.",16,[[["self"],["range"],["into",["range"]]],["slice"]]],[11,"domain",E,"Get the limits of this gradient's domain.",16,[[["self"]]]],[11,"get",E,"Get a color from the gradient slice. The color of the…",17,[[["self"]],["c"]]],[11,"take",E,"Take `n` evenly spaced colors from the gradient slice, as…",17,[[["self"],["usize"]],["take"]]],[11,"slice",E,"Slice this gradient slice to further limit its domain.…",17,[[["self"],["range"],["into",["range"]]],["slice"]]],[11,"domain",E,"Get the limits of this gradient slice's domain.",17,[[["self"]]]],[11,"new","palette","HSL for linear sRGB.",1,[[["into",["rgbhue"]],["rgbhue"],[T]],[["hsl",["srgb"]],["srgb"]]]],[11,"with_wp",E,R[1815],1,[[["into",["rgbhue"]],["rgbhue"],[T]],["hsl"]]],[11,R[1741],E,"Convert to a `(hue, saturation, lightness)` tuple.",1,[[]]],[11,R[1742],E,"Convert from a `(hue, saturation, lightness)` tuple.",1,[[],["self"]]],[11,"new",E,"HSL and transparency for linear sRGB.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],[T]],["self"]]],[11,"with_wp",E,"Linear HSL and transparency.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],[T]],["self"]]],[11,R[1741],E,"Convert to a `(hue, saturation, lightness, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(hue, saturation, lightness, alpha)` tuple.",0,[[],["self"]]],[11,"new",E,"HSV for linear sRGB.",2,[[["into",["rgbhue"]],["rgbhue"],[T]],[["srgb"],["hsv",["srgb"]]]]],[11,"with_wp",E,R[1814],2,[[["into",["rgbhue"]],["rgbhue"],[T]],["hsv"]]],[11,R[1741],E,"Convert to a `(hue, saturation, value)` tuple.",2,[[]]],[11,R[1742],E,"Convert from a `(hue, saturation, value)` tuple.",2,[[],["self"]]],[11,"new",E,"HSV and transparency for linear sRGB.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],[T]],["self"]]],[11,"with_wp",E,"Linear HSV and transparency.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],[T]],["self"]]],[11,R[1741],E,"Convert to a `(hue, saturation, value, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(hue, saturation, value, alpha)` tuple.",0,[[],["self"]]],[11,"new",E,"HWB for linear sRGB.",3,[[["into",["rgbhue"]],["rgbhue"],[T]],[["hwb",["srgb"]],["srgb"]]]],[11,"with_wp",E,R[1816],3,[[["into",["rgbhue"]],["rgbhue"],[T]],["hwb"]]],[11,R[1741],E,"Convert to a `(hue, whiteness, blackness)` tuple.",3,[[]]],[11,R[1742],E,"Convert from a `(hue, whiteness, blackness)` tuple.",3,[[],["self"]]],[11,"new",E,"HWB and transparency for linear sRGB.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],[T]],["self"]]],[11,"with_wp",E,"Linear HWB and transparency.",0,[[["into",["rgbhue"]],["a"],["rgbhue"],[T]],["self"]]],[11,R[1741],E,"Convert to a `(hue, whiteness, blackness, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(hue, whiteness, blackness, alpha)` tuple.",0,[[],["self"]]],[11,"new",E,"CIE L*a*b* with white point D65.",4,[[[T]],[["d65"],["lab",["d65"]]]]],[11,"with_wp",E,R[1812],4,[[[T]],["lab"]]],[11,R[1741],E,"Convert to a `(L\\*, a\\*, b\\*)` tuple.",4,[[]]],[11,R[1742],E,"Convert from a `(L\\*, a\\*, b\\*)` tuple.",4,[[],["self"]]],[11,"new",E,"CIE L*a*b* and transparency and white point D65.",0,[[["a"],[T]],["self"]]],[11,"with_wp",E,"CIE L*a*b* and transparency.",0,[[["a"],[T]],["self"]]],[11,R[1741],E,"Convert to a `(L\\*, a\\*, b\\*, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(L\\*, a\\*, b\\*, alpha)` tuple.",0,[[],["self"]]],[11,"new",E,"CIE L*C*h° with white point D65.",5,[[["labhue"],["into",["labhue"]],[T]],[["lch",["d65"]],["d65"]]]],[11,"with_wp",E,R[1813],5,[[["labhue"],["into",["labhue"]],[T]],["lch"]]],[11,R[1741],E,"Convert to a `(L\\*, C\\*, h°)` tuple.",5,[[]]],[11,R[1742],E,"Convert from a `(L\\*, C\\*, h°)` tuple.",5,[[],["self"]]],[11,"new",E,"CIE L*C*h° and transparency with white point D65.",0,[[["labhue"],["into",["labhue"]],["a"],[T]],["self"]]],[11,"with_wp",E,"CIE L*C*h° and transparency.",0,[[["labhue"],["into",["labhue"]],["a"],[T]],["self"]]],[11,R[1741],E,"Convert to a `(L\\*, C\\*, h°, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(L\\*, C\\*, h°, alpha)` tuple.",0,[[],["self"]]],[0,"luma",E,"Luminance types.",N,N],[3,"Luma",R[1753],"Luminance.",N,N],[12,"luma",E,"The lightness of the color. 0.0 is black and 1.0 is white.",18,N],[12,"standard",E,R[1755],18,N],[11,"new",E,"Create a luminance color.",18,[[[T]],["luma"]]],[11,R[1744],E,R[1745],18,[[],[["luma"],[R[1748]]]]],[11,R[1746],E,R[1747],18,[[["luma"],[R[1748]]],["self"]]],[11,R[1741],E,"Convert to a `(luma,)` tuple.",18,[[]]],[11,R[1742],E,"Convert from a `(luma,)` tuple.",18,[[],["self"]]],[11,R[1749],E,"Convert the color to linear luminance.",18,[[],[["linear"],["luma",["linear"]]]]],[11,R[1750],E,"Convert linear luminance to nonlinear luminance.",18,[[["linear"],["luma",["linear"]]],["luma"]]],[11,R[1751],E,R[1756],18,[[],[["luma"],[R[1743]]]]],[11,R[1752],E,"Convert luminance from a different encoding.",18,[[["luma"],[R[1743]]],["luma"]]],[11,"new","palette","Create a luminance color with transparency.",0,[[["a"],[T]],["self"]]],[11,R[1744],E,R[1745],0,[[],[["luma"],["alpha",["luma"]],[R[1748]]]]],[11,R[1746],E,R[1747],0,[[["luma"],["alpha",["luma"]],[R[1748]]],["self"]]],[11,R[1741],E,"Convert to a `(luma, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(luma, alpha)` tuple.",0,[[],["self"]]],[11,R[1749],E,"Convert the color to linear luminance with transparency.",0,[[],[["alpha",["luma"]],["luma",["linear"]]]]],[11,R[1750],E,"Convert linear luminance to nonlinear luminance with…",0,[[["alpha",["luma"]],["luma",["linear"]]],[["luma"],["alpha",["luma"]]]]],[11,R[1751],E,R[1758],0,[[],[["luma"],["alpha",["luma"]]]]],[11,R[1752],E,"Convert luminance from a different encoding with…",0,[[["luma"],["alpha",["luma"]]],[["luma"],["alpha",["luma"]]]]],[6,"Lumaa",R[1753],"Luminance with an alpha component. See the `Lumaa`…",N,N],[6,"SrgbLuma",E,"sRGB encoded luminance.",N,N],[6,"SrgbLumaa",E,"sRGB encoded luminance with an alpha component.",N,N],[6,"LinLuma",E,R[1754],N,N],[6,"LinLumaa",E,"Linear luminance with an alpha component.",N,N],[6,"GammaLuma",E,"Gamma 2.2 encoded luminance.",N,N],[6,"GammaLumaa",E,"Gamma 2.2 encoded luminance with an alpha component.",N,N],[8,R[1878],E,"A white point and a transfer function.",N,N],[16,R[1787],E,"The white point of the color space.",19,N],[16,R[1782],E,"The transfer function for the luminance component.",19,N],[0,"rgb","palette","RGB types, spaces and standards.",N,N],[3,"Rgb",R[1759],"Generic RGB.",N,N],[12,"red",E,"The amount of red light, where 0.0 is no red light and…",20,N],[12,"green",E,"The amount of green light, where 0.0 is no green light and…",20,N],[12,"blue",E,"The amount of blue light, where 0.0 is no blue light and…",20,N],[12,"standard",E,R[1755],20,N],[11,"new",E,"Create an RGB color.",20,[[[T]],["rgb"]]],[11,R[1744],E,R[1745],20,[[],[["rgb"],[R[1748]]]]],[11,R[1746],E,R[1747],20,[[["rgb"],[R[1748]]],["self"]]],[11,R[1741],E,"Convert to a `(red, green, blue)` tuple.",20,[[]]],[11,R[1742],E,"Convert from a `(red, green, blue)` tuple.",20,[[],["self"]]],[11,R[1749],E,"Convert the color to linear RGB.",20,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1750],E,"Convert linear RGB to nonlinear RGB.",20,[[["rgb",["linear"]],["linear"]],["rgb"]]],[11,R[1751],E,R[1756],20,[[],[["rgb"],[R[1757]]]]],[11,R[1752],E,"Convert RGB from a different encoding.",20,[[["rgb"],[R[1757]]],["rgb"]]],[11,"new","palette","Nonlinear RGB.",0,[[["a"],[T]],["self"]]],[11,R[1744],E,R[1745],0,[[],[["rgb"],[R[1748]],["alpha",["rgb"]]]]],[11,R[1746],E,R[1747],0,[[["rgb"],["alpha",["rgb"]],[R[1748]]],["self"]]],[11,R[1741],E,"Convert to a `(red, green, blue, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(red, green, blue, alpha)` tuple.",0,[[],["self"]]],[11,R[1749],E,"Convert the color to linear RGB with transparency.",0,[[],[["rgb",["linear"]],["alpha",["rgb"]]]]],[11,R[1750],E,"Convert linear RGB to nonlinear RGB with transparency.",0,[[["rgb",["linear"]],["alpha",["rgb"]]],["self"]]],[11,R[1751],E,R[1758],0,[[],[["alpha",["rgb"]],["rgb"]]]],[11,R[1752],E,"Convert RGB from a different encoding with transparency.",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[6,"Rgba",R[1759],"Generic RGB with an alpha component. See the `Rgba`…",N,N],[6,"Srgb",E,"Nonlinear sRGB.",N,N],[6,"Srgba",E,"Nonlinear sRGB with an alpha component.",N,N],[6,"LinSrgb",E,"Linear sRGB.",N,N],[6,"LinSrgba",E,"Linear sRGB with an alpha component.",N,N],[6,"GammaSrgb",E,"Gamma 2.2 encoded sRGB.",N,N],[6,"GammaSrgba",E,"Gamma 2.2 encoded sRGB with an alpha component.",N,N],[8,R[1879],E,"An RGB space and a transfer function.",N,N],[16,"Space",E,"The RGB color space.",21,N],[16,R[1782],E,"The transfer function for the color components.",21,N],[8,"RgbSpace",E,"A set of primaries and a white point.",N,N],[16,"Primaries",E,"The primaries of the RGB color space.",22,N],[16,R[1787],E,"The white point of the RGB color space.",22,N],[8,"Primaries",E,"Represents the red, green and blue primaries of an RGB…",N,N],[10,"red",E,"Primary red.",23,[[],[["yxy"],[R[1760]],["float"],[R[1748]]]]],[10,"green",E,"Primary green.",23,[[],[["yxy"],[R[1760]],["float"],[R[1748]]]]],[10,"blue",E,"Primary blue.",23,[[],[["yxy"],[R[1760]],["float"],[R[1748]]]]],[11,"new","palette","CIE XYZ with whtie point D65.",6,[[[T]],[["xyz",["d65"]],["d65"]]]],[11,"with_wp",E,"CIE XYZ.",6,[[[T]],["xyz"]]],[11,R[1741],E,"Convert to a `(X, Y, Z)` tuple.",6,[[]]],[11,R[1742],E,"Convert from a `(X, Y, Z)` tuple.",6,[[],["self"]]],[11,"new",E,R[1761],0,[[["a"],[T]],["self"]]],[11,"with_wp",E,"CIE XYZ and transparency.",0,[[["a"],[T]],["self"]]],[11,R[1741],E,"Convert to a `(X, Y, Z, alpha)` tuple.",0,[[]]],[11,R[1742],E,"Convert from a `(X, Y, Z, alpha)` tuple.",0,[[],["self"]]],[11,"new",E,"CIE Yxy with white point D65.",7,[[[T]],[["yxy",["d65"]],["d65"]]]],[11,"with_wp",E,"CIE Yxy.",7,[[[T]],["yxy"]]],[11,R[1741],E,R[1762],7,[[]]],[11,R[1742],E,R[1763],7,[[],["self"]]],[11,"new",E,R[1761],0,[[["a"],[T]],["self"]]],[11,"with_wp",E,"CIE Yxy and transparency.",0,[[["a"],[T]],["self"]]],[11,R[1741],E,R[1762],0,[[]]],[11,R[1742],E,R[1763],0,[[],["self"]]],[11,R[1764],E,R[1765],24,[[[T]],["labhue"]]],[11,R[1766],E,R[1767],24,[[[T]],["labhue"]]],[11,R[493],E,R[1768],24,[[],[T]]],[11,R[494],E,R[1769],24,[[],[T]]],[11,R[1770],E,R[1771],24,[[],[T]]],[11,R[1772],E,R[1773],24,[[],[T]]],[11,R[1774],E,R[1775],24,[[],[T]]],[11,R[1776],E,R[1777],24,[[],[T]]],[11,R[1764],E,R[1765],25,[[[T]],["rgbhue"]]],[11,R[1766],E,R[1767],25,[[[T]],["rgbhue"]]],[11,R[493],E,R[1768],25,[[],[T]]],[11,R[494],E,R[1769],25,[[],[T]]],[11,R[1770],E,R[1771],25,[[],[T]]],[11,R[1772],E,R[1773],25,[[],[T]]],[11,R[1774],E,R[1775],25,[[],[T]]],[11,R[1776],E,R[1777],25,[[],[T]]],[0,"chromatic_adaptation",E,"Convert colors from one reference white point to another",N,N],[3,R[1880],R[1821],"Holds the matrix coeffecients for the chromatic adaptation…",N,N],[12,"ma",E,"3x3 matrix for the cone response domains",26,N],[12,"inv_ma",E,"3x3 matrix for the inverse of the cone response domains",26,N],[4,"Method",E,"Chromatic adaptation methods implemented in the library",N,N],[13,"Bradford",E,"Bradford chromatic adaptation method",27,N],[13,"VonKries",E,"VonKries chromatic adaptation method",27,N],[13,"XyzScaling",E,"XyzScaling chromatic adaptation method",27,N],[8,R[1881],E,"Generates a conversion matrix to convert the Xyz…",N,N],[10,R[1826],E,"Get the cone response functions for the chromatic…",28,[[["self"]],[R[1827]]]],[11,"generate_transform_matrix",E,"Generates a 3x3 transformation matrix to convert color…",28,[[["self"]],["mat3"]]],[8,"AdaptFrom",E,"Trait to convert color from one reference white point to…",N,N],[11,"adapt_from",E,R[1778],29,[[["s"]],["self"]]],[10,R[1818],E,R[1778],29,[[["s"],[R[1779]]],["self"]]],[8,"AdaptInto",E,"Trait to convert color with one reference white point into…",N,N],[11,"adapt_into",E,R[1778],30,[[],["d"]]],[10,R[1817],E,R[1778],30,[[[R[1779]]],["d"]]],[0,"encoding","palette","Various encoding traits, types and standards.",N,N],[0,"srgb",R[1780],"The sRGB standard.",N,N],[3,"Srgb",R[1822],"The sRGB color space.",N,N],[0,"gamma",R[1780],R[1781],N,N],[3,"Gamma",R[1823],R[1781],N,N],[3,"GammaFn",E,"The transfer function for gamma encoded colors.",N,N],[3,"F2p2",E,"Represents `2.2f32`.",N,N],[8,"Number",E,"A type level float constant.",N,N],[18,"VALUE",E,"The represented number.",31,N],[0,"linear",R[1780],"Linear encoding",N,N],[3,"Linear",R[1824],"A generic standard with linear components.",N,N],[3,"LinearFn",E,"Linear color component encoding.",N,N],[0,"pixel",R[1780],"Pixel encodings and pixel format conversion.",N,N],[8,R[1882],R[1875],"A contiguous sequence of pixel channels with a known length.",N,N],[18,"CHANNELS",E,R[1876],32,N],[8,"RawPixel",E,"A contiguous sequence of pixel channels.",N,N],[10,R[2023],E,"The length of the sequence.",33,[[["self"]],["usize"]]],[10,"from_raw_parts",E,"Convert from a pointer and a length.",33,[[["usize"]],["self"]]],[10,"from_raw_parts_mut",E,"Convert from a mutable pointer and a length.",33,[[["usize"]],["self"]]],[10,"as_ptr",E,"Convert to a pointer.",33,[[["self"]]]],[10,"as_mut_ptr",E,"Convert to a mutable pointer.",33,[[["self"]]]],[8,"Pixel",E,"Represents colors that can be serialized and deserialized…",N,N],[18,"CHANNELS",E,"The number of color channels.",34,N],[11,"as_raw",E,"Cast as a reference to raw color components.",34,[[["self"]],["p"]]],[11,"as_raw_mut",E,"Cast as a mutable reference to raw color components.",34,[[["self"]],["p"]]],[11,"into_raw",E,"Convert from raw color components.",34,[[],["rawpixelsized"]]],[11,"from_raw",E,"Cast from a reference to raw color components.",34,[[["p"]],["self"]]],[11,"from_raw_mut",E,"Cast from a mutable reference to raw color components.",34,[[["p"]],["self"]]],[11,"from_raw_slice",E,"Cast a slice of raw color components to a slice of colors.",34,[[]]],[11,"from_raw_slice_mut",E,"Cast a mutable slice of raw color components to a mutable…",34,[[]]],[11,"into_raw_slice",E,"Cast a slice of colors to a slice of raw color components.",34,[[]]],[11,"into_raw_slice_mut",E,"Cast a mutable slice of colors to a mutable slice of raw…",34,[[]]],[8,R[1782],R[1780],"A transfer function to and from linear space.",N,N],[10,R[1750],E,"Convert the color component `x` from linear space.",35,[[["float"]],["float"]]],[10,R[1749],E,"Convert the color component `x` into linear space.",35,[[["float"]],["float"]]],[0,R[1736],"palette","Defines the tristimulus values of the CIE Illuminants.",N,N],[3,"A",R[1825],"CIE standard illuminant A",N,N],[3,"B",E,"CIE standard illuminant B",N,N],[3,"C",E,"CIE standard illuminant C",N,N],[3,"D50",E,R[1783],N,N],[3,"D55",E,R[1784],N,N],[3,"D65",E,R[1785],N,N],[3,"D75",E,R[1786],N,N],[3,"E",E,"CIE standard illuminant E",N,N],[3,"F2",E,"CIE fluorescent illuminant series - F2",N,N],[3,"F7",E,"CIE fluorescent illuminant series - F7",N,N],[3,"F11",E,"CIE fluorescent illuminant series - F11",N,N],[3,R[1884],E,R[1783],N,N],[3,R[1885],E,R[1784],N,N],[3,R[1886],E,R[1785],N,N],[3,R[1887],E,R[1786],N,N],[8,R[1787],E,"WhitePoint defines the Xyz color co-ordinates for a given…",N,N],[10,"get_xyz",E,"Get the Xyz chromacity co-ordinates for the white point.",36,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[6,"Hsla","palette","Linear HSL with an alpha component. See the `Hsla`…",N,N],[6,"Hsva",E,"Linear HSV with an alpha component. See the `Hsva`…",N,N],[6,"Hwba",E,"Linear HWB with an alpha component. See the `Hwba`…",N,N],[6,"Laba",E,"CIE L*a*b* (CIELAB) with an alpha component. See the…",N,N],[6,"Lcha",E,"CIE L*C*h° with an alpha component. See the `Lcha`…",N,N],[6,"Xyza",E,"CIE 1931 XYZ with an alpha component. See the `Xyza`…",N,N],[6,"Yxya",E,"CIE 1931 Yxy (xyY) with an alpha component. See the `Yxya`…",N,N],[6,"Mat3",E,"A 9 element array representing a 3x3 matrix",N,N],[6,"Colora",E,"Generic color with an alpha component. See the `Colora`…",N,N],[8,"Blend",E,R[1788],N,N],[16,"Color",E,R[1789],14,N],[10,R[1790],E,R[1791],14,[[],[R[1819]]]],[10,R[1792],E,R[1793],14,[[[R[1819]]],["self"]]],[11,"blend",R[1794],R[1795],14,[[["f"]],["self"]]],[11,"over",E,R[1796],14,[[],["self"]]],[11,"inside",E,R[1797],14,[[],["self"]]],[11,"outside",E,R[1798],14,[[],["self"]]],[11,"atop",E,R[1799],14,[[],["self"]]],[11,"xor",E,R[1800],14,[[],["self"]]],[11,"plus",E,R[1801],14,[[],["self"]]],[11,"multiply",E,R[1802],14,[[],["self"]]],[11,"screen",E,R[1803],14,[[],["self"]]],[11,"overlay",E,R[1740],14,[[],["self"]]],[11,"darken",E,R[1804],14,[[],["self"]]],[11,"lighten",E,R[1805],14,[[],["self"]]],[11,"dodge",E,R[1806],14,[[],["self"]]],[11,"burn",E,R[1807],14,[[],["self"]]],[11,R[1855],E,R[1740],14,[[],["self"]]],[11,R[1856],E,R[1808],14,[[],["self"]]],[11,R[1857],E,R[1809],14,[[],["self"]]],[11,"exclusion",E,R[1810],14,[[],["self"]]],[8,"FromColor","palette","FromColor provides conversion from the colors.",N,N],[10,R[1829],E,"Convert from XYZ color space",37,[[["xyz"]],["self"]]],[11,"from_yxy",E,R[1858],37,[[["yxy"]],["self"]]],[11,"from_lab",E,R[1859],37,[[["lab"]],["self"]]],[11,"from_lch",E,R[1860],37,[[["lch"]],["self"]]],[11,R[1861],E,R[1862],37,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsl",E,R[1863],37,[[["hsl"],[R[1828]]],["self"]]],[11,"from_hsv",E,R[1864],37,[[["hsv"],[R[1828]]],["self"]]],[11,"from_hwb",E,R[1865],37,[[["hwb"],[R[1828]]],["self"]]],[11,R[1830],E,R[1866],37,[[["luma",["linear"]],["linear"]],["self"]]],[8,"IntoColor",E,"IntoColor provides conversion to the colors.",N,N],[10,R[1832],E,"Convert into XYZ space",38,[[],["xyz"]]],[11,R[1833],E,R[1867],38,[[],["yxy"]]],[11,R[1834],E,R[1868],38,[[],["lab"]]],[11,R[1835],E,R[1869],38,[[],["lch"]]],[11,R[1836],E,R[1870],38,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,R[1871],38,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,R[1872],38,[[],[["hsv"],[R[1828]]]]],[11,"into_hwb",E,R[1873],38,[[],[["hwb"],[R[1828]]]]],[11,R[1831],E,R[1874],38,[[],[["luma",["linear"]],["linear"]]]],[8,"Limited",E,"A trait for clamping and checking if colors are within…",N,N],[10,R[1840],E,"Check if the color's components are within the expected…",39,[[["self"]],["bool"]]],[10,"clamp",E,"Return a new color where the components has been clamped…",39,[[["self"]],["self"]]],[10,R[1839],E,"Clamp the color's components to the nearest valid values.",39,[[["self"]]]],[8,"Mix",E,"A trait for linear color interpolation.",N,N],[16,"Scalar",E,"The type of the mixing factor.",40,N],[10,"mix",E,"Mix the color with an other color, by `factor`.",40,[[["self"]],["self"]]],[8,"Shade",E,"The `Shade` trait allows a color to be lightened or…",N,N],[16,"Scalar",E,"The type of the lighten/darken amount.",41,N],[10,"lighten",E,"Lighten the color by `amount`.",41,[[["self"]],["self"]]],[11,"darken",E,"Darken the color by `amount`.",41,[[["self"]],["self"]]],[8,"GetHue",E,"A trait for colors where a hue may be calculated.",N,N],[16,"Hue",E,"The kind of hue unit this color space uses.",42,N],[10,"get_hue",E,"Calculate a hue if possible.",42,[[["self"]],[R[24]]]],[8,"Hue",E,"A trait for colors where the hue can be manipulated…",N,N],[10,R[1842],E,"Return a new copy of `self`, but with a specific hue.",43,[[["self"],["into"]],["self"]]],[10,R[1841],E,"Return a new copy of `self`, but with the hue shifted by…",43,[[["self"],["into"]],["self"]]],[8,"Saturate",E,"A trait for colors where the saturation (or chroma) can be…",N,N],[16,"Scalar",E,"The type of the (de)saturation factor.",44,N],[10,"saturate",E,"Increase the saturation by `factor`.",44,[[["self"]],["self"]]],[11,"desaturate",E,"Decrease the saturation by `factor`.",44,[[["self"]],["self"]]],[8,R[1883],E,"Perform a unary or binary operation on each component of a…",N,N],[16,"Scalar",E,"The scalar type for color components.",45,N],[10,R[1843],E,"Perform a binary operation on this and an other color.",45,[[["self"],["fnmut"]],["self"]]],[10,R[1844],E,"Perform a unary operation on this color.",45,[[["self"],["fnmut"]],["self"]]],[8,"Component",E,"Common trait for color components.",N,N],[18,"LIMITED",E,"True if the max intensity is also the highest possible…",46,N],[10,"max_intensity",E,"The highest displayable value this component type can…",46,[[],["self"]]],[10,"convert",E,"Convert into another color component type, including…",46,[[["self"]],[R[1748]]]],[11,"linear_y",E,R[1754],8,[[[T]],[["srgb"],["color",["srgb"]]]]],[11,"linear_rgb",E,R[1811],8,[[[T]],[["srgb"],["color",["srgb"]]]]],[11,"xyz",E,"CIE XYZ.",8,[[[T]],[["srgb"],["color",["srgb"]]]]],[11,"yxy",E,"CIE Yxy.",8,[[[T]],[["srgb"],["color",["srgb"]]]]],[11,"lab",E,R[1812],8,[[[T]],[["srgb"],["color",["srgb"]]]]],[11,"lch",E,R[1813],8,[[["labhue"],[T]],[["srgb"],["color",["srgb"]]]]],[11,"hsv",E,R[1814],8,[[["rgbhue"],[T]],[["srgb"],["color",["srgb"]]]]],[11,"hsl",E,R[1815],8,[[["rgbhue"],[T]],[["srgb"],["color",["srgb"]]]]],[11,"hwb",E,R[1816],8,[[["rgbhue"],[T]],[["srgb"],["color",["srgb"]]]]],[11,"linear_y",E,R[1754],0,[[[T]],[["srgb"],["colora",["srgb"]]]]],[11,"linear_rgb",E,R[1811],0,[[[T]],[["srgb"],["colora",["srgb"]]]]],[11,"xyz",E,"CIE XYZ.",0,[[[T]],[["srgb"],["colora",["srgb"]]]]],[11,"yxy",E,"CIE Yxy.",0,[[[T]],[["srgb"],["colora",["srgb"]]]]],[11,"lab",E,R[1812],0,[[[T]],[["srgb"],["colora",["srgb"]]]]],[11,"lch",E,R[1813],0,[[["labhue"],[T]],[["srgb"],["colora",["srgb"]]]]],[11,"hsv",E,R[1814],0,[[["rgbhue"],[T]],[["srgb"],["colora",["srgb"]]]]],[11,"hsl",E,R[1815],0,[[["rgbhue"],[T]],[["srgb"],["colora",["srgb"]]]]],[11,"hwb",E,R[1816],0,[[["rgbhue"],[T]],[["srgb"],["colora",["srgb"]]]]],[11,R[1817],E,E,0,[[["m"]],["d"]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[1818],E,E,1,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,1,[[["m"]],["d"]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[1818],E,E,2,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,2,[[["m"]],["d"]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[1818],E,E,3,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,3,[[["m"]],["d"]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[1818],E,E,4,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,4,[[["m"]],["d"]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[1818],E,E,5,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,5,[[["m"]],["d"]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,R[1818],E,E,6,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,6,[[["m"]],["d"]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[1818],E,E,7,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,7,[[["m"]],["d"]]],[11,"into",E,E,7,[[],[U]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,R[1817],E,E,24,[[["m"]],["d"]]],[11,"into",E,E,24,[[],[U]]],[11,R[83],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,R[1817],E,E,25,[[["m"]],["d"]]],[11,"into",E,E,25,[[],[U]]],[11,R[83],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,R[1817],E,E,8,[[["m"]],["d"]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"apply_to",R[1794],E,9,[[[R[1819]]],[R[1819]]]],[11,R[1817],E,E,9,[[["m"]],["d"]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,R[1817],E,E,10,[[["m"]],["d"]]],[11,"into",E,E,10,[[],[U]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,R[1817],E,E,11,[[["m"]],["d"]]],[11,"into",E,E,11,[[],[U]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,R[1817],E,E,12,[[["m"]],["d"]]],[11,"into",E,E,12,[[],[U]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,R[1817],E,E,13,[[["m"]],["d"]]],[11,"into",E,E,13,[[],[U]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,R[1817],R[1820],E,16,[[["m"]],["d"]]],[11,"into",E,E,16,[[],[U]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,R[1817],E,E,47,[[["m"]],["d"]]],[11,"into",E,E,47,[[],[U]]],[11,R[22],E,E,47,[[],["i"]]],[11,R[83],E,E,47,[[["self"]],[T]]],[11,R[84],E,E,47,[[["self"],[T]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,R[1817],E,E,17,[[["m"]],["d"]]],[11,"into",E,E,17,[[],[U]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,R[1817],E,E,48,[[["m"]],["d"]]],[11,"into",E,E,48,[[],[U]]],[11,R[83],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"],[T]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,R[1818],R[1753],E,18,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,18,[[["m"]],["d"]]],[11,"into",E,E,18,[[],[U]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,R[1818],R[1759],E,20,[[["s"],["m"]],["d"]]],[11,R[1817],E,E,20,[[["m"]],["d"]]],[11,"into",E,E,20,[[],[U]]],[11,R[83],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,R[1817],R[1821],E,26,[[["m"]],["d"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,R[1817],E,E,27,[[["m"]],["d"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,R[1817],R[1822],E,49,[[["m"]],["d"]]],[11,"into",E,E,49,[[],[U]]],[11,R[83],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"],[T]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,R[1817],R[1823],E,50,[[["m"]],["d"]]],[11,"into",E,E,50,[[],[U]]],[11,R[83],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"],[T]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,R[1817],E,E,51,[[["m"]],["d"]]],[11,"into",E,E,51,[[],[U]]],[11,R[83],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"],[T]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,R[1817],E,E,52,[[["m"]],["d"]]],[11,"into",E,E,52,[[],[U]]],[11,R[83],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"],[T]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,R[1817],R[1824],E,53,[[["m"]],["d"]]],[11,"into",E,E,53,[[],[U]]],[11,R[83],E,E,53,[[["self"]],[T]]],[11,R[84],E,E,53,[[["self"],[T]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,R[1817],E,E,54,[[["m"]],["d"]]],[11,"into",E,E,54,[[],[U]]],[11,R[83],E,E,54,[[["self"]],[T]]],[11,R[84],E,E,54,[[["self"],[T]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,R[1817],R[1825],E,55,[[["m"]],["d"]]],[11,"into",E,E,55,[[],[U]]],[11,R[83],E,E,55,[[["self"]],[T]]],[11,R[84],E,E,55,[[["self"],[T]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,R[1817],E,E,56,[[["m"]],["d"]]],[11,"into",E,E,56,[[],[U]]],[11,R[83],E,E,56,[[["self"]],[T]]],[11,R[84],E,E,56,[[["self"],[T]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,R[1817],E,E,57,[[["m"]],["d"]]],[11,"into",E,E,57,[[],[U]]],[11,R[83],E,E,57,[[["self"]],[T]]],[11,R[84],E,E,57,[[["self"],[T]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,R[1817],E,E,58,[[["m"]],["d"]]],[11,"into",E,E,58,[[],[U]]],[11,R[83],E,E,58,[[["self"]],[T]]],[11,R[84],E,E,58,[[["self"],[T]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,R[1817],E,E,59,[[["m"]],["d"]]],[11,"into",E,E,59,[[],[U]]],[11,R[83],E,E,59,[[["self"]],[T]]],[11,R[84],E,E,59,[[["self"],[T]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,R[1817],E,E,60,[[["m"]],["d"]]],[11,"into",E,E,60,[[],[U]]],[11,R[83],E,E,60,[[["self"]],[T]]],[11,R[84],E,E,60,[[["self"],[T]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,R[1817],E,E,61,[[["m"]],["d"]]],[11,"into",E,E,61,[[],[U]]],[11,R[83],E,E,61,[[["self"]],[T]]],[11,R[84],E,E,61,[[["self"],[T]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,R[1817],E,E,62,[[["m"]],["d"]]],[11,"into",E,E,62,[[],[U]]],[11,R[83],E,E,62,[[["self"]],[T]]],[11,R[84],E,E,62,[[["self"],[T]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,R[1817],E,E,63,[[["m"]],["d"]]],[11,"into",E,E,63,[[],[U]]],[11,R[83],E,E,63,[[["self"]],[T]]],[11,R[84],E,E,63,[[["self"],[T]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,R[1817],E,E,64,[[["m"]],["d"]]],[11,"into",E,E,64,[[],[U]]],[11,R[83],E,E,64,[[["self"]],[T]]],[11,R[84],E,E,64,[[["self"],[T]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,R[1817],E,E,65,[[["m"]],["d"]]],[11,"into",E,E,65,[[],[U]]],[11,R[83],E,E,65,[[["self"]],[T]]],[11,R[84],E,E,65,[[["self"],[T]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,R[1817],E,E,66,[[["m"]],["d"]]],[11,"into",E,E,66,[[],[U]]],[11,R[83],E,E,66,[[["self"]],[T]]],[11,R[84],E,E,66,[[["self"],[T]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,R[1817],E,E,67,[[["m"]],["d"]]],[11,"into",E,E,67,[[],[U]]],[11,R[83],E,E,67,[[["self"]],[T]]],[11,R[84],E,E,67,[[["self"],[T]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[1817],E,E,68,[[["m"]],["d"]]],[11,"into",E,E,68,[[],[U]]],[11,R[83],E,E,68,[[["self"]],[T]]],[11,R[84],E,E,68,[[["self"],[T]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,R[1817],E,E,69,[[["m"]],["d"]]],[11,"into",E,E,69,[[],[U]]],[11,R[83],E,E,69,[[["self"]],[T]]],[11,R[84],E,E,69,[[["self"],[T]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,R[1790],R[1794],E,11,[[],[R[1819]]]],[11,R[1792],E,E,11,[[[R[1819]]],[R[1819]]]],[11,R[1790],"palette",E,0,[[],[R[1819]]]],[11,R[1792],E,E,0,[[[R[1819]]],["alpha"]]],[11,R[1790],R[1753],E,18,[[],[[R[1819],["luma"]],["luma"]]]],[11,R[1792],E,E,18,[[[R[1819],["luma"]],["luma"]],["self"]]],[11,R[1790],R[1759],E,20,[[],[[R[1819],["rgb"]],["rgb"]]]],[11,R[1792],E,E,20,[[[R[1819],["rgb"]],["rgb"]],["self"]]],[11,R[1790],"palette",E,8,[[],[[R[1819],["rgb"]],["rgb",["linear"]]]]],[11,R[1792],E,E,8,[[[R[1819],["rgb"]],["rgb",["linear"]]],["self"]]],[11,"apply_to",R[1794],E,9,[[[R[1819]]],[R[1819]]]],[11,"red",R[1822],E,49,[[],[["yxy"],[R[1760]],["float"],[R[1748]]]]],[11,"green",E,E,49,[[],[["yxy"],[R[1760]],["float"],[R[1748]]]]],[11,"blue",E,E,49,[[],[["yxy"],[R[1760]],["float"],[R[1748]]]]],[11,R[1826],R[1821],E,27,[[["self"]],[R[1827]]]],[11,R[1829],"palette",E,1,[[["xyz"]],["self"]]],[11,R[1861],E,E,1,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsv",E,E,1,[[[R[1828]],["hsv"]],["self"]]],[11,"from_hsl",E,E,1,[[["hsl"],[R[1828]]],["self"]]],[11,R[1829],E,E,2,[[["xyz"]],["self"]]],[11,R[1861],E,E,2,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsl",E,E,2,[[["hsl"],[R[1828]]],["self"]]],[11,"from_hwb",E,E,2,[[["hwb"],[R[1828]]],["self"]]],[11,"from_hsv",E,E,2,[[[R[1828]],["hsv"]],["self"]]],[11,R[1829],E,E,3,[[["xyz"]],["self"]]],[11,"from_hsv",E,E,3,[[[R[1828]],["hsv"]],["self"]]],[11,"from_hwb",E,E,3,[[["hwb"],[R[1828]]],["self"]]],[11,R[1829],E,E,4,[[["xyz"]],["self"]]],[11,"from_lab",E,E,4,[[["lab"]],["self"]]],[11,"from_lch",E,E,4,[[["lch"]],["self"]]],[11,R[1829],E,E,5,[[["xyz"]],["self"]]],[11,"from_lab",E,E,5,[[["lab"]],["self"]]],[11,"from_lch",E,E,5,[[["lch"]],["self"]]],[11,R[1829],R[1753],E,18,[[["xyz"]],["self"]]],[11,"from_yxy",E,E,18,[[["yxy"]],["self"]]],[11,R[1830],E,E,18,[[["luma",["linear"]],["linear"]],["self"]]],[11,R[1829],R[1759],E,20,[[["xyz"]],["self"]]],[11,"from_hsv",E,E,20,[[["hsv"],[R[1828]]],["self"]]],[11,"from_hsl",E,E,20,[[["hsl"],[R[1828]]],["self"]]],[11,R[1830],E,E,20,[[["luma",["linear"]],["linear"]],["self"]]],[11,R[1861],E,E,20,[[["rgb",["linear"]],["linear"]],["self"]]],[11,R[1829],"palette",E,6,[[["xyz"]],["self"]]],[11,R[1861],E,E,6,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_lab",E,E,6,[[["lab"]],["self"]]],[11,"from_yxy",E,E,6,[[["yxy"]],["self"]]],[11,R[1830],E,E,6,[[["luma",["linear"]],["linear"]],["self"]]],[11,R[1829],E,E,7,[[["xyz"]],["self"]]],[11,"from_yxy",E,E,7,[[["yxy"]],["self"]]],[11,R[1830],E,E,7,[[["luma",["linear"]],["linear"]],["self"]]],[11,R[1832],R[1753],E,18,[[],["xyz"]]],[11,R[1833],E,E,18,[[],["yxy"]]],[11,R[1831],E,E,18,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],R[1759],E,20,[[],["xyz"]]],[11,R[1833],E,E,20,[[],["yxy"]]],[11,R[1834],E,E,20,[[],["lab"]]],[11,R[1835],E,E,20,[[],["lch"]]],[11,R[1836],E,E,20,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,20,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,20,[[],[["hsv"],[R[1828]]]]],[11,"into_hwb",E,E,20,[[],[[R[1828]],["hwb"]]]],[11,R[1831],E,E,20,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],"palette",E,6,[[],["xyz"]]],[11,R[1833],E,E,6,[[],["yxy"]]],[11,R[1834],E,E,6,[[],["lab"]]],[11,R[1835],E,E,6,[[],["lch"]]],[11,R[1836],E,E,6,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,6,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,6,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,6,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],E,E,7,[[],["xyz"]]],[11,R[1833],E,E,7,[[],["yxy"]]],[11,R[1834],E,E,7,[[],["lab"]]],[11,R[1835],E,E,7,[[],["lch"]]],[11,R[1836],E,E,7,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,7,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,7,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,7,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],E,E,4,[[],["xyz"]]],[11,R[1833],E,E,4,[[],["yxy"]]],[11,R[1834],E,E,4,[[],["lab"]]],[11,R[1835],E,E,4,[[],["lch"]]],[11,R[1836],E,E,4,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,4,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,4,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,4,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],E,E,5,[[],["xyz"]]],[11,R[1833],E,E,5,[[],["yxy"]]],[11,R[1834],E,E,5,[[],["lab"]]],[11,R[1835],E,E,5,[[],["lch"]]],[11,R[1836],E,E,5,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,5,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,5,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,5,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],E,E,1,[[],["xyz"]]],[11,R[1833],E,E,1,[[],["yxy"]]],[11,R[1834],E,E,1,[[],["lab"]]],[11,R[1835],E,E,1,[[],["lch"]]],[11,R[1836],E,E,1,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,1,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,1,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,1,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],E,E,2,[[],["xyz"]]],[11,R[1833],E,E,2,[[],["yxy"]]],[11,R[1834],E,E,2,[[],["lab"]]],[11,R[1835],E,E,2,[[],["lch"]]],[11,R[1836],E,E,2,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,2,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,2,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,2,[[],[["luma",["linear"]],["linear"]]]],[11,R[1832],E,E,3,[[],["xyz"]]],[11,R[1833],E,E,3,[[],["yxy"]]],[11,R[1834],E,E,3,[[],["lab"]]],[11,R[1835],E,E,3,[[],["lch"]]],[11,R[1836],E,E,3,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,E,3,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,E,3,[[],[["hsv"],[R[1828]]]]],[11,R[1831],E,E,3,[[],[["luma",["linear"]],["linear"]]]],[11,R[1749],R[1822],E,49,[[["float"]],["float"]]],[11,R[1750],E,E,49,[[["float"]],["float"]]],[11,R[1749],R[1823],E,51,[[["float"]],["float"]]],[11,R[1750],E,E,51,[[["float"]],["float"]]],[11,R[1749],R[1824],E,54,[[["float"]],["float"]]],[11,R[1750],E,E,54,[[["float"]],["float"]]],[11,"get_xyz",R[1825],E,55,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,56,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,57,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,58,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,59,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,60,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,61,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,62,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,63,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,64,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,65,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,66,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,67,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,68,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,"get_xyz",E,E,69,[[],[[R[1760]],["float"],["xyz"],[R[1748]]]]],[11,R[1840],"palette",E,0,[[["self"]],["bool"]]],[11,"clamp",E,E,0,[[["self"]],["alpha"]]],[11,R[1839],E,E,0,[[["self"]]]],[11,R[1840],E,E,1,[[["self"]],["bool"]]],[11,"clamp",E,E,1,[[["self"]],["hsl"]]],[11,R[1839],E,E,1,[[["self"]]]],[11,R[1840],E,E,2,[[["self"]],["bool"]]],[11,"clamp",E,E,2,[[["self"]],["hsv"]]],[11,R[1839],E,E,2,[[["self"]]]],[11,R[1840],E,E,3,[[["self"]],["bool"]]],[11,"clamp",E,E,3,[[["self"]],["hwb"]]],[11,R[1839],E,E,3,[[["self"]]]],[11,R[1840],E,E,4,[[["self"]],["bool"]]],[11,"clamp",E,E,4,[[["self"]],["lab"]]],[11,R[1839],E,E,4,[[["self"]]]],[11,R[1840],E,E,5,[[["self"]],["bool"]]],[11,"clamp",E,E,5,[[["self"]],["lch"]]],[11,R[1839],E,E,5,[[["self"]]]],[11,R[1840],R[1753],E,18,[[["self"]],["bool"]]],[11,"clamp",E,E,18,[[["self"]],["luma"]]],[11,R[1839],E,E,18,[[["self"]]]],[11,R[1840],R[1759],E,20,[[["self"]],["bool"]]],[11,"clamp",E,E,20,[[["self"]],["rgb"]]],[11,R[1839],E,E,20,[[["self"]]]],[11,R[1840],"palette",E,6,[[["self"]],["bool"]]],[11,"clamp",E,E,6,[[["self"]],["xyz"]]],[11,R[1839],E,E,6,[[["self"]]]],[11,R[1840],E,E,7,[[["self"]],["bool"]]],[11,"clamp",E,E,7,[[["self"]],["yxy"]]],[11,R[1839],E,E,7,[[["self"]]]],[11,"mix",R[1794],E,11,[[["self"],[R[1819]]],[R[1819]]]],[11,"mix","palette",E,0,[[["self"],["alpha"]],["alpha"]]],[11,"mix",E,E,1,[[["self"],["hsl"],[T]],["hsl"]]],[11,"mix",E,E,2,[[["self"],[T],["hsv"]],["hsv"]]],[11,"mix",E,E,3,[[["self"],[T],["hwb"]],["hwb"]]],[11,"mix",E,E,4,[[["self"],["lab"],[T]],["lab"]]],[11,"mix",E,E,5,[[["self"],[T],["lch"]],["lch"]]],[11,"mix",R[1753],E,18,[[["self"],["luma"],[T]],["luma"]]],[11,"mix",R[1759],E,20,[[["self"],[T],["rgb"]],["rgb"]]],[11,"mix","palette",E,6,[[["self"],["xyz"],[T]],["xyz"]]],[11,"mix",E,E,7,[[["self"],["yxy"],[T]],["yxy"]]],[11,"mix",E,E,8,[[["self"],["color"],[T]],["color"]]],[11,"lighten",E,E,0,[[["self"]],["alpha"]]],[11,"lighten",E,E,1,[[["self"],[T]],["hsl"]]],[11,"lighten",E,E,2,[[["self"],[T]],["hsv"]]],[11,"lighten",E,E,3,[[["self"],[T]],["hwb"]]],[11,"lighten",E,E,4,[[["self"],[T]],["lab"]]],[11,"lighten",E,E,5,[[["self"],[T]],["lch"]]],[11,"lighten",R[1753],E,18,[[["self"],[T]],["luma"]]],[11,"lighten",R[1759],E,20,[[["self"],[T]],["rgb"]]],[11,"lighten","palette",E,6,[[["self"],[T]],["xyz"]]],[11,"lighten",E,E,7,[[["self"],[T]],["yxy"]]],[11,"lighten",E,E,8,[[["self"],[T]],["color"]]],[11,"get_hue",E,E,0,[[["self"]],[R[24]]]],[11,"get_hue",E,E,1,[[["self"]],[["rgbhue"],[R[24],["rgbhue"]]]]],[11,"get_hue",E,E,2,[[["self"]],[["rgbhue"],[R[24],["rgbhue"]]]]],[11,"get_hue",E,E,3,[[["self"]],[["rgbhue"],[R[24],["rgbhue"]]]]],[11,"get_hue",E,E,4,[[["self"]],[["labhue"],[R[24],["labhue"]]]]],[11,"get_hue",E,E,5,[[["self"]],[["labhue"],[R[24],["labhue"]]]]],[11,"get_hue",R[1759],E,20,[[["self"]],[["rgbhue"],[R[24],["rgbhue"]]]]],[11,"get_hue","palette",E,8,[[["self"]],[["labhue"],[R[24],["labhue"]]]]],[11,R[1842],E,E,0,[[["self"],["into"]],["alpha"]]],[11,R[1841],E,E,0,[[["self"],["into"]],["alpha"]]],[11,R[1842],E,E,1,[[["self"],["into"]],["hsl"]]],[11,R[1841],E,E,1,[[["self"],["into"]],["hsl"]]],[11,R[1842],E,E,2,[[["self"],["into"]],["hsv"]]],[11,R[1841],E,E,2,[[["self"],["into"]],["hsv"]]],[11,R[1842],E,E,3,[[["self"],["into"]],["hwb"]]],[11,R[1841],E,E,3,[[["self"],["into"]],["hwb"]]],[11,R[1842],E,E,5,[[["self"],["into"]],["lch"]]],[11,R[1841],E,E,5,[[["self"],["into"]],["lch"]]],[11,R[1842],E,E,8,[[["self"],["into"]],["color"]]],[11,R[1841],E,E,8,[[["self"],["into"]],["color"]]],[11,"saturate",E,E,0,[[["self"]],["alpha"]]],[11,"saturate",E,E,1,[[["self"],[T]],["hsl"]]],[11,"saturate",E,E,2,[[["self"],[T]],["hsv"]]],[11,"saturate",E,E,5,[[["self"],[T]],["lch"]]],[11,"saturate",E,E,8,[[["self"],[T]],["color"]]],[11,R[1843],R[1794],E,11,[[["self"],[R[1819]],["fnmut"]],[R[1819]]]],[11,R[1844],E,E,11,[[["self"],["fnmut"]],[R[1819]]]],[11,R[1843],"palette",E,0,[[["self"],["alpha"],["fnmut"]],["alpha"]]],[11,R[1844],E,E,0,[[["self"],["fnmut"]],["alpha"]]],[11,R[1843],E,E,4,[[["self"],["lab"],["fnmut"]],["lab"]]],[11,R[1844],E,E,4,[[["self"],["fnmut"]],["lab"]]],[11,R[1843],R[1753],E,18,[[["self"],["luma"],["fnmut"]],["luma"]]],[11,R[1844],E,E,18,[[["self"],["fnmut"]],["luma"]]],[11,R[1843],R[1759],E,20,[[["self"],["fnmut"],["rgb"]],["rgb"]]],[11,R[1844],E,E,20,[[["self"],["fnmut"]],["rgb"]]],[11,R[1843],"palette",E,6,[[["self"],["xyz"],["fnmut"]],["xyz"]]],[11,R[1844],E,E,6,[[["self"],["fnmut"]],["xyz"]]],[11,R[1843],E,E,7,[[["self"],["yxy"],["fnmut"]],["yxy"]]],[11,R[1844],E,E,7,[[["self"],["fnmut"]],["yxy"]]],[11,"as_ref",R[1794],E,11,[[["self"]],["p"]]],[11,"as_ref","palette",E,0,[[["self"]],["p"]]],[11,"as_ref",E,E,1,[[["self"]],["p"]]],[11,"as_ref",E,E,2,[[["self"]],["p"]]],[11,"as_ref",E,E,3,[[["self"]],["p"]]],[11,"as_ref",E,E,4,[[["self"]],["p"]]],[11,"as_ref",E,E,5,[[["self"]],["p"]]],[11,"as_ref",R[1753],R[1845],18,[[["self"]],["p"]]],[11,"as_ref",R[1759],R[1845],20,[[["self"]],["p"]]],[11,"as_ref","palette",E,6,[[["self"]],["p"]]],[11,"as_ref",E,E,7,[[["self"]],["p"]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,2,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,3,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,4,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,5,[[]]],[11,"into",E,E,0,[[]]],[11,"into",R[1753],E,18,[[]]],[11,"into","palette",E,0,[[]]],[11,"into",R[1759],E,20,[[]]],[11,"into","palette",E,0,[[]]],[11,"into",E,E,6,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,7,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,24,[[],["f64"]]],[11,"into",E,E,24,[[],["f32"]]],[11,"into",E,E,24,[[],["f32"]]],[11,"into",E,E,25,[[],["f64"]]],[11,"into",E,E,25,[[],["f32"]]],[11,"into",E,E,25,[[],["f32"]]],[11,R[188],R[1794],E,11,[[],[R[1819]]]],[11,R[188],"palette",E,0,[[],["alpha"]]],[11,R[188],E,E,1,[[],["hsl"]]],[11,R[188],E,E,2,[[],["hsv"]]],[11,R[188],E,E,3,[[],["hwb"]]],[11,R[188],E,E,4,[[],["lab"]]],[11,R[188],E,E,5,[[],["lch"]]],[11,R[188],R[1753],E,18,[[],["luma"]]],[11,R[188],R[1759],E,20,[[],["rgb"]]],[11,R[188],"palette",E,6,[[],["xyz"]]],[11,R[188],E,E,7,[[],["yxy"]]],[11,R[188],E,E,24,[[],["labhue"]]],[11,R[188],E,E,25,[[],["rgbhue"]]],[11,R[188],E,E,8,[[],["color"]]],[11,"as_mut",R[1794],E,11,[[["self"]],["p"]]],[11,"as_mut","palette",E,0,[[["self"]],["p"]]],[11,"as_mut",E,E,1,[[["self"]],["p"]]],[11,"as_mut",E,E,2,[[["self"]],["p"]]],[11,"as_mut",E,E,3,[[["self"]],["p"]]],[11,"as_mut",E,E,4,[[["self"]],["p"]]],[11,"as_mut",E,E,5,[[["self"]],["p"]]],[11,"as_mut",R[1753],R[1845],18,[[["self"]],["p"]]],[11,"as_mut",R[1759],R[1845],20,[[["self"]],["p"]]],[11,"as_mut","palette",E,6,[[["self"]],["p"]]],[11,"as_mut",E,E,7,[[["self"]],["p"]]],[11,"clone",R[1794],E,9,[[["self"]],[R[1846]]]],[11,"clone",E,E,12,[[["self"]],["equation"]]],[11,"clone",E,E,10,[[["self"]],[R[1847]]]],[11,"clone",E,E,13,[[["self"]],[R[134]]]],[11,"clone",E,E,11,[[["self"]],[R[1819]]]],[11,"clone",R[1820],E,16,[[["self"]],["gradient"]]],[11,"clone",E,E,47,[[["self"]],["take"]]],[11,"clone",E,E,17,[[["self"]],["slice"]]],[11,"clone",E,E,48,[[["self"]],["range"]]],[11,"clone","palette",E,0,[[["self"]],["alpha"]]],[11,"clone",E,E,1,[[["self"]],["hsl"]]],[11,"clone",E,E,2,[[["self"]],["hsv"]]],[11,"clone",E,E,3,[[["self"]],["hwb"]]],[11,"clone",E,E,4,[[["self"]],["lab"]]],[11,"clone",E,E,5,[[["self"]],["lch"]]],[11,"clone",R[1753],E,18,[[["self"]],["luma"]]],[11,"clone",R[1759],E,20,[[["self"]],["rgb"]]],[11,"clone","palette",E,6,[[["self"]],["xyz"]]],[11,"clone",E,E,7,[[["self"]],["yxy"]]],[11,"clone",E,E,24,[[["self"]],["labhue"]]],[11,"clone",E,E,25,[[["self"]],["rgbhue"]]],[11,"clone",R[1822],E,49,[[["self"]],["srgb"]]],[11,"clone",R[1823],E,50,[[["self"]],["gamma"]]],[11,"clone",E,E,51,[[["self"]],["gammafn"]]],[11,"clone",E,E,52,[[["self"]],["f2p2"]]],[11,"clone",R[1824],E,53,[[["self"]],["linear"]]],[11,"clone",E,E,54,[[["self"]],["linearfn"]]],[11,"clone",R[1825],E,55,[[["self"]],["a"]]],[11,"clone",E,E,56,[[["self"]],["b"]]],[11,"clone",E,E,57,[[["self"]],["c"]]],[11,"clone",E,E,58,[[["self"]],["d50"]]],[11,"clone",E,E,59,[[["self"]],["d55"]]],[11,"clone",E,E,60,[[["self"]],["d65"]]],[11,"clone",E,E,61,[[["self"]],["d75"]]],[11,"clone",E,E,62,[[["self"]],["e"]]],[11,"clone",E,E,63,[[["self"]],["f2"]]],[11,"clone",E,E,64,[[["self"]],["f7"]]],[11,"clone",E,E,65,[[["self"]],["f11"]]],[11,"clone",E,E,66,[[["self"]],[R[1848]]]],[11,"clone",E,E,67,[[["self"]],[R[1849]]]],[11,"clone",E,E,68,[[["self"]],[R[1850]]]],[11,"clone",E,E,69,[[["self"]],[R[1851]]]],[11,"clone","palette",E,8,[[["self"]],["color"]]],[11,"eq",R[1794],E,9,[[["self"],[R[1846]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1846]]],["bool"]]],[11,"eq",E,E,12,[[["self"],["equation"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1847]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1847]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[134]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[1819]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[1819]]],["bool"]]],[11,"eq",R[1820],E,48,[[["self"],["range"]],["bool"]]],[11,"ne",E,E,48,[[["self"],["range"]],["bool"]]],[11,"eq","palette",E,0,[[["self"],["alpha"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["alpha"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["hsl"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["hsl"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["hsv"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["hsv"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["hwb"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["hwb"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["lab"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["lab"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["lch"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["lch"]],["bool"]]],[11,"eq",R[1753],E,18,[[["self"],["luma"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["luma"]],["bool"]]],[11,"eq",R[1759],E,20,[[["self"],["rgb"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["rgb"]],["bool"]]],[11,"eq","palette",E,6,[[["self"],["xyz"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["xyz"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["yxy"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["yxy"]],["bool"]]],[11,"eq",E,E,24,[[["self"],["labhue"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[T]],["bool"]]],[11,"eq",E,E,25,[[["self"],["rgbhue"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[T]],["bool"]]],[11,"eq",R[1822],E,49,[[["self"],["srgb"]],["bool"]]],[11,"eq",R[1823],E,50,[[["self"],["gamma"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["gamma"]],["bool"]]],[11,"eq",E,E,51,[[["self"],["gammafn"]],["bool"]]],[11,"ne",E,E,51,[[["self"],["gammafn"]],["bool"]]],[11,"eq",E,E,52,[[["self"],["f2p2"]],["bool"]]],[11,"eq",R[1824],E,53,[[["self"],["linear"]],["bool"]]],[11,"ne",E,E,53,[[["self"],["linear"]],["bool"]]],[11,"eq",E,E,54,[[["self"],["linearfn"]],["bool"]]],[11,"eq",R[1825],E,55,[[["self"],["a"]],["bool"]]],[11,"eq",E,E,56,[[["self"],["b"]],["bool"]]],[11,"eq",E,E,57,[[["self"],["c"]],["bool"]]],[11,"eq",E,E,58,[[["self"],["d50"]],["bool"]]],[11,"eq",E,E,59,[[["self"],["d55"]],["bool"]]],[11,"eq",E,E,60,[[["self"],["d65"]],["bool"]]],[11,"eq",E,E,61,[[["self"],["d75"]],["bool"]]],[11,"eq",E,E,62,[[["self"],["e"]],["bool"]]],[11,"eq",E,E,63,[[["self"],["f2"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["f7"]],["bool"]]],[11,"eq",E,E,65,[[["self"],["f11"]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[1848]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[1849]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[1850]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[1851]]],["bool"]]],[11,"from",R[1794],E,11,[[["alpha"]],[R[1819]]]],[11,"from","palette",E,0,[[[R[1819]]],["alpha"]]],[11,"from",R[1820],E,48,[[["range"]],["range"]]],[11,"from",E,E,48,[[["rangefrom"]],["range"]]],[11,"from",E,E,48,[[["rangeto"]],["range"]]],[11,"from",E,E,48,[[["rangefull"]],["range"]]],[11,"from","palette",E,0,[[["c"]],["alpha"]]],[11,"from",E,E,1,[[["rgb"]],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,1,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,1,[[["luma"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,1,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,1,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",E,E,1,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,1,[[["hwb"]],["self"]]],[11,"from",E,E,0,[[["hwb"]],["self"]]],[11,"from",E,E,1,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,1,[[["lab"]],["self"]]],[11,"from",E,E,0,[[["lab"]],["self"]]],[11,"from",E,E,1,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,1,[[["lch"]],["self"]]],[11,"from",E,E,0,[[["lch"]],["self"]]],[11,"from",E,E,1,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",E,E,1,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,1,[[["yxy"]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",E,E,1,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",E,E,0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",E,E,1,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,1,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",E,E,0,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",E,E,1,[[["xyz"]],["self"]]],[11,"from",E,E,1,[[["hsv"]],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,2,[[["rgb"]],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,2,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,2,[[["luma"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,2,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",E,E,2,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,2,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["hwb"]],["self"]]],[11,"from",E,E,2,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,2,[[["lab"]],["self"]]],[11,"from",E,E,0,[[["lab"]],["self"]]],[11,"from",E,E,2,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,2,[[["lch"]],["self"]]],[11,"from",E,E,0,[[["lch"]],["self"]]],[11,"from",E,E,2,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",E,E,2,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,2,[[["yxy"]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",E,E,2,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",E,E,0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",E,E,2,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,2,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",E,E,0,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",E,E,2,[[["xyz"]],["self"]]],[11,"from",E,E,2,[[["hsl"]],["self"]]],[11,"from",E,E,2,[[["hwb"]],["self"]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,3,[[["rgb"]],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,3,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,3,[[["luma"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,3,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,3,[[["hsl"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",E,E,3,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",E,E,3,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,3,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,3,[[["lab"]],["self"]]],[11,"from",E,E,0,[[["lab"]],["self"]]],[11,"from",E,E,3,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,3,[[["lch"]],["self"]]],[11,"from",E,E,0,[[["lch"]],["self"]]],[11,"from",E,E,3,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",E,E,3,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,3,[[["yxy"]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",E,E,3,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",E,E,0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",E,E,3,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,3,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",E,E,0,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",E,E,3,[[["xyz"]],["self"]]],[11,"from",E,E,3,[[["hsv"]],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,4,[[["rgb"]],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,4,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,4,[[["luma"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,4,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,4,[[["hsl"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",E,E,4,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,4,[[["hsv"]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",E,E,4,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,4,[[["hwb"]],["self"]]],[11,"from",E,E,0,[[["hwb"]],["self"]]],[11,"from",E,E,4,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,4,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["lch"]],["self"]]],[11,"from",E,E,4,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",E,E,4,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,4,[[["yxy"]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",E,E,4,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,4,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,4,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,0,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,4,[[["xyz"]],["self"]]],[11,"from",E,E,4,[[["lch"]],["self"]]],[11,"from",E,E,4,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,5,[[["rgb"]],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,5,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,5,[[["luma"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,5,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,5,[[["hsl"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",E,E,5,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,5,[[["hsv"]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",E,E,5,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,5,[[["hwb"]],["self"]]],[11,"from",E,E,0,[[["hwb"]],["self"]]],[11,"from",E,E,5,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["lab"]],["self"]]],[11,"from",E,E,5,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,5,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",E,E,5,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,5,[[["yxy"]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",E,E,5,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,5,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,5,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,0,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,5,[[["xyz"]],["self"]]],[11,"from",E,E,5,[[["lab"]],["self"]]],[11,"from",E,E,5,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",R[1753],E,18,[[["rgb"]],["self"]]],[11,"from","palette",E,0,[[["rgb"]],["self"]]],[11,"from",R[1753],E,18,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",R[1753],E,18,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,18,[[["hsl"]],["self"]]],[11,"from","palette",E,0,[[["hsl"]],["self"]]],[11,"from",R[1753],E,18,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from","palette",E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",R[1753],E,18,[[["hsv"]],["self"]]],[11,"from","palette",E,0,[[["hsv"]],["self"]]],[11,"from",R[1753],E,18,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",R[1753],E,18,[[["hwb"]],["self"]]],[11,"from","palette",E,0,[[["hwb"]],["self"]]],[11,"from",R[1753],E,18,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from","palette",E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",R[1753],E,18,[[["lab"]],["self"]]],[11,"from","palette",E,0,[[["lab"]],["self"]]],[11,"from",R[1753],E,18,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",R[1753],E,18,[[["lch"]],["self"]]],[11,"from","palette",E,0,[[["lch"]],["self"]]],[11,"from",R[1753],E,18,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","palette",E,0,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",R[1753],E,18,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","palette",E,0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",R[1753],E,18,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["yxy"]],["yxy"]],["self"]]],[11,"from",R[1753],E,18,[[["color"]],["self"]]],[11,"from","palette",E,0,[[["color"]],["self"]]],[11,"from",R[1753],E,18,[[["color"],["alpha",["color"]]],["self"]]],[11,"from","palette",E,0,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",R[1753],E,18,[[["xyz"]],["self"]]],[11,"from",E,E,18,[[["yxy"]],["self"]]],[11,"from",E,E,18,[[],["self"]]],[11,"from","palette",E,0,[[],["self"]]],[11,"from",R[1759],E,20,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from","palette",E,0,[[["luma"]],["self"]]],[11,"from",R[1759],E,20,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",R[1759],E,20,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["hsl"]],["hsl"]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",R[1759],E,20,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from","palette",E,0,[[["hsv"],["alpha",["hsv"]]],["self"]]],[11,"from",R[1759],E,20,[[["hwb"]],["self"]]],[11,"from","palette",E,0,[[["hwb"]],["self"]]],[11,"from",R[1759],E,20,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["hwb"]],["hwb"]],["self"]]],[11,"from",R[1759],E,20,[[["lab"]],["self"]]],[11,"from","palette",E,0,[[["lab"]],["self"]]],[11,"from",R[1759],E,20,[[["lab"],["alpha",["lab"]]],["self"]]],[11,"from","palette",E,0,[[["lab"],["alpha",["lab"]]],["self"]]],[11,"from",R[1759],E,20,[[["lch"]],["self"]]],[11,"from","palette",E,0,[[["lch"]],["self"]]],[11,"from",R[1759],E,20,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from","palette",E,0,[[["lch"],["alpha",["lch"]]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",R[1759],E,20,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from","palette",E,0,[[["xyz"],["alpha",["xyz"]]],["self"]]],[11,"from",R[1759],E,20,[[["yxy"]],["self"]]],[11,"from","palette",E,0,[[["yxy"]],["self"]]],[11,"from",R[1759],E,20,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from","palette",E,0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",R[1759],E,20,[[["color"]],["self"]]],[11,"from","palette",E,0,[[["color"]],["self"]]],[11,"from",R[1759],E,20,[[["alpha",["color"]],["color"]],["self"]]],[11,"from","palette",E,0,[[["alpha",["color"]],["color"]],["self"]]],[11,"from",R[1759],E,20,[[["xyz"]],["self"]]],[11,"from",E,E,20,[[["hsl"]],["self"]]],[11,"from",E,E,20,[[["hsv"]],["self"]]],[11,"from",E,E,20,[[["luma"]],["self"]]],[11,"from",E,E,20,[[],["self"]]],[11,"from","palette",E,0,[[],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,6,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,6,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,6,[[["hsl"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",E,E,6,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,6,[[["hsv"]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",E,E,6,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,6,[[["hwb"]],["self"]]],[11,"from",E,E,0,[[["hwb"]],["self"]]],[11,"from",E,E,6,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["lab"]],["self"]]],[11,"from",E,E,6,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,6,[[["lch"]],["self"]]],[11,"from",E,E,0,[[["lch"]],["self"]]],[11,"from",E,E,6,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,6,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,0,[[["yxy"]],["self"]]],[11,"from",E,E,6,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,0,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,6,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,6,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,0,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,6,[[["rgb"]],["self"]]],[11,"from",E,E,6,[[["yxy"]],["self"]]],[11,"from",E,E,6,[[["lab"]],["self"]]],[11,"from",E,E,6,[[["luma"]],["self"]]],[11,"from",E,E,6,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,7,[[["rgb"]],["self"]]],[11,"from",E,E,0,[[["rgb"]],["self"]]],[11,"from",E,E,7,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"from",E,E,0,[[["luma"]],["self"]]],[11,"from",E,E,7,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"from",E,E,7,[[["hsl"]],["self"]]],[11,"from",E,E,0,[[["hsl"]],["self"]]],[11,"from",E,E,7,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,0,[[["hsl"],["alpha",["hsl"]]],["self"]]],[11,"from",E,E,7,[[["hsv"]],["self"]]],[11,"from",E,E,0,[[["hsv"]],["self"]]],[11,"from",E,E,7,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],["self"]]],[11,"from",E,E,7,[[["hwb"]],["self"]]],[11,"from",E,E,0,[[["hwb"]],["self"]]],[11,"from",E,E,7,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,0,[[["hwb"],["alpha",["hwb"]]],["self"]]],[11,"from",E,E,7,[[["lab"]],["self"]]],[11,"from",E,E,0,[[["lab"]],["self"]]],[11,"from",E,E,7,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],["self"]]],[11,"from",E,E,7,[[["lch"]],["self"]]],[11,"from",E,E,0,[[["lch"]],["self"]]],[11,"from",E,E,7,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],["self"]]],[11,"from",E,E,0,[[["xyz"]],["self"]]],[11,"from",E,E,7,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,0,[[["alpha",["xyz"]],["xyz"]],["self"]]],[11,"from",E,E,7,[[["yxy"],["alpha",["yxy"]]],["self"]]],[11,"from",E,E,7,[[["color"]],["self"]]],[11,"from",E,E,0,[[["color"]],["self"]]],[11,"from",E,E,7,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,0,[[["color"],["alpha",["color"]]],["self"]]],[11,"from",E,E,7,[[["xyz"]],["self"]]],[11,"from",E,E,7,[[["luma"]],["self"]]],[11,"from",E,E,7,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,24,[[[T]],["labhue"]]],[11,"from",E,E,25,[[[T]],["rgbhue"]]],[11,"from",E,E,8,[[["luma",["linear"]],["linear"]],["color"]]],[11,"from",E,E,8,[[["alpha",["luma"]],["luma",["linear"]]],["color"]]],[11,"from",E,E,0,[[["alpha",["luma"]],["luma",["linear"]]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["rgb",["linear"]],["linear"]],["color"]]],[11,"from",E,E,8,[[["alpha",["rgb"]],["rgb",["linear"]]],["color"]]],[11,"from",E,E,0,[[["alpha",["rgb"]],["rgb",["linear"]]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["xyz"]],["color"]]],[11,"from",E,E,8,[[["xyz"],["alpha",["xyz"]]],["color"]]],[11,"from",E,E,0,[[["xyz"],["alpha",["xyz"]]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["yxy"]],["color"]]],[11,"from",E,E,8,[[["yxy"],["alpha",["yxy"]]],["color"]]],[11,"from",E,E,0,[[["yxy"],["alpha",["yxy"]]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["lab"]],["color"]]],[11,"from",E,E,8,[[["alpha",["lab"]],["lab"]],["color"]]],[11,"from",E,E,0,[[["alpha",["lab"]],["lab"]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["lch"]],["color"]]],[11,"from",E,E,8,[[["alpha",["lch"]],["lch"]],["color"]]],[11,"from",E,E,0,[[["alpha",["lch"]],["lch"]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["hsv"]],["color"]]],[11,"from",E,E,8,[[["alpha",["hsv"]],["hsv"]],["color"]]],[11,"from",E,E,0,[[["alpha",["hsv"]],["hsv"]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["hsl"]],["color"]]],[11,"from",E,E,8,[[["alpha",["hsl"]],["hsl"]],["color"]]],[11,"from",E,E,0,[[["alpha",["hsl"]],["hsl"]],[["alpha",["color"]],["color"]]]],[11,"from",E,E,8,[[["hwb"]],["color"]]],[11,"from",E,E,8,[[["alpha",["hwb"]],["hwb"]],["color"]]],[11,"from",E,E,0,[[["alpha",["hwb"]],["hwb"]],[["alpha",["color"]],["color"]]]],[11,"next",R[1820],E,47,[[["self"]],[R[24]]]],[11,R[154],E,E,47,[[["self"]]]],[11,R[13],R[1794],E,11,[[["self"]],["c"]]],[11,R[13],"palette",E,0,[[["self"]],["c"]]],[11,"add",R[1794],E,11,[[[R[1819]]],[R[1819]]]],[11,"add",E,E,11,[[[T]],[R[1819]]]],[11,"add","palette",E,0,[[["alpha"]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,1,[[["hsl"]],["hsl"]]],[11,"add",E,E,1,[[[T]],["hsl"]]],[11,"add",E,E,2,[[["hsv"]],["hsv"]]],[11,"add",E,E,2,[[[T]],["hsv"]]],[11,"add",E,E,3,[[["hwb"]],["hwb"]]],[11,"add",E,E,3,[[[T]],["hwb"]]],[11,"add",E,E,4,[[["lab"]],["lab"]]],[11,"add",E,E,4,[[[T]],["lab"]]],[11,"add",E,E,5,[[["lch"]],["lch"]]],[11,"add",E,E,5,[[[T]],["lch"]]],[11,"add",R[1753],E,18,[[["luma"]]]],[11,"add",E,E,18,[[[T]]]],[11,"add",R[1759],E,20,[[["rgb"]]]],[11,"add",E,E,20,[[[T]]]],[11,"add","palette",E,6,[[["xyz"]],["xyz"]]],[11,"add",E,E,6,[[[T]],["xyz"]]],[11,"add",E,E,7,[[["yxy"]],["yxy"]]],[11,"add",E,E,7,[[[T]],["yxy"]]],[11,"add",E,E,24,[[["labhue"]],["labhue"]]],[11,"add",E,E,24,[[[T]],["labhue"]]],[11,"add",E,E,25,[[["rgbhue"]],["rgbhue"]]],[11,"add",E,E,25,[[[T]],["rgbhue"]]],[11,"sub",R[1794],E,11,[[[R[1819]]],[R[1819]]]],[11,"sub",E,E,11,[[[T]],[R[1819]]]],[11,"sub","palette",E,0,[[["alpha"]]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,1,[[["hsl"]],["hsl"]]],[11,"sub",E,E,1,[[[T]],["hsl"]]],[11,"sub",E,E,2,[[["hsv"]],["hsv"]]],[11,"sub",E,E,2,[[[T]],["hsv"]]],[11,"sub",E,E,3,[[["hwb"]],["hwb"]]],[11,"sub",E,E,3,[[[T]],["hwb"]]],[11,"sub",E,E,4,[[["lab"]],["lab"]]],[11,"sub",E,E,4,[[[T]],["lab"]]],[11,"sub",E,E,5,[[["lch"]],["lch"]]],[11,"sub",E,E,5,[[[T]],["lch"]]],[11,"sub",R[1753],E,18,[[["luma"]]]],[11,"sub",E,E,18,[[[T]]]],[11,"sub",R[1759],E,20,[[["rgb"]]]],[11,"sub",E,E,20,[[[T]]]],[11,"sub","palette",E,6,[[["xyz"]],["xyz"]]],[11,"sub",E,E,6,[[[T]],["xyz"]]],[11,"sub",E,E,7,[[["yxy"]],["yxy"]]],[11,"sub",E,E,7,[[[T]],["yxy"]]],[11,"sub",E,E,24,[[["labhue"]],["labhue"]]],[11,"sub",E,E,24,[[[T]],["labhue"]]],[11,"sub",E,E,25,[[["rgbhue"]],["rgbhue"]]],[11,"sub",E,E,25,[[[T]],["rgbhue"]]],[11,"mul",R[1794],E,11,[[[R[1819]]],[R[1819]]]],[11,"mul",E,E,11,[[[T]],[R[1819]]]],[11,"mul","palette",E,0,[[["alpha"]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,4,[[["lab"]],["lab"]]],[11,"mul",E,E,4,[[[T]],["lab"]]],[11,"mul",R[1753],E,18,[[["luma"]]]],[11,"mul",E,E,18,[[[T]]]],[11,"mul",R[1759],E,20,[[["rgb"]]]],[11,"mul",E,E,20,[[[T]]]],[11,"mul","palette",E,6,[[["xyz"]],["xyz"]]],[11,"mul",E,E,6,[[[T]],["xyz"]]],[11,"mul",E,E,7,[[["yxy"]],["yxy"]]],[11,"mul",E,E,7,[[[T]],["yxy"]]],[11,"div",R[1794],E,11,[[[R[1819]]],[R[1819]]]],[11,"div",E,E,11,[[[T]],[R[1819]]]],[11,"div","palette",E,0,[[["alpha"]]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,4,[[["lab"]],["lab"]]],[11,"div",E,E,4,[[[T]],["lab"]]],[11,"div",R[1753],E,18,[[["luma"]]]],[11,"div",E,E,18,[[[T]]]],[11,"div",R[1759],E,20,[[["rgb"]]]],[11,"div",E,E,20,[[[T]]]],[11,"div","palette",E,6,[[["xyz"]],["xyz"]]],[11,"div",E,E,6,[[[T]],["xyz"]]],[11,"div",E,E,7,[[["yxy"]],["yxy"]]],[11,"div",E,E,7,[[[T]],["yxy"]]],[11,"deref",R[1794],E,11,[[["self"]],["c"]]],[11,"deref","palette",E,0,[[["self"]],["c"]]],[11,"fmt",R[1794],E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1820],E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","palette",E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1753],E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1759],E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","palette",E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1822],E,49,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1823],E,50,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,51,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,52,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1824],E,53,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1825],E,55,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,56,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,57,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,58,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,59,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,60,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,61,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,62,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,63,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,64,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,65,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,66,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,67,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,68,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,69,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","palette",E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1753],E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1759],E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","palette",E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1753],E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1759],E,20,[[["self"],[R[14]]],[R[2]]]],[11,R[1852],R[1794],E,11,[[]]],[11,R[1853],E,E,11,[[]]],[11,R[1854],E,E,11,[[],["u32"]]],[11,R[56],E,E,11,[[["self"],[R[1819]]],["bool"]]],[11,"ulps_eq",E,E,11,[[["self"],["u32"],[R[1819]]],["bool"]]],[11,R[1852],R[1820],E,48,[[]]],[11,R[1853],E,E,48,[[]]],[11,R[1854],E,E,48,[[],["u32"]]],[11,R[56],E,E,48,[[["self"],["range"]],["bool"]]],[11,"ulps_eq",E,E,48,[[["self"],["range"],["u32"]],["bool"]]],[11,R[1852],"palette",E,0,[[]]],[11,R[1853],E,E,0,[[]]],[11,R[1854],E,E,0,[[],["u32"]]],[11,R[56],E,E,0,[[["self"],["alpha"]],["bool"]]],[11,"ulps_eq",E,E,0,[[["self"],["u32"],["alpha"]],["bool"]]],[11,R[1852],E,E,1,[[]]],[11,R[1853],E,E,1,[[]]],[11,R[1854],E,E,1,[[],["u32"]]],[11,R[56],E,E,1,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,1,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,2,[[]]],[11,R[1853],E,E,2,[[]]],[11,R[1854],E,E,2,[[],["u32"]]],[11,R[56],E,E,2,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,2,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,3,[[]]],[11,R[1853],E,E,3,[[]]],[11,R[1854],E,E,3,[[],["u32"]]],[11,R[56],E,E,3,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,3,[[["self"],["u32"]],["bool"]]],[11,R[1852],R[1753],E,18,[[]]],[11,R[1853],E,E,18,[[]]],[11,R[1854],E,E,18,[[],["u32"]]],[11,R[56],E,E,18,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,18,[[["self"],["u32"]],["bool"]]],[11,R[1852],R[1759],E,20,[[]]],[11,R[1853],E,E,20,[[]]],[11,R[1854],E,E,20,[[],["u32"]]],[11,R[56],E,E,20,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,20,[[["self"],["u32"]],["bool"]]],[11,R[1852],"palette",E,6,[[]]],[11,R[1853],E,E,6,[[]]],[11,R[1854],E,E,6,[[],["u32"]]],[11,R[56],E,E,6,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,6,[[["self"],["u32"]],["bool"]]],[11,R[57],E,E,6,[[["self"]],["bool"]]],[11,"ulps_ne",E,E,6,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,7,[[]]],[11,R[1853],E,E,7,[[]]],[11,R[1854],E,E,7,[[],["u32"]]],[11,R[56],E,E,7,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,7,[[["self"],["u32"]],["bool"]]],[11,R[57],E,E,7,[[["self"]],["bool"]]],[11,"ulps_ne",E,E,7,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,4,[[]]],[11,R[1853],E,E,4,[[]]],[11,R[1854],E,E,4,[[],["u32"]]],[11,R[56],E,E,4,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,4,[[["self"],["u32"]],["bool"]]],[11,R[57],E,E,4,[[["self"]],["bool"]]],[11,"ulps_ne",E,E,4,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,5,[[]]],[11,R[1853],E,E,5,[[]]],[11,R[1854],E,E,5,[[],["u32"]]],[11,R[56],E,E,5,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,5,[[["self"],["u32"]],["bool"]]],[11,R[57],E,E,5,[[["self"]],["bool"]]],[11,"ulps_ne",E,E,5,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,24,[[]]],[11,R[1853],E,E,24,[[]]],[11,R[1854],E,E,24,[[],["u32"]]],[11,R[56],E,E,24,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,24,[[["self"],["u32"]],["bool"]]],[11,R[57],E,E,24,[[["self"]],["bool"]]],[11,"ulps_ne",E,E,24,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,25,[[]]],[11,R[1853],E,E,25,[[]]],[11,R[1854],E,E,25,[[],["u32"]]],[11,R[56],E,E,25,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,25,[[["self"],["u32"]],["bool"]]],[11,R[57],E,E,25,[[["self"]],["bool"]]],[11,"ulps_ne",E,E,25,[[["self"],["u32"]],["bool"]]],[11,R[1852],E,E,8,[[]]],[11,R[1853],E,E,8,[[]]],[11,R[1854],E,E,8,[[],["u32"]]],[11,R[56],E,E,8,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,8,[[["self"],["u32"]],["bool"]]],[11,"blend",R[1794],R[1795],14,[[["f"]],["self"]]],[11,"over",E,R[1796],14,[[],["self"]]],[11,"inside",E,R[1797],14,[[],["self"]]],[11,"outside",E,R[1798],14,[[],["self"]]],[11,"atop",E,R[1799],14,[[],["self"]]],[11,"xor",E,R[1800],14,[[],["self"]]],[11,"plus",E,R[1801],14,[[],["self"]]],[11,"multiply",E,R[1802],14,[[],["self"]]],[11,"screen",E,R[1803],14,[[],["self"]]],[11,"overlay",E,R[1740],14,[[],["self"]]],[11,"darken",E,R[1804],14,[[],["self"]]],[11,"lighten",E,R[1805],14,[[],["self"]]],[11,"dodge",E,R[1806],14,[[],["self"]]],[11,"burn",E,R[1807],14,[[],["self"]]],[11,R[1855],E,R[1740],14,[[],["self"]]],[11,R[1856],E,R[1808],14,[[],["self"]]],[11,R[1857],E,R[1809],14,[[],["self"]]],[11,"exclusion",E,R[1810],14,[[],["self"]]],[11,"from_yxy","palette",R[1858],37,[[["yxy"]],["self"]]],[11,"from_lab",E,R[1859],37,[[["lab"]],["self"]]],[11,"from_lch",E,R[1860],37,[[["lch"]],["self"]]],[11,R[1861],E,R[1862],37,[[["rgb",["linear"]],["linear"]],["self"]]],[11,"from_hsl",E,R[1863],37,[[["hsl"],[R[1828]]],["self"]]],[11,"from_hsv",E,R[1864],37,[[["hsv"],[R[1828]]],["self"]]],[11,"from_hwb",E,R[1865],37,[[["hwb"],[R[1828]]],["self"]]],[11,R[1830],E,R[1866],37,[[["luma",["linear"]],["linear"]],["self"]]],[11,R[1833],E,R[1867],38,[[],["yxy"]]],[11,R[1834],E,R[1868],38,[[],["lab"]]],[11,R[1835],E,R[1869],38,[[],["lch"]]],[11,R[1836],E,R[1870],38,[[],[["rgb",["linear"]],["linear"]]]],[11,R[1837],E,R[1871],38,[[],[["hsl"],[R[1828]]]]],[11,R[1838],E,R[1872],38,[[],[["hsv"],[R[1828]]]]],[11,"into_hwb",E,R[1873],38,[[],[["hwb"],[R[1828]]]]],[11,R[1831],E,R[1874],38,[[],[["luma",["linear"]],["linear"]]]],[18,"CHANNELS",R[1875],R[1876],32,N]],"p":[[3,"Alpha"],[3,"Hsl"],[3,"Hsv"],[3,"Hwb"],[3,"Lab"],[3,"Lch"],[3,"Xyz"],[3,"Yxy"],[4,"Color"],[3,"Equations"],[3,R[99]],[3,"PreAlpha"],[4,"Equation"],[4,R[143]],[8,"Blend"],[8,R[1877]],[3,"Gradient"],[3,"Slice"],[3,"Luma"],[8,R[1878]],[3,"Rgb"],[8,R[1879]],[8,"RgbSpace"],[8,"Primaries"],[3,"LabHue"],[3,"RgbHue"],[3,R[1880]],[4,"Method"],[8,R[1881]],[8,"AdaptFrom"],[8,"AdaptInto"],[8,"Number"],[8,R[1882]],[8,"RawPixel"],[8,"Pixel"],[8,R[1782]],[8,R[1787]],[8,"FromColor"],[8,"IntoColor"],[8,"Limited"],[8,"Mix"],[8,"Shade"],[8,"GetHue"],[8,"Hue"],[8,"Saturate"],[8,R[1883]],[8,"Component"],[3,"Take"],[3,"Range"],[3,"Srgb"],[3,"Gamma"],[3,"GammaFn"],[3,"F2p2"],[3,"Linear"],[3,"LinearFn"],[3,"A"],[3,"B"],[3,"C"],[3,"D50"],[3,"D55"],[3,"D65"],[3,"D75"],[3,"E"],[3,"F2"],[3,"F7"],[3,"F11"],[3,R[1884]],[3,R[1885]],[3,R[1886]],[3,R[1887]]]};
searchIndex["palette_derive"]={"doc":"Derives traits from the palette crate.","i":[[24,"FromColor","palette_derive",E,N,N],[24,"IntoColor",E,E,N,N],[24,"Pixel",E,E,N,N]],"p":[]};
searchIndex["plotters"]={"doc":"Plotters - Rust Drawing Library for Visualization  🦀 📈🚀","i":[[0,"chart",R[2156],"The high-level plotting abstractions.",N,N],[3,R[2157],R[2241],R[2158],N,N],[3,R[2159],E,R[2160],N,N],[3,"SeriesAnno",E,"The annotations (such as the label of the series, the…",N,N],[3,R[2258],E,"The chart context that has two coordinate system attached",N,N],[3,"MeshStyle",E,"The struct that is used for tracking the configuration of…",N,N],[3,R[2259],E,"The struct to sepcify the series label of a target chart…",N,N],[4,R[2205],E,R[2206],N,N],[13,"Top",E,E,0,N],[13,"Bottom",E,E,0,N],[13,"Left",E,E,0,N],[13,"Right",E,E,0,N],[4,R[2207],E,E,N,N],[13,"UpperLeft",E,E,1,N],[13,"MiddleLeft",E,E,1,N],[13,"LowerLeft",E,E,1,N],[13,R[2208],E,E,1,N],[13,R[2209],E,E,1,N],[13,R[2210],E,E,1,N],[13,"UpperRight",E,E,1,N],[13,R[2211],E,E,1,N],[13,"LowerRight",E,E,1,N],[13,"Coordinate",E,E,1,N],[11,"on",E,"Create a chart builder on the given drawing area - `root`:…",2,[[[R[2121]]],["self"]]],[11,"margin",E,"Set the margin size of the chart - `size`: The size of the…",2,[[["self"],["u32"]],["self"]]],[11,"x_label_area_size",E,"Set the size of X label area - `size`: The height of the x…",2,[[["self"],["u32"]],["self"]]],[11,"y_label_area_size",E,"Set the size of the Y label area - `size`: The width of…",2,[[["self"],["u32"]],["self"]]],[11,"top_x_label_area_size",E,"Set the size of X label area on the top of the chart -…",2,[[["self"],["u32"]],["self"]]],[11,"right_y_label_area_size",E,"Set the size of the Y label area on the right side -…",2,[[["self"],["u32"]],["self"]]],[11,"set_label_area_size",E,"Set a label area size - `pos`: THe position where the…",2,[[["self"],["u32"],["labelareaposition"]],["self"]]],[11,"caption",E,"Set the caption of the chart - `caption`: The caption of…",2,[[["self"],[R[2126]],["str"],["into",[R[2126]]],["asref",["str"]]],["self"]]],[11,"build_ranged",E,"Build the chart with a 2D Cartesian coordinate system. The…",2,[[["self"],[R[2122]]],[[R[2119]],[R[2],[R[2120],R[2119]]],[R[2120],[R[2123]]]]]],[11,"label",E,"Set the series label `label`: The string would be use as…",3,[[["self"],[R[81]],["into",[R[81]]]],["self"]]],[11,"legend",E,"Set the legend element creator function - `func`: The…",3,[[["self"],["fn"]],["self"]]],[11,"configure_mesh",E,"Initialize a mesh configuration object and mesh drawing…",4,[[["self"]],["meshstyle"]]],[11,"configure_series_labels",E,"Configure the styles for drawing series labels in the chart",4,[[["self"]],["serieslabelstyle"]]],[11,"plotting_area",E,"Get a reference of underlying plotting area",4,[[["self"]],[R[2121]]]],[11,"into_coord_trans",E,"Convert the chart context into an closure that can be used…",4,[[]]],[11,"x_range",E,R[2128],4,[[["self"]],["range"]]],[11,"y_range",E,"Get range of the Y axis",4,[[["self"]],["range"]]],[11,"backend_coord",E,"Maps the coordinate to the backend coordinate. This is…",4,[[["self"]],[R[2130]]]],[11,"draw_series",E,"Draw a data series. A data series in Plotters is…",4,[[["self"],["s"]],[[R[2124]],[R[2119]],[R[2],[R[2124],R[2119]]]]]],[11,"set_secondary_coord",E,"Attach a secondary coord to the chart",4,[[[R[2122]]],[["dualcoordchartcontext",[R[2123],R[2123]]],[R[2123]],[R[2123]]]]],[11,"secondary_plotting_area",E,"Get a reference to the drawing area that uses the…",5,[[["self"]],[R[2121]]]],[11,"borrow_secondary",E,E,5,[[["self"]],[R[2120]]]],[11,"into_secondary_coord_trans",E,"Convert the chart context into the secondary coodindate…",5,[[]]],[11,"into_coord_trans_pair",E,"Convert the chart context into a pair of closures that…",5,[[]]],[11,"configure_secondary_axes",E,"Start configure the style for the secondary axes",5,[[["self"]],["secondarymeshstyle"]]],[11,"draw_secondary_series",E,"Draw a series use the secondary coordinate system -…",5,[[["self"],["s"]],[[R[2124]],[R[2119]],[R[2],[R[2124],R[2119]]]]]],[11,"x_label_offset",E,"The offset of x labels. This is used when we want to place…",6,[[["self"],["i32"]],["self"]]],[11,"y_label_offset",E,"The offset of y labels. This is used when we want to place…",6,[[["self"],["i32"]],["self"]]],[11,"disable_x_mesh",E,"Disable the mesh for the x axis.",6,[[["self"]],["self"]]],[11,"disable_y_mesh",E,"Disable the mesh for the y axis",6,[[["self"]],["self"]]],[11,"disable_x_axis",E,"Disable drawing the X axis",6,[[["self"]],["self"]]],[11,"disable_y_axis",E,"Disable drawing the Y axis",6,[[["self"]],["self"]]],[11,"axis_style",E,"Set the style definition for the axis - `style`: The style…",6,[[["self"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"x_labels",E,"Set how many labels for the X axis at most - `value`: The…",6,[[["self"],["usize"]],["self"]]],[11,"y_labels",E,"Set how many label for the Y axis at most - `value`: The…",6,[[["self"],["usize"]],["self"]]],[11,"line_style_1",E,"Set the style for the coarse grind grid - `style`: This is…",6,[[["self"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"line_style_2",E,"Set the style for the fine grind grid - `style`: The fine…",6,[[["self"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"label_style",E,"Set the style of the label text - `style`: The text style…",6,[[["self"],["into",[R[2126]]],[R[2126]]],["self"]]],[11,"x_label_formatter",E,"Set the formatter function for the X label text - `fmt`:…",6,[[["self"],["fn"]],["self"]]],[11,"y_label_formatter",E,"Set the formatter function for the Y label text - `fmt`:…",6,[[["self"],["fn"]],["self"]]],[11,"axis_desc_style",E,"Set the axis description's style. If not given, use label…",6,[[["self"],["into",[R[2126]]],[R[2126]]],["self"]]],[11,"x_desc",E,"Set the X axis's description - `desc`: The description of…",6,[[["self"],[R[81]],["into",[R[81]]]],["self"]]],[11,"y_desc",E,"Set the Y axis's description - `desc`: The description of…",6,[[["self"],[R[81]],["into",[R[81]]]],["self"]]],[11,"draw",E,"Draw the configured mesh on the target plot",6,[[["self"]],[[R[2],[R[2119]]],[R[2119]]]]],[11,R[91],E,"Set the series label positioning style `pos` - The…",7,[[["self"],["serieslabelposition"]],["self"]]],[11,"margin",E,E,7,[[["self"],["u32"]],["self"]]],[11,"legend_area_size",E,"Set the size of legend area `size` - The size of legend…",7,[[["self"],["u32"]],["self"]]],[11,"border_style",E,"Set the style of the label series area `style` - The style…",7,[[["self"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"background_style",E,"Set the background style `style` - The style of the border",7,[[["self"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"label_font",E,"Set the series label font `font` - The font",7,[[["self"],["into",[R[2126]]],[R[2126]]],["self"]]],[11,"draw",E,"Draw the series label area",7,[[["self"]],[[R[2],[R[2119]]],[R[2119]]]]],[0,"coord",R[2156],"Coordinate system abstractions.",N,N],[3,R[2276],R[2217],R[2177],N,N],[3,R[2178],E,R[2179],N,N],[3,R[2165],E,R[2166],N,N],[3,R[2167],E,R[2168],N,N],[3,R[2169],E,R[2170],N,N],[3,R[2171],E,R[2172],N,N],[3,R[2173],E,R[2174],N,N],[3,R[2175],E,R[2176],N,N],[3,R[2163],E,R[2164],N,N],[3,"LogCoord",E,R[2161],N,N],[3,"LogRange",E,R[2162],N,N],[12,"0",E,E,8,N],[3,"Shift",E,"The coordinate translation that only impose shift",N,N],[12,"0",E,E,9,N],[3,R[2277],E,"We can compose an abitray transformation with a shift",N,N],[4,"MeshLine",E,"Represent a coordinate mesh for the two ranged value…",N,N],[13,"XMesh",E,E,10,N],[13,"YMesh",E,E,10,N],[5,R[2214],E,E,N,[[["range"],["f64"],["range",["f64"]]],[[R[2127]],[R[24],[R[2127]]]]]],[11,"new",E,"Create a new ranged value coordinate system",11,[[["into"],["into"]],["self"]]],[11,"draw_mesh",E,"Draw the mesh for the coordinate system",11,[[["self"],["fnmut"],["usize"]],[R[2]]]],[11,R[2131],E,R[2128],11,[[["self"]],["range"]]],[11,R[2132],E,"Get the range of Y axis",11,[[["self"]],["range"]]],[11,R[2133],E,E,11,[[["self"]],[["range",["i32"]],["i32"]]]],[11,R[2134],E,E,11,[[["self"]],[["range",["i32"]],["i32"]]]],[11,"draw",E,"Draw a single mesh line onto the backend",10,[[["self"],[R[2125]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[8,R[2260],E,"The trait for the type that can be converted into a ranged…",N,N],[16,"CoordDescType",E,E,12,N],[16,"Value",E,E,12,N],[8,R[2261],E,"The trait indicates the coordinate is descrete, so that we…",N,N],[10,R[2249],E,"Get the smallest value that is larger than the `this` value",13,[[]]],[10,R[2248],E,"Get the largest value that is smaller than `this` value",13,[[]]],[8,R[2215],E,E,N,N],[11,R[2216],E,E,14,[[],[R[2218]]]],[8,R[2219],E,E,N,N],[11,R[2221],E,E,15,[[["range"]],[R[2127]]]],[8,"Ranged",E,R[2226],N,N],[16,"ValueType",E,R[2227],16,N],[10,"map",E,R[2228],16,[[["self"]],["i32"]]],[10,R[2247],E,R[2229],16,[[["self"],["usize"]],["vec"]]],[10,"range",E,R[2230],16,[[["self"]],["range"]]],[11,R[2231],E,R[2232],16,[[["self"]],[["range",["i32"]],["i32"]]]],[8,R[2262],E,"The trait indicates the ranged value can be map reversely,…",N,N],[10,"unmap",E,E,17,[[["self"],["i32"]],[R[24]]]],[8,R[2222],E,R[2223],N,N],[10,"as_f64",E,R[2224],18,[[["self"]],["f64"]]],[10,R[1050],E,R[2225],18,[[["f64"]],["self"]]],[8,R[2263],E,"The trait that translates some customized object to the…",N,N],[16,"From",E,E,19,N],[10,R[2250],E,"Translate the guest coordinate to the guest coordinate",19,[[["self"]],[R[2130]]]],[8,R[2264],E,"The trait indicates that the coordinate system supports…",N,N],[10,R[2251],E,"Reverse translate the coordinate from the drawing…",20,[[["self"],[R[2130]]],[R[24]]]],[0,"data",R[2156],"The data processing module, which implmements algorithm…",N,N],[0,"drawing",E,"The drawing utils for Plotter. Which handles the both…",N,N],[3,R[2266],R[2137],"The abstraction of a region",N,N],[3,"SVGBackend",E,"The SVG image drawing backend",N,N],[3,R[2267],E,"The backend that drawing a bitmap",N,N],[4,R[2265],E,"The error description of any drawing area API",N,N],[13,"BackendError",E,"The error is due to drawing backend failure",21,N],[13,"SharingError",E,"We are not able to get the mutable reference of the…",21,N],[13,"LayoutError",E,"The error caused by invalid layout",21,N],[11,"draw_mesh",E,"Draw the mesh on a area",22,[[["self"],["drawfunc"],["usize"]],[[R[2],[R[2119]]],[R[2119]]]]],[11,R[2131],E,"Get the range of X of the guest coordinate for current…",22,[[["self"]],["range"]]],[11,R[2132],E,"Get the range of Y of the guest coordinate for current…",22,[[["self"]],["range"]]],[11,R[2133],E,E,22,[[["self"]],[["range",["i32"]],["i32"]]]],[11,R[2134],E,E,22,[[["self"]],[["range",["i32"]],["i32"]]]],[11,"get_base_pixel",E,"Get the left upper conner of this area in the drawing…",22,[[["self"]],[R[2130]]]],[11,"strip_coord_spec",E,"Strip the applied coordinate specification and returns a…",22,[[["self"]],[["shift"],[R[2121],["shift"]]]]],[11,"dim_in_pixel",E,"Get the area dimension in pixel",22,[[["self"]]]],[11,"relative_to_height",E,"Compute the relative size based on the drawing area's height",22,[[["self"],["f64"]],["f64"]]],[11,"relative_to_width",E,"Compute the relative size based on the drawing area's width",22,[[["self"],["f64"]],["f64"]]],[11,"get_pixel_range",E,"Get the pixel range of this area",22,[[["self"]]]],[11,"fill",E,"Fill the entire drawing area with a color",22,[[["self"],[R[1564]]],[[R[2],[R[2119]]],[R[2119]]]]],[11,R[2253],E,"Draw a single pixel",22,[[["self"],[R[1564]]],[[R[2],[R[2119]]],[R[2119]]]]],[11,"present",E,"Present all the pending changes to the backend",22,[[["self"]],[[R[2],[R[2119]]],[R[2119]]]]],[11,"draw",E,"Draw an high-level element",22,[[["self"],["e"]],[[R[2],[R[2119]]],[R[2119]]]]],[11,"map_coordinate",E,"Map coordinate to the backend coordinate",22,[[["self"]],[R[2130]]]],[11,"shrink",E,"Shrink the region, note all the locaitions are in guest…",22,[[],[["shift"],[R[2121],["shift"]]]]],[11,"apply_coord_spec",E,"Apply a new coord transformation object and returns a new…",22,[[["self"],[R[2135]]],[[R[2121]],[R[2135]]]]],[11,"margin",E,"Create a margin for the given drawing area and returns the…",22,[[["self"],["i32"]],[["shift"],[R[2121],["shift"]]]]],[11,"split_vertically",E,"Split the drawing area vertically",22,[[["self"],["i32"]]]],[11,"split_horizentally",E,"Split the drawing area horizentally",22,[[["self"],["i32"]]]],[11,"split_evenly",E,"Split the drawing area evenly",22,[[["self"]],["vec"]]],[11,"split_by_breakpoints",E,"Split the drawing area into a grid with specified…",22,[[["self"],["asref"]],["vec"]]],[11,"titled",E,"Draw a title of the drawing area and return the remaining…",22,[[["self"],["into",[R[2126]]],[R[2126]],["str"]],[[R[2119]],[R[2],[R[2119]]]]]],[11,"draw_text",E,"Draw text on the drawing area",22,[[["self"],[R[2130]],["str"],[R[2126]]],[[R[2],[R[2119]]],[R[2119]]]]],[11,"into_coord_spec",E,E,22,[[],["ct"]]],[11,"new",E,"Create a new SVG drawing backend",23,[[[T]],["self"]]],[11,R[2136],E,"Create a new SVG drawing backend and store the document…",23,[[["vec"]],["self"]]],[11,"new",E,"Create a new bitmap backend",24,[[[T]],["self"]]],[11,R[2136],E,"Create a new bitmap backend which only lives in-memory",24,[[["vec"]],["self"]]],[0,"backend",E,E,N,N],[4,R[2268],R[2242],"The error produced by a drawing backend",N,N],[13,"DrawingError",E,"A drawing backend error",25,N],[13,"FontError",E,"A font rendering error",25,N],[6,"BackendCoord",E,"A coordiante in the image",N,N],[8,R[2269],E,"The style data for the backend drawing API",N,N],[16,R[1587],E,"The underlying type reprsents the color for this style",26,N],[10,"as_color",E,"Convert the style into the underlying color",26,[[["self"]],[R[2155]]]],[8,R[2270],E,"The drawing backend trait, which implemenets the low-level…",N,N],[16,"ErrorType",E,"The error type reported by the backend",27,N],[10,"get_size",E,"Get the dimension of the drawing backend in pixel",27,[[["self"]]]],[10,R[2252],E,"Ensure the backend is ready to draw",27,[[["self"]],[[R[2129]],[R[2],[R[2129]]]]]],[10,"present",E,"Finialize the drawing step and present all the changes.…",27,[[["self"]],[[R[2129]],[R[2],[R[2129]]]]]],[10,R[2253],E,"Draw a pixel on the drawing backend - `point`: The backend…",27,[[["self"],[R[2130]],[R[2155]]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_line",E,"Draw a line on the drawing backend - `from`: The start…",27,[[["self"],[R[2130]],["s"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_rect",E,"Draw a rectangle on the drawing backend - `upper_left`:…",27,[[["self"],[R[2130]],["s"],["bool"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_path",E,"Draw a path on the drawing backend - `path`: The iterator…",27,[[["self"],[R[156]],["s"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,R[2254],E,"Draw a circle on the drawing backend - `center`: The…",27,[[["self"],[R[2130]],["u32"],["s"],["bool"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_text",E,"Draw a text on the drawing backend - `text`: The text to…",27,[[["self"],[R[2130]],[R[2155]],["str"],[R[2257]]],[[R[2129]],[R[2],[R[2129]]]]]],[8,R[2271],R[2137],"A type which can be converted into a root drawing area",N,N],[10,"into_drawing_area",E,"Convert the type into a root drawing area",28,[[],[["shift"],[R[2121],["shift"]]]]],[0,"element",R[2156],"Defines the drawing elements, the high-level drawing unit…",N,N],[3,"Pixel",R[2243],R[2202],N,N],[3,"Path",E,R[2201],N,N],[3,R[73],E,R[2203],N,N],[3,"Circle",E,R[2195],N,N],[3,"Text",E,R[2204],N,N],[3,R[2199],E,R[2200],N,N],[3,"Cross",E,R[2196],N,N],[3,R[2278],E,"The composed element which has at least two components",N,N],[3,R[2197],E,R[2198],N,N],[3,R[2193],E,R[2194],N,N],[3,"ErrorBar",E,E,N,N],[3,R[2279],E,E,N,N],[3,R[2280],E,E,N,N],[3,"DynElement",E,"The container for a dynamically dispatched element",N,N],[11,"new",E,E,29,[[["into",[R[2125]]],["into"],[R[2125]]],["self"]]],[11,"new",E,"Create a new path - `points`: The iterator of the points -…",30,[[["into",["vec"]],["into",[R[2125]]],[R[2125]],["vec"]],["self"]]],[11,"new",E,"Create a new path - `points`: The left upper and right…",31,[[["into",[R[2125]]],[R[2125]]],["self"]]],[11,"set_margin",E,"Set the margin of the rectangle - `t`: The top margin -…",31,[[["self"],["u32"]],["self"]]],[11,"new",E,"Create a new circle element - `coord` The center of the…",32,[[["u32"],["coord"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"new",E,"Create a new text element - `text`: The text for the…",33,[[["into",[R[2126]]],["coord"],[R[2126]],[T]],["self"]]],[11,"new",E,"Create an emply multi-line text element. Lines can be…",34,[[["into",[R[2126]]],["coord"],[R[2126]]],["self"]]],[11,"set_line_height",E,"Set the line height of the multi-line text element",34,[[["self"],["f64"]],["self"]]],[11,"push_line",E,"Push a new line into the given multi-line text `line`: The…",34,[[["self"],["into"]]]],[11,"estimate_dimension",E,"Estimate the multi-line text element's dimension",34,[[["self"]],[R[2152]]]],[11,"relocate",E,"Move the location to the sepecified location",34,[[["self"],["coord"]]]],[11,"compute_line_layout",E,"Compute the line layout",34,[[["self"]],[[R[2152],["vec"]],["vec",["layoutbox"]]]]],[11,R[670],E,R[2138],34,[[["into",[R[2126]]],["coord"],["str"],["u32"],[R[2126]],["into",["str"]]],["self"]]],[11,"from_string",E,R[2138],34,[[["into",[R[2126]]],[R[81]],["coord"],["u32"],[R[2126]]],["self"]]],[11,"new",E,E,35,[[["u32"],["coord"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"at",E,E,36,[[["coord"]],["self"]]],[11,"new",E,"Create a new candlestick element, which requires the Y…",37,[[["x"],["into",[R[2125]]],[R[2125]],["u32"],["y"]],["self"]]],[11,"new_vertical",E,E,38,[[["into",[R[2125]]],[R[2125]],["u32"],["k"],["v"]],["self"]]],[11,"new_horizental",E,E,38,[[["into",[R[2125]]],[R[2125]],["u32"],["k"],["v"]],["self"]]],[8,R[2272],E,"The element that used to describe a point",N,N],[10,R[2255],E,E,39,[[["u32"],["coord"],[R[2125]]],["self"]]],[8,R[2273],E,"A type which is logically a collection of points, under…",N,N],[16,"Borrow",E,"The item in point iterator",40,N],[16,R[201],E,"The point iterator",40,N],[10,"point_iter",E,"framework to do the coordinate mapping",40,[[]]],[8,"Drawable",E,"The trait indicates we are able to draw it on a drawing area",N,N],[10,"draw",E,"Actually draws the element. The key points is already…",41,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[8,R[2274],E,"The trait that makes the conversion from the statically…",N,N],[10,R[2245],E,"Make the conversion",42,[[],[R[2244]]]],[0,"series",R[2156],"This module contains predefined types of series. The…",N,N],[3,"Histogram",R[2246],R[2180],N,N],[3,R[2275],E,R[2181],N,N],[3,R[2182],E,R[2183],N,N],[11,"style",E,"Set the style of the histogram",43,[[["into",[R[2125]]],[R[2125]]],["self"]]],[11,"baseline",E,"Set the baseline of the histogram",43,[[["a"]],["self"]]],[11,"margin",E,"Set the margin for each bar",43,[[["u32"]],["self"]]],[11,"data",E,"Set the data iterator",43,[[[R[156]]],["self"]]],[11,"new",E,"Create a new histogram series.",43,[[["u32"],[R[156]],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"vertical",E,E,43,[[[R[2120]]],["self"]]],[11,"horizental",E,E,43,[[[R[2120]]],["self"]]],[11,"new",E,E,44,[[["i"],["into",[R[2125]]],[R[2125]]],["self"]]],[11,"new",E,"Create a new point series with the element that implements…",45,[[["u32"],["into",[R[2125]]],[R[2125]],["i"]],["self"]]],[11,"of_element",E,"Create a new point series. Similar to `PointSeries::new`…",45,[[["u32"],["into",[R[2125]]],[R[2125]],["f"],["i"]],["self"]]],[0,"style",R[2156],"The style for shapes and text, font, color, etc.",N,N],[3,"Palette99",R[2150],R[2187],N,N],[3,R[2188],E,R[2189],N,N],[3,R[2281],E,R[2186],N,N],[3,"HSLColor",E,R[2185],N,N],[12,"0",E,E,46,N],[12,"1",E,E,46,N],[12,"2",E,E,46,N],[3,R[2190],E,R[2191],N,N],[3,"RGBAColor",E,"The RGBA representation of the color, Plotters use RGBA as…",N,N],[3,"RGBColor",E,R[2192],N,N],[12,"0",E,E,47,N],[12,"1",E,E,47,N],[12,"2",E,E,47,N],[3,"FontDesc",E,R[2184],N,N],[3,"TextStyle",E,"Style of a text",N,N],[12,"font",E,E,48,N],[12,"color",E,E,48,N],[3,"ShapeStyle",E,"Style for any of shape",N,N],[12,"color",E,E,49,N],[12,"filled",E,E,49,N],[4,R[2212],E,R[2213],N,N],[13,"None",E,E,50,N],[13,"Rotate90",E,E,50,N],[13,"Rotate180",E,E,50,N],[13,"Rotate270",E,E,50,N],[11,"pick",E,"Pick a color from the palette",51,[[["usize"]],[R[2154]]]],[0,"colors",E,"Basic predefined colors.",N,N],[0,"palette_ext",R[2139],"Predefined Color definitions using the palette color types",N,N],[17,"WHITE","plotters::style::colors::palette_ext",R[2140],N,N],[17,"BLACK",E,R[2141],N,N],[17,"RED",E,R[2142],N,N],[17,"GREEN",E,R[2143],N,N],[17,"BLUE",E,R[2144],N,N],[17,"YELLOW",E,R[2145],N,N],[17,"CYAN",E,R[2146],N,N],[17,"MAGENTA",E,R[2147],N,N],[17,R[2148],E,R[2149],N,N],[17,"WHITE",R[2139],R[2140],N,N],[17,"BLACK",E,R[2141],N,N],[17,"RED",E,R[2142],N,N],[17,"GREEN",E,R[2143],N,N],[17,"BLUE",E,R[2144],N,N],[17,"YELLOW",E,R[2145],N,N],[17,"CYAN",E,R[2146],N,N],[17,"MAGENTA",E,R[2147],N,N],[17,R[2148],E,R[2149],N,N],[11,"offset",R[2150],"Compute the offset of the \"top-left\" cornor of the text.…",50,[[["self"],["layoutbox"]]]],[11,"transform",E,"Transform the coordinate to performe the rotation",50,[[["self"],["i32"]]]],[11,"new",E,"Create a new font",52,[[["f64"],["str"]],["self"]]],[11,"resize",E,"Create a new font desc with the same font but different size",52,[[["self"],["f64"]],[R[2257]]]],[11,"transform",E,"Set the font transformation",52,[[["self"],[R[2151]]],["self"]]],[11,"get_transform",E,"Get the font transformation description",52,[[["self"]],[R[2151]]]],[11,"color",E,"Set the color of the font and return the result text style…",52,[[["self"],["c"]],[R[2126]]]],[11,"get_name",E,"Get the name of the font",52,[[["self"]],["str"]]],[11,"get_size",E,"Get the size of font",52,[[["self"]],["f64"]]],[11,"layout_box",E,R[2153],52,[[["self"],["str"]],[R[2152]]]],[11,"box_size",E,R[2153],52,[[["self"],["str"]],[R[2152]]]],[11,"draw",E,"Actually draws a font with a drawing function",52,[[["self"],["fnmut"],["str"]],[[R[2]],[R[2152],[R[2]]]]]],[6,"FontError",E,"The error type for the font implementation",N,N],[6,"FontResult",E,"The type we used to represent a result of any font…",N,N],[6,"LayoutBox",E,E,N,N],[8,"Palette",E,E,N,N],[18,"COLORS",E,E,53,N],[11,"pick",E,E,53,[[["usize"]],[R[2154]]]],[8,"Color",E,R[2233],N,N],[10,"rgb",E,R[2234],54,[[["self"]]]],[10,"alpha",E,R[2235],54,[[["self"]],["f64"]]],[11,"mix",E,R[2236],54,[[["self"],["f64"]],[R[2155]]]],[11,"to_rgba",E,R[2237],54,[[["self"]],[R[2155]]]],[11,"filled",E,R[2238],54,[[["self"]],[R[2125]]]],[8,R[2239],E,R[2240],N,N],[10,"rgb",E,E,55,[[["self"]]]],[8,"IntoFont",E,E,N,N],[10,"into_font",E,E,56,[[],[R[2257]]]],[11,"color",E,"Determine the color of the style",48,[[["self"],["c"]],["self"]]],[11,"transform",E,E,48,[[["self"],[R[2151]]],["self"]]],[11,"filled",E,"Make a filled shape style",49,[[["self"]],["self"]]],[0,"prelude",R[2156],"The module imports the most commonly used types and…",N,N],[3,R[2157],R[2220],R[2158],N,N],[3,R[2159],E,R[2160],N,N],[3,"LogCoord",E,R[2161],N,N],[3,"LogRange",E,R[2162],N,N],[12,"0",E,E,8,N],[3,R[2163],E,R[2164],N,N],[3,R[2165],E,R[2166],N,N],[3,R[2167],E,R[2168],N,N],[3,R[2169],E,R[2170],N,N],[3,R[2171],E,R[2172],N,N],[3,R[2173],E,R[2174],N,N],[3,R[2175],E,R[2176],N,N],[3,R[2276],E,R[2177],N,N],[3,R[2178],E,R[2179],N,N],[3,"Histogram",E,R[2180],N,N],[3,R[2275],E,R[2181],N,N],[3,R[2182],E,R[2183],N,N],[3,"FontDesc",E,R[2184],N,N],[3,"HSLColor",E,R[2185],N,N],[12,"0",E,E,46,N],[12,"1",E,E,46,N],[12,"2",E,E,46,N],[3,R[2281],E,R[2186],N,N],[3,"Palette99",E,R[2187],N,N],[3,R[2188],E,R[2189],N,N],[3,R[2190],E,R[2191],N,N],[3,"RGBColor",E,R[2192],N,N],[12,"0",E,E,47,N],[12,"1",E,E,47,N],[12,"2",E,E,47,N],[3,R[2193],E,R[2194],N,N],[3,"Circle",E,R[2195],N,N],[3,"Cross",E,R[2196],N,N],[3,R[2197],E,R[2198],N,N],[3,"ErrorBar",E,E,N,N],[3,R[2199],E,R[2200],N,N],[3,"Path",E,R[2201],N,N],[3,"Pixel",E,R[2202],N,N],[3,R[73],E,R[2203],N,N],[3,"Text",E,R[2204],N,N],[4,R[2205],E,R[2206],N,N],[13,"Top",E,E,0,N],[13,"Bottom",E,E,0,N],[13,"Left",E,E,0,N],[13,"Right",E,E,0,N],[4,R[2207],E,E,N,N],[13,"UpperLeft",E,E,1,N],[13,"MiddleLeft",E,E,1,N],[13,"LowerLeft",E,E,1,N],[13,R[2208],E,E,1,N],[13,R[2209],E,E,1,N],[13,R[2210],E,E,1,N],[13,"UpperRight",E,E,1,N],[13,R[2211],E,E,1,N],[13,"LowerRight",E,E,1,N],[13,"Coordinate",E,E,1,N],[4,R[2212],E,R[2213],N,N],[13,"None",E,E,50,N],[13,"Rotate90",E,E,50,N],[13,"Rotate180",E,E,50,N],[13,"Rotate270",E,E,50,N],[5,R[2214],E,E,N,[[["range"],["f64"],["range",["f64"]]],[[R[2127]],[R[24],[R[2127]]]]]],[6,"DrawResult",E,"The type used to returns a drawing operation that can be…",N,N],[8,R[2215],E,E,N,N],[11,R[2216],R[2217],E,14,[[],[R[2218]]]],[8,R[2219],R[2220],E,N,N],[11,R[2221],R[2217],E,15,[[["range"]],[R[2127]]]],[8,R[2222],R[2220],R[2223],N,N],[10,"as_f64",E,R[2224],18,[[["self"]],["f64"]]],[10,R[1050],E,R[2225],18,[[["f64"]],["self"]]],[8,"Ranged",E,R[2226],N,N],[16,"ValueType",E,R[2227],16,N],[10,"map",E,R[2228],16,[[["self"]],["i32"]]],[10,R[2247],E,R[2229],16,[[["self"],["usize"]],["vec"]]],[10,"range",E,R[2230],16,[[["self"]],["range"]]],[11,R[2231],R[2217],R[2232],16,[[["self"]],[["range",["i32"]],["i32"]]]],[8,"Color",R[2220],R[2233],N,N],[10,"rgb",E,R[2234],54,[[["self"]]]],[10,"alpha",E,R[2235],54,[[["self"]],["f64"]]],[11,"mix",R[2150],R[2236],54,[[["self"],["f64"]],[R[2155]]]],[11,"to_rgba",E,R[2237],54,[[["self"]],[R[2155]]]],[11,"filled",E,R[2238],54,[[["self"]],[R[2125]]]],[8,"IntoFont",R[2220],E,N,N],[10,"into_font",E,E,56,[[],[R[2257]]]],[8,"Palette",E,E,N,N],[18,"COLORS",R[2150],E,53,N],[11,"pick",E,E,53,[[["usize"]],[R[2154]]]],[8,R[2239],R[2220],R[2240],N,N],[10,"rgb",E,E,55,[[["self"]]]],[11,"into",R[2241],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[1817],E,E,2,[[["m"]],["d"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[1817],E,E,4,[[["m"]],["d"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[1817],E,E,3,[[["m"]],["d"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,R[1817],E,E,5,[[["m"]],["d"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[1817],E,E,6,[[["m"]],["d"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,R[1817],E,E,7,[[["m"]],["d"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[1817],E,E,0,[[["m"]],["d"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[1817],E,E,1,[[["m"]],["d"]]],[11,"into",R[2217],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,R[1817],E,E,57,[[["m"]],["d"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,R[1817],E,E,58,[[["m"]],["d"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,R[1817],E,E,59,[[["m"]],["d"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,R[1817],E,E,60,[[["m"]],["d"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,R[1817],E,E,61,[[["m"]],["d"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,R[1817],E,E,62,[[["m"]],["d"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,R[1817],E,E,63,[[["m"]],["d"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,R[1817],E,E,64,[[["m"]],["d"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,R[1817],E,E,11,[[["m"]],["d"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,R[1817],E,E,65,[[["m"]],["d"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,R[1817],E,E,8,[[["m"]],["d"]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,R[1817],E,E,9,[[["m"]],["d"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,R[1817],E,E,66,[[["m"]],["d"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,R[1817],E,E,10,[[["m"]],["d"]]],[11,"into",R[2137],E,22,[[],[U]]],[11,R[83],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,R[1817],E,E,22,[[["m"]],["d"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,R[1817],E,E,23,[[["m"]],["d"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,R[1817],E,E,24,[[["m"]],["d"]]],[11,"into",E,E,21,[[],[U]]],[11,R[82],E,E,21,[[["self"]],[R[81]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,R[1817],E,E,21,[[["m"]],["d"]]],[11,"into",R[2242],E,25,[[],[U]]],[11,R[82],E,E,25,[[["self"]],[R[81]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,R[1817],E,E,25,[[["m"]],["d"]]],[11,R[2245],R[2243],E,29,[[],[R[2244]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,R[1817],E,E,29,[[["m"]],["d"]]],[11,R[2245],E,E,30,[[],[R[2244]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,R[1817],E,E,30,[[["m"]],["d"]]],[11,R[2245],E,E,31,[[],[R[2244]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,R[1817],E,E,31,[[["m"]],["d"]]],[11,R[2245],E,E,32,[[],[R[2244]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,R[1817],E,E,32,[[["m"]],["d"]]],[11,R[2245],E,E,33,[[],[R[2244]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,R[1817],E,E,33,[[["m"]],["d"]]],[11,R[2245],E,E,34,[[],[R[2244]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,R[1817],E,E,34,[[["m"]],["d"]]],[11,R[2245],E,E,35,[[],[R[2244]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,R[1817],E,E,35,[[["m"]],["d"]]],[11,R[2245],E,E,67,[[],[R[2244]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[1817],E,E,67,[[["m"]],["d"]]],[11,R[2245],E,E,36,[[],[R[2244]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,R[1817],E,E,36,[[["m"]],["d"]]],[11,R[2245],E,E,37,[[],[R[2244]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,R[1817],E,E,37,[[["m"]],["d"]]],[11,R[2245],E,E,38,[[],[R[2244]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,R[1817],E,E,38,[[["m"]],["d"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,R[1817],E,E,68,[[["m"]],["d"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,R[1817],E,E,69,[[["m"]],["d"]]],[11,R[2245],E,E,70,[[],[R[2244]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,R[1817],E,E,70,[[["m"]],["d"]]],[11,"into",R[2246],E,43,[[],[U]]],[11,R[22],E,E,43,[[],["i"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,R[1817],E,E,43,[[["m"]],["d"]]],[11,"into",E,E,44,[[],[U]]],[11,R[22],E,E,44,[[],["i"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,R[2007],E,E,44,[[],[R[1636]]]],[11,R[1817],E,E,44,[[["m"]],["d"]]],[11,"into",E,E,45,[[],[U]]],[11,R[22],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,R[1817],E,E,45,[[["m"]],["d"]]],[11,"into",R[2150],E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,R[1817],E,E,71,[[["m"]],["d"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,R[1817],E,E,72,[[["m"]],["d"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,R[1817],E,E,73,[[["m"]],["d"]]],[11,"as_color",E,E,46,[[["self"]],[R[2155]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,R[1817],E,E,46,[[["m"]],["d"]]],[11,"as_color",E,E,51,[[["self"]],[R[2155]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,R[1817],E,E,51,[[["m"]],["d"]]],[11,"as_color",E,E,74,[[["self"]],[R[2155]]]],[11,"into",E,E,74,[[],[U]]],[11,R[83],E,E,74,[[["self"]],[T]]],[11,R[84],E,E,74,[[["self"],[T]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[8],E,E,74,[[[U]],[R[2]]]],[11,R[9],E,E,74,[[],[R[2]]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,R[1817],E,E,74,[[["m"]],["d"]]],[11,"as_color",E,E,47,[[["self"]],[R[2155]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,R[1817],E,E,47,[[["m"]],["d"]]],[11,"into",E,E,52,[[],[U]]],[11,R[83],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"],[T]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,R[1817],E,E,52,[[["m"]],["d"]]],[11,"into",E,E,48,[[],[U]]],[11,R[83],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"],[T]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,R[1817],E,E,48,[[["m"]],["d"]]],[11,"into",E,E,49,[[],[U]]],[11,R[83],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"],[T]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,R[1817],E,E,49,[[["m"]],["d"]]],[11,"into",E,E,50,[[],[U]]],[11,R[83],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"],[T]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,R[1817],E,E,50,[[["m"]],["d"]]],[11,"range",R[2217],E,57,[[["self"]],[["date"],["range",["date"]]]]],[11,"map",E,E,57,[[["self"]],["i32"]]],[11,R[2247],E,E,57,[[["self"],["usize"]],["vec"]]],[11,"map",E,E,65,[[["self"],["v"]],["i32"]]],[11,R[2247],E,E,65,[[["self"],["usize"]],["vec"]]],[11,"range",E,E,65,[[["self"]],["range"]]],[11,"map",E,E,59,[[["self"],["f32"]],["i32"]]],[11,R[2247],E,E,59,[[["self"],["usize"]],[["f32"],["vec",["f32"]]]]],[11,"range",E,E,59,[[["self"]],[["f32"],["range",["f32"]]]]],[11,"map",E,E,60,[[["self"],["f64"]],["i32"]]],[11,R[2247],E,E,60,[[["self"],["usize"]],[["vec",["f64"]],["f64"]]]],[11,"range",E,E,60,[[["self"]],[["f64"],["range",["f64"]]]]],[11,"map",E,E,63,[[["self"],["u32"]],["i32"]]],[11,R[2247],E,E,63,[[["self"],["usize"]],[["vec",["u32"]],["u32"]]]],[11,"range",E,E,63,[[["self"]],[["range",["u32"]],["u32"]]]],[11,"map",E,E,61,[[["self"],["i32"]],["i32"]]],[11,R[2247],E,E,61,[[["self"],["usize"]],[["vec",["i32"]],["i32"]]]],[11,"range",E,E,61,[[["self"]],[["range",["i32"]],["i32"]]]],[11,"map",E,E,64,[[["self"],["u64"]],["i32"]]],[11,R[2247],E,E,64,[[["self"],["usize"]],[["vec",["u64"]],["u64"]]]],[11,"range",E,E,64,[[["self"]],[["range",["u64"]],["u64"]]]],[11,"map",E,E,62,[[["self"],["i64"]],["i32"]]],[11,R[2247],E,E,62,[[["self"],["usize"]],[["i64"],["vec",["i64"]]]]],[11,"range",E,E,62,[[["self"]],[["i64"],["range",["i64"]]]]],[11,"unmap",E,E,59,[[["self"],["i32"]],[["f32"],[R[24],["f32"]]]]],[11,"unmap",E,E,60,[[["self"],["i32"]],[["f64"],[R[24],["f64"]]]]],[11,"unmap",E,E,63,[[["self"],["i32"]],[["u32"],[R[24],["u32"]]]]],[11,"unmap",E,E,61,[[["self"],["i32"]],[[R[24],["i32"]],["i32"]]]],[11,"unmap",E,E,64,[[["self"],["i32"]],[[R[24],["u64"]],["u64"]]]],[11,"unmap",E,E,62,[[["self"],["i32"]],[[R[24],["i64"]],["i64"]]]],[11,R[2249],E,E,63,[[]]],[11,R[2248],E,E,63,[[]]],[11,R[2249],E,E,61,[[]]],[11,R[2248],E,E,61,[[]]],[11,R[2249],E,E,64,[[]]],[11,R[2248],E,E,64,[[]]],[11,R[2249],E,E,62,[[]]],[11,R[2248],E,E,62,[[]]],[11,R[2250],E,E,11,[[["self"]],[R[2130]]]],[11,R[2250],E,E,9,[[["self"]],[R[2130]]]],[11,R[2250],E,E,66,[[["self"]],[R[2130]]]],[11,R[2251],E,E,11,[[["self"],[R[2130]]],[R[24]]]],[11,R[2251],E,E,9,[[["self"],[R[2130]]],[[R[24],[R[2130]]],[R[2130]]]]],[11,R[2251],E,E,66,[[["self"],[R[2130]]],[R[24]]]],[11,"get_size",R[2137],E,23,[[["self"]]]],[11,R[2252],E,E,23,[[["self"]],[[R[2],[R[2129]]],[R[2129],["error"]]]]],[11,"present",E,E,23,[[["self"]],[[R[2],[R[2129]]],[R[2129],["error"]]]]],[11,R[2253],E,E,23,[[["self"],[R[2130]],[R[2155]]],[[R[2],[R[2129]]],[R[2129],["error"]]]]],[11,"draw_line",E,E,23,[[["self"],[R[2130]],["s"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_rect",E,E,23,[[["self"],[R[2130]],["s"],["bool"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_path",E,E,23,[[["self"],[R[156]],["s"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,R[2254],E,E,23,[[["self"],[R[2130]],["u32"],["s"],["bool"]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"draw_text",E,E,23,[[["self"],[R[2130]],[R[2155]],["str"],[R[2257]]],[[R[2129]],[R[2],[R[2129]]]]]],[11,"get_size",E,E,24,[[["self"]]]],[11,R[2252],E,E,24,[[["self"]],[[R[2],[R[2129]]],[R[2129],[R[1976]]]]]],[11,"present",E,E,24,[[["self"]],[[R[2],[R[2129]]],[R[2129],[R[1976]]]]]],[11,R[2253],E,E,24,[[["self"],[R[2130]],[R[2155]]],[[R[2],[R[2129]]],[R[2129],[R[1976]]]]]],[11,R[2255],R[2243],E,35,[[["u32"],["coord"],[R[2125]]],["self"]]],[11,R[2255],E,E,32,[[["u32"],["coord"],[R[2125]]],["self"]]],[11,R[2255],E,E,29,[[["u32"],["coord"],[R[2125]]],["self"]]],[11,"draw",E,E,29,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,30,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,31,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,32,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,33,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,34,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,35,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,36,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,67,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,37,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,38,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"draw",E,E,70,[[["self"],[R[2256]],["db"]],[[R[2],[R[2129]]],[R[2129]]]]],[11,"rgb",R[2150],E,74,[[["self"]]]],[11,"alpha",E,E,74,[[["self"]],["f64"]]],[11,"to_rgba",E,E,74,[[["self"]],[R[2155]]]],[11,"rgb",E,E,51,[[["self"]]]],[11,"rgb",E,E,47,[[["self"]]]],[11,"rgb",E,E,46,[[["self"]]]],[11,"drop",R[2137],E,23,[[["self"]]]],[11,"drop",E,E,24,[[["self"]]]],[11,"clone",R[2217],E,9,[[["self"]],["shift"]]],[11,"clone",R[2137],E,22,[[["self"]],["self"]]],[11,"clone",R[2150],E,74,[[["self"]],[R[2155]]]],[11,"clone",E,E,50,[[["self"]],[R[2151]]]],[11,"clone",E,E,52,[[["self"]],[R[2257]]]],[11,"clone",E,E,48,[[["self"]],[R[2126]]]],[11,"clone",E,E,49,[[["self"]],[R[2125]]]],[11,"eq",E,E,74,[[["self"],[R[2155]]],["bool"]]],[11,"ne",E,E,74,[[["self"],[R[2155]]],["bool"]]],[11,"from",R[2217],E,57,[[["date"],["range",["date"]]],["self"]]],[11,"from",E,E,65,[[["logrange"]],["logcoord"]]],[11,"from",E,E,59,[[["f32"],["range",["f32"]]],["self"]]],[11,"from",E,E,60,[[["f64"],["range",["f64"]]],["self"]]],[11,"from",E,E,63,[[["range",["u32"]],["u32"]],["self"]]],[11,"from",E,E,61,[[["range",["i32"]],["i32"]],["self"]]],[11,"from",E,E,64,[[["range",["u64"]],["u64"]],["self"]]],[11,"from",E,E,62,[[["i64"],["range",["i64"]]],["self"]]],[11,"from",R[2137],E,22,[[["db"]],["self"]]],[11,"from",E,E,22,[[["rc"]],["self"]]],[11,"from",R[2150],E,52,[[["str"]],[R[2257]]]],[11,"from",E,E,52,[[],[R[2257]]]],[11,"from",E,E,48,[[[T]],["self"]]],[11,"from",E,E,49,[[[T]],["self"]]],[11,"next",R[2246],E,43,[[["self"]],[R[24]]]],[11,"next",E,E,43,[[["self"]],[R[24]]]],[11,"next",E,E,44,[[["self"]],[R[24]]]],[11,"next",E,E,45,[[["self"]],[R[24]]]],[11,R[13],R[2241],E,5,[[["self"]]]],[11,"add",R[2243],E,36,[[["other"]]]],[11,"add",E,E,67,[[["c"]]]],[11,"deref",R[2241],E,5,[[["self"]]]],[11,"fmt",R[2137],E,21,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[2242],E,25,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[2217],E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2137],E,21,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2242],E,25,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[2150],E,74,[[["self"],[R[14]]],[R[2]]]],[11,R[10],R[2241],E,5,[[["self"]],[R[2120]]]],[11,R[28],E,E,5,[[["self"]],[R[2120]]]],[11,R[2231],R[2217],R[2232],16,[[["self"]],[["range",["i32"]],["i32"]]]],[11,R[2216],E,E,14,[[],[R[2218]]]],[11,R[2221],E,E,15,[[["range"]],[R[2127]]]],[11,"mix",R[2150],R[2236],54,[[["self"],["f64"]],[R[2155]]]],[11,"to_rgba",E,R[2237],54,[[["self"]],[R[2155]]]],[11,"filled",E,R[2238],54,[[["self"]],[R[2125]]]],[18,"COLORS",E,E,53,N],[11,"pick",E,E,53,[[["usize"]],[R[2154]]]]],"p":[[4,R[2205]],[4,R[2207]],[3,R[2157]],[3,"SeriesAnno"],[3,R[2159]],[3,R[2258]],[3,"MeshStyle"],[3,R[2259]],[3,"LogRange"],[3,"Shift"],[4,"MeshLine"],[3,R[2163]],[8,R[2260]],[8,R[2261]],[8,R[2215]],[8,R[2219]],[8,"Ranged"],[8,R[2262]],[8,R[2222]],[8,R[2263]],[8,R[2264]],[4,R[2265]],[3,R[2266]],[3,"SVGBackend"],[3,R[2267]],[4,R[2268]],[8,R[2269]],[8,R[2270]],[8,R[2271]],[3,"Pixel"],[3,"Path"],[3,R[73]],[3,"Circle"],[3,"Text"],[3,R[2199]],[3,"Cross"],[3,R[2197]],[3,R[2193]],[3,"ErrorBar"],[8,R[2272]],[8,R[2273]],[8,"Drawable"],[8,R[2274]],[3,"Histogram"],[3,R[2275]],[3,R[2182]],[3,"HSLColor"],[3,"RGBColor"],[3,"TextStyle"],[3,"ShapeStyle"],[4,R[2212]],[3,R[2190]],[3,"FontDesc"],[8,"Palette"],[8,"Color"],[8,R[2239]],[8,"IntoFont"],[3,R[2276]],[3,R[2178]],[3,R[2165]],[3,R[2167]],[3,R[2169]],[3,R[2171]],[3,R[2173]],[3,R[2175]],[3,"LogCoord"],[3,R[2277]],[3,R[2278]],[3,R[2279]],[3,R[2280]],[3,"DynElement"],[3,"Palette99"],[3,R[2188]],[3,R[2281]],[3,"RGBAColor"]]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder…","i":[[3,R[1548],"png","Pixel dimensions information",N,N],[12,"xppu",E,"Pixels per unit, X axis",0,N],[12,"yppu",E,"Pixels per unit, Y axis",0,N],[12,"unit",E,"Either Meter or Unspecified",0,N],[3,R[1550],E,"Frame control information",N,N],[12,"sequence_number",E,"Sequence number of the animation chunk, starting from 0",1,N],[12,"width",E,"Width of the following frame",1,N],[12,"height",E,"Height of the following frame",1,N],[12,"x_offset",E,"X position at which to render the following frame",1,N],[12,"y_offset",E,"Y position at which to render the following frame",1,N],[12,"delay_num",E,"Frame delay fraction numerator",1,N],[12,"delay_den",E,"Frame delay fraction denominator",1,N],[12,"dispose_op",E,"Type of frame area disposal to be done after rendering…",1,N],[12,"blend_op",E,"Type of frame area rendering for this frame",1,N],[3,R[1549],E,"Animation control information",N,N],[12,"num_frames",E,"Number of frames",2,N],[12,"num_plays",E,"Number of times to loop this APNG. 0 indicates infinite…",2,N],[3,"Info",E,"PNG info struct",N,N],[12,"width",E,E,3,N],[12,"height",E,E,3,N],[12,"bit_depth",E,E,3,N],[12,R[2020],E,E,3,N],[12,R[2104],E,E,3,N],[12,"trns",E,E,3,N],[12,"pixel_dims",E,E,3,N],[12,"palette",E,E,3,N],[12,R[1559],E,E,3,N],[12,R[1557],E,E,3,N],[12,R[599],E,E,3,N],[12,"filter",E,E,3,N],[3,R[1566],E,"Output transformations",N,N],[3,"Decoder",E,"PNG Decoder",N,N],[3,"Reader",E,"PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo",E,"Output info",N,N],[12,"width",E,E,4,N],[12,"height",E,E,4,N],[12,R[2020],E,E,4,N],[12,"bit_depth",E,E,4,N],[12,"line_size",E,E,4,N],[3,R[141],E,"PNG StreamingDecoder (low-level interface)",N,N],[3,"Limits",E,E,N,N],[12,"pixels",E,"max number of pixels: `width * height` (default: 67M = 226)",5,N],[3,"Encoder",E,"PNG Encoder",N,N],[3,"Writer",E,"PNG writer",N,N],[4,R[1587],E,E,N,N],[13,"Grayscale",E,E,6,N],[13,"RGB",E,E,6,N],[13,"Indexed",E,E,6,N],[13,R[2105],E,E,6,N],[13,"RGBA",E,E,6,N],[4,"BitDepth",E,"Bit depth of the png file",N,N],[13,"One",E,E,7,N],[13,"Two",E,E,7,N],[13,"Four",E,E,7,N],[13,"Eight",E,E,7,N],[13,"Sixteen",E,E,7,N],[4,"Unit",E,"Physical unit of the pixel dimensions",N,N],[13,"Unspecified",E,E,8,N],[13,"Meter",E,E,8,N],[4,R[607],E,E,N,N],[13,"Default",E,"Default level  ",9,N],[13,"Fast",E,"Fast minimal compression",9,N],[13,"Best",E,"Higher compression level  ",9,N],[13,"Huffman",E,E,9,N],[13,"Rle",E,E,9,N],[4,"Decoded",E,"Result of the decoding process",N,N],[13,"Nothing",E,"Nothing decoded yet",10,N],[13,"Header",E,E,10,N],[13,"ChunkBegin",E,E,10,N],[13,"ChunkComplete",E,E,10,N],[13,R[1548],E,E,10,N],[13,R[1549],E,E,10,N],[13,R[1550],E,E,10,N],[13,"ImageData",E,"Decoded raw image data.",10,N],[13,"PartialChunk",E,E,10,N],[13,"ImageEnd",E,E,10,N],[4,R[137],E,E,N,N],[13,"IoError",E,E,11,N],[13,"Format",E,E,11,N],[13,"InvalidSignature",E,E,11,N],[13,"CrcMismatch",E,E,11,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",11,N],[12,"crc_val",E,"Stored CRC32 value",11,N],[12,"crc_sum",E,"Calculated CRC32 sum",11,N],[12,"chunk",E,E,11,N],[13,"Other","png",E,11,N],[13,"CorruptFlateStream",E,E,11,N],[4,R[1565],E,E,N,N],[13,"IoError",E,E,12,N],[13,"Format",E,E,12,N],[4,R[2077],E,E,N,N],[13,"NoFilter",E,E,13,N],[13,"Sub",E,E,13,N],[13,"Up",E,E,13,N],[13,"Avg",E,E,13,N],[13,"Paeth",E,E,13,N],[0,"chunk",E,"Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[[R[1551]]],["bool"]]],[5,"is_private",E,"Returns true if the chunk is private.",N,[[[R[1551]]],["bool"]]],[5,"reserved_set",E,"Checks whether the reserved bit of the chunk name is set.…",N,[[[R[1551]]],["bool"]]],[5,"safe_to_copy",E,"Returns true if the chunk is safe to copy if unknown.",N,[[[R[1551]]],["bool"]]],[6,"ChunkType",E,E,N,N],[17,"IHDR",E,"Image header",N,N],[17,"PLTE",E,"Palette",N,N],[17,"IDAT",E,"Image data",N,N],[17,"IEND",E,"Image trailer",N,N],[17,"tRNS",E,"Transparency",N,N],[17,"bKGD",E,"Background colour",N,N],[17,"tIME",E,"Image last-modification time",N,N],[17,"pHYs",E,"Physical pixel dimensions",N,N],[17,"acTL",E,"Animation control",N,N],[17,"fcTL",E,"Frame control",N,N],[17,"fdAT",E,"Frame data",N,N],[11,"new","png","Creates a new StreamingDecoder",14,[[],[R[132]]]],[11,"reset",E,"Resets the StreamingDecoder",14,[[["self"]]]],[11,"update",E,"Low level StreamingDecoder interface.",14,[[["self"],["vec"]],[[R[127]],[R[2],[R[127]]]]]],[11,R[1552],E,"Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new",E,E,15,[[["r"]],["decoder"]]],[11,"new_with_limits",E,E,15,[[["limits"],["r"]],["decoder"]]],[11,"set_limits",E,"Images that are considered too big",15,[[["self"],["limits"]]]],[11,"read_info",E,"Reads all meta data until the first IDAT chunk",15,[[],[[R[127]],[R[2],[R[127]]]]]],[11,"info",E,E,16,[[["self"]],["info"]]],[11,"next_frame",E,"Decodes the next frame into `buf`",16,[[["self"]],[[R[127]],[R[2],[R[127]]]]]],[11,"next_row",E,R[1553],16,[[["self"]],[[R[2],[R[24],R[127]]],[R[24]],[R[127]]]]],[11,"next_interlaced_row",E,R[1553],16,[[["self"]],[[R[127]],[R[24]],[R[2],[R[24],R[127]]]]]],[11,"output_color_type",E,"Returns the color type and the number of bits per sample…",16,[[["self"]]]],[11,"output_buffer_size",E,R[1554],16,[[["self"]],["usize"]]],[11,"output_line_size",E,R[1554],16,[[["self"],["u32"]],["usize"]]],[11,"new",E,E,17,[[["w"],["u32"]],["encoder"]]],[11,"write_header",E,E,17,[[],[[R[2],["writer",R[1555]]],[R[1555]],["writer"]]]],[11,"write_chunk",E,E,18,[[["self"]],[[R[1555]],[R[2],[R[1555]]]]]],[11,"write_image_data",E,"Writes the image data.",18,[[["self"]],[[R[1555]],[R[2],[R[1555]]]]]],[11,"from_u8",E,R[1556],13,[[["u8"]],[[R[24],[R[1563]]],[R[1563]]]]],[11,"samples",E,"Returns the number of samples used per pixel of `ColorType`",6,[[["self"]],["usize"]]],[11,"from_u8",E,R[1556],6,[[["u8"]],[[R[1564]],[R[24],[R[1564]]]]]],[11,"from_u8",E,R[1556],7,[[["u8"]],[[R[24],["bitdepth"]],["bitdepth"]]]],[11,"from_u8",E,R[1556],8,[[["u8"]],[[R[24],["unit"]],["unit"]]]],[11,"size",E,"Size of the image",3,[[["self"]]]],[11,"is_animated",E,"Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,R[1557],E,"Returns the frame control information of the image",3,[[["self"]],[[R[24],[R[1558]]],[R[1558]]]]],[11,R[1559],E,"Returns the frame control information of the current frame",3,[[["self"]],[[R[24],[R[1560]]],[R[1560]]]]],[11,"bits_per_pixel",E,"Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel",E,"Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes",E,R[1561],3,[[["self"]],["usize"]]],[11,"raw_row_length",E,"Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width",E,R[1561],3,[[["self"],["u32"]],["usize"]]],[18,"IDENTITY",E,"No transformation",19,N],[18,"STRIP_16",E,"Strip 16-bit samples to 8 bits",19,N],[18,"STRIP_ALPHA",E,"Discard the alpha channel",19,N],[18,"PACKING",E,"Expand 1; 2 and 4-bit samples to bytes",19,N],[18,"PACKSWAP",E,"Change order of packed pixels to LSB first",19,N],[18,"EXPAND",E,"Expand paletted images to RGB; expand grayscale images of…",19,N],[18,"INVERT_MONO",E,"Invert monochrome images",19,N],[18,"SHIFT",E,"Normalize pixels to the sBIT depth",19,N],[18,"BGR",E,"Flip RGB to BGR; RGBA to BGRA",19,N],[18,"SWAP_ALPHA",E,"Flip RGBA to ARGB or GA to AG",19,N],[18,"SWAP_ENDIAN",E,"Byte-swap 16-bit samples",19,N],[18,"INVERT_ALPHA",E,"Change alpha from opacity to transparency",19,N],[18,"STRIP_FILLER",E,E,19,N],[18,"STRIP_FILLER_BEFORE",E,E,19,N],[18,"STRIP_FILLER_AFTER",E,E,19,N],[18,"GRAY_TO_RGB",E,E,19,N],[18,"EXPAND_16",E,E,19,N],[18,"SCALE_16",E,E,19,N],[11,"empty",E,"Returns an empty set of flags",19,[[],[R[1562]]]],[11,"all",E,"Returns the set containing all flags.",19,[[],[R[1562]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",19,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",19,[[["u32"]],[[R[24],[R[1562]]],[R[1562]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",19,[[["u32"]],[R[1562]]]],[11,R[461],E,"Returns `true` if no flags are currently stored.",19,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",19,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",19,[[["self"],[R[1562]]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",19,[[["self"],[R[1562]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",19,[[["self"],[R[1562]]]]],[11,"remove",E,"Removes the specified flags in-place.",19,[[["self"],[R[1562]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",19,[[["self"],[R[1562]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",19,[[["self"],[R[1562]],["bool"]]]],[8,R[143],E,"Configuration parameter trait",N,N],[10,R[131],E,E,20,[[["object"]]]],[8,R[1567],E,"Object has parameters",N,N],[11,"set",E,E,21,[[["self"],[R[134]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,19,[[],[U]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[R[81]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[R[81]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,13,[[],[U]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,R[131],E,E,19,[[["decoder"]]]],[11,R[131],E,E,6,[[["encoder"]]]],[11,R[131],E,E,7,[[["encoder"]]]],[11,R[131],E,E,13,[[["encoder"]]]],[11,"extend",E,E,19,[[["self"],[R[156]]]]],[11,"drop",E,E,18,[[["self"]]]],[11,R[188],E,E,5,[[],["limits"]]],[11,R[188],E,E,3,[[],["info"]]],[11,"clone",E,E,5,[[["self"]],["limits"]]],[11,"clone",E,E,13,[[["self"]],[R[1563]]]],[11,"clone",E,E,6,[[["self"]],[R[1564]]]],[11,"clone",E,E,7,[[["self"]],["bitdepth"]]],[11,"clone",E,E,0,[[["self"]],["pixeldimensions"]]],[11,"clone",E,E,8,[[["self"]],["unit"]]],[11,"clone",E,E,1,[[["self"]],[R[1560]]]],[11,"clone",E,E,2,[[["self"]],[R[1558]]]],[11,"clone",E,E,9,[[["self"]],[R[599]]]],[11,"clone",E,E,19,[[["self"]],[R[1562]]]],[11,R[153],E,E,19,[[["self"],[R[1562]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,19,[[["self"],[R[1562]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[1562]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[1562]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[1562]]],["bool"]]],[11,"cmp",E,E,19,[[["self"],[R[1562]]],[R[23]]]],[11,"eq",E,E,13,[[["self"],[R[1563]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1564]]],["bool"]]],[11,"eq",E,E,7,[[["self"],["bitdepth"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["unit"]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[1562]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[1562]]],["bool"]]],[11,"from",E,E,11,[[["error"]],[R[127]]]],[11,"from",E,E,11,[[[R[81]]],[R[127]]]],[11,"from",E,E,12,[[["error"]],[R[1555]]]],[11,"from",E,E,9,[[[R[599]]],["self"]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"sub",E,"Returns the set difference of the two sets of flags.",19,[[[R[1562]]],[R[1562]]]],[11,R[657],E,"Disables all flags enabled in the set.",19,[[["self"],[R[1562]]]]],[11,"not",E,"Returns the complement of this set of flags.",19,[[],[R[1562]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",19,[[[R[1562]]],[R[1562]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",19,[[[R[1562]]],[R[1562]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",19,[[[R[1562]]],[R[1562]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",19,[[["self"],[R[1562]]]]],[11,"bitor_assign",E,"Adds the set of flags.",19,[[["self"],[R[1562]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",19,[[["self"],[R[1562]]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,R[212],E,E,19,[[[R[156]]],[R[1562]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,11,[[["self"]],["str"]]],[11,R[93],E,E,12,[[["self"]],["str"]]],[11,"set",E,E,21,[[["self"],[R[134]]],["self"]]]],"p":[[3,R[1548]],[3,R[1550]],[3,R[1549]],[3,"Info"],[3,"OutputInfo"],[3,"Limits"],[4,R[1587]],[4,"BitDepth"],[4,"Unit"],[4,R[607]],[4,"Decoded"],[4,R[137]],[4,R[1565]],[4,R[2077]],[3,R[141]],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,R[1566]],[8,R[143]],[8,R[1567]]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[215],R[202],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[672],N,N],[3,"Literal",E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,R[213],E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal",E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,R[214],E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,R[777],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[201],R[209],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[202],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[203]]]],[11,"empty",E,E,3,[[],[R[203]]]],[11,R[461],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[205],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[204]],[R[203]]],["group"]]],[11,R[204],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[204]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[203]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,R[205],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[205],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[994],7,[[["str"],["span"]],["ident"]]],[11,"span",E,R[995],7,[[["self"]],["span"]]],[11,R[205],E,R[996],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[206],8,[[["u8"]],[R[207]]]],[11,"u16_suffixed",E,R[206],8,[[["u16"]],[R[207]]]],[11,"u32_suffixed",E,R[206],8,[[["u32"]],[R[207]]]],[11,"u64_suffixed",E,R[206],8,[[["u64"]],[R[207]]]],[11,"usize_suffixed",E,R[206],8,[[["usize"]],[R[207]]]],[11,"i8_suffixed",E,R[206],8,[[["i8"]],[R[207]]]],[11,"i16_suffixed",E,R[206],8,[[["i16"]],[R[207]]]],[11,"i32_suffixed",E,R[206],8,[[["i32"]],[R[207]]]],[11,"i64_suffixed",E,R[206],8,[[["i64"]],[R[207]]]],[11,"isize_suffixed",E,R[206],8,[[["isize"]],[R[207]]]],[11,"u128_suffixed",E,R[206],8,[[["u128"]],[R[207]]]],[11,"i128_suffixed",E,R[206],8,[[["i128"]],[R[207]]]],[11,"u8_unsuffixed",E,R[208],8,[[["u8"]],[R[207]]]],[11,"u16_unsuffixed",E,R[208],8,[[["u16"]],[R[207]]]],[11,"u32_unsuffixed",E,R[208],8,[[["u32"]],[R[207]]]],[11,"u64_unsuffixed",E,R[208],8,[[["u64"]],[R[207]]]],[11,"usize_unsuffixed",E,R[208],8,[[["usize"]],[R[207]]]],[11,"i8_unsuffixed",E,R[208],8,[[["i8"]],[R[207]]]],[11,"i16_unsuffixed",E,R[208],8,[[["i16"]],[R[207]]]],[11,"i32_unsuffixed",E,R[208],8,[[["i32"]],[R[207]]]],[11,"i64_unsuffixed",E,R[208],8,[[["i64"]],[R[207]]]],[11,"isize_unsuffixed",E,R[208],8,[[["isize"]],[R[207]]]],[11,"u128_unsuffixed",E,R[208],8,[[["u128"]],[R[207]]]],[11,"i128_unsuffixed",E,R[208],8,[[["i128"]],[R[207]]]],[11,"f64_unsuffixed",E,E,8,[[["f64"]],[R[207]]]],[11,"f64_suffixed",E,E,8,[[["f64"]],[R[207]]]],[11,"f32_unsuffixed",E,"Creates a new unsuffixed floating-point literal.",8,[[["f32"]],[R[207]]]],[11,"f32_suffixed",E,E,8,[[["f32"]],[R[207]]]],[11,R[81],E,E,8,[[["str"]],[R[207]]]],[11,"character",E,E,8,[[["char"]],[R[207]]]],[11,"byte_string",E,E,8,[[],[R[207]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,R[205],E,E,8,[[["self"],["span"]]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[R[81]]]],[11,R[22],E,E,3,[[],["i"]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[R[81]]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[R[81]]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[R[81]]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[R[81]]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",R[209],E,10,[[],[U]]],[11,R[22],E,E,10,[[],["i"]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"extend",R[202],E,3,[[["self"],[R[156]]]]],[11,"extend",E,E,3,[[["self"],[R[156]]]]],[11,R[188],E,E,3,[[],["self"]]],[11,"clone",E,E,3,[[["self"]],[R[203]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[211]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[204]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],[R[207]]]],[11,"clone",R[209],E,10,[[["self"]],[R[210]]]],[11,R[153],R[202],E,7,[[["self"],["ident"]],[[R[24],[R[23]]],[R[23]]]]],[11,"cmp",E,E,7,[[["self"],["ident"]],[R[23]]]],[11,R[22],E,E,3,[[],[R[210]]]],[11,"eq",E,E,1,[[["self"],[R[204]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["spacing"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[T]],["bool"]]],[11,"from",E,E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[203]]],[R[203]]]],[11,"from",E,E,0,[[["group"]],[R[211]]]],[11,"from",E,E,0,[[["ident"]],[R[211]]]],[11,"from",E,E,0,[[["punct"]],[R[211]]]],[11,"from",E,E,0,[[[R[207]]],[R[211]]]],[11,"next",R[209],E,10,[[["self"]],[[R[24],[R[211]]],[R[211]]]]],[11,"hash",R[202],E,7,[[["self"],["h"]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[209],E,10,[[["self"],[R[14]]],[R[2]]]],[11,R[670],R[202],E,3,[[["str"]],[[R[203]],["lexerror"],[R[2],[R[203],"lexerror"]]]]],[11,R[212],E,E,3,[[[R[156]]],["self"]]],[11,R[212],E,E,3,[[[R[156]]],["self"]]]],"p":[[4,R[213]],[4,R[214]],[4,"Spacing"],[3,R[215]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,R[201]]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[465],"quote","TokenStream extension trait with methods for appending…",N,N],[10,R[88],E,R[462],0,[[["self"],[U]]]],[10,"append_all",E,R[462],0,[[["self"],["i"]]]],[10,"append_separated",E,R[462],0,[[["self"],["i"],[U]]]],[10,"append_terminated",E,R[462],0,[[["self"],["i"],[U]]]],[8,"ToTokens",E,"Types that can be interpolated inside a [`quote!`]…",N,N],[10,R[944],E,"Write `self` to the given `TokenStream`.",1,[[["self"],[R[203]]]]],[11,R[463],E,R[464],1,[[],[R[203]]]],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,R[463],E,R[464],1,[[],[R[203]]]]],"p":[[8,R[465]],[8,"ToTokens"]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,R[1731],"rayon",R[1696],N,N],[3,R[1538],E,R[1691],N,N],[3,R[1692],E,R[1693],N,N],[3,R[1541],E,R[1694],N,N],[3,R[1539],E,R[1695],N,N],[5,R[1521],E,R[1704],N,[[],["usize"]]],[5,R[1522],E,R[1703],N,[[],[[R[24],["usize"]],["usize"]]]],[5,"join",E,R[1697],N,[[["a"],["b"]]]],[5,R[1698],E,R[1699],N,[[["a"],["b"]]]],[5,"scope",E,R[1700],N,[[["op"]],["r"]]],[3,"Scope",E,R[1517],N,N],[5,R[1701],E,R[1702],N,[[["op"]],["r"]]],[3,R[1730],E,R[1517],N,N],[5,"spawn",E,R[1518],N,[[["f"]]]],[5,R[1525],E,R[1518],N,[[["f"]]]],[0,"collections",E,"Parallel iterator types for [standard…",N,N],[0,"binary_heap",R[1590],"This module contains the parallel iterator types for heaps…",N,N],[3,R[201],R[1618],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[1590],R[1591],N,N],[3,R[201],R[1619],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[1592],N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[1590],R[1591],N,N],[3,R[201],R[1620],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[1592],N,N],[0,"hash_map",R[1590],R[1593],N,N],[3,R[201],R[1621],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[1590],R[1593],N,N],[3,R[201],R[1622],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[1590],R[1591],N,N],[3,R[201],R[1623],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[1590],R[1591],N,N],[3,R[201],R[1624],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either",R[1598],R[1594],N,N],[13,"Left",E,R[1595],0,N],[13,"Right",E,R[1596],0,N],[3,"IterBridge",E,"`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain",E,"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks",E,"`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate",E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap",E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten",E,"`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold",E,"`TryFold` is an iterator that applies a function over an…",N,N],[3,R[1683],E,"`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapInit",E,"`MapInit` is an iterator that transforms the elements of…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,"`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq",E,"An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,"Interleave",E,"`Interleave` is an iterator that interleaves elements of…",N,N],[3,R[1684],E,"`InterleaveShortest` is an iterator that works similarly…",N,N],[3,R[1685],E,"`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update",E,"`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev",E,"`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,"PanicFuse",E,"`PanicFuse` is an adaptor that wraps an iterator with a…",N,N],[3,"WhileSome",E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat",E,"Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN",E,"Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty",E,"Iterator adaptor for the `empty()` function.",N,N],[3,"Once",E,"Iterator adaptor for the `once()` function.",N,N],[5,"split",E,"The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat",E,"Creates a parallel iterator that endlessly repeats `elt`…",N,[[["clone"],["send"]],[["send"],["clone"],["repeat"]]]],[5,"repeatn",E,"Creates a parallel iterator that produces `n` repeats of…",N,[[["clone"],["usize"],["send"]],[["clone"],["repeatn"],["send"]]]],[5,"empty",E,"Creates a parallel iterator that produces nothing.",N,[[],[["empty"],["send"]]]],[5,"once",E,"Creates a parallel iterator that produces an element…",N,[[["send"]],[["once"],["send"]]]],[0,"plumbing",E,"Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,"This helper function is used to \"connect\" a producer and a…",N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,"A variant of [`bridge_producer_consumer`] where the…",N,[[["c"],["p"]]]],[8,R[1670],E,"The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output",E,"The type of value returned by this callback. Analogous to…",1,N],[10,"callback",E,"Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer",E,"A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item",E,"The type of item that will be produced by this producer…",2,N],[16,R[201],E,"The type of iterator we will become.",2,N],[10,R[22],E,"Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len",E,"The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len",E,"The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at",E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with",E,R[1597],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder",E,"The type of folder that this consumer can be converted into.",3,N],[16,"Reducer",E,"The type of reducer that is produced if this consumer is…",3,N],[16,"Result",E,"The type of result that this consumer will ultimately…",3,N],[10,"split_at",E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,"The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result",E,"The type of result that will ultimately be produced by the…",4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,"The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[2]]],[R[2]]]],[8,R[1671],E,"A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left",E,"Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer",E,"Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,R[1672],E,"A variant on `Producer` which does not know its exact…",N,N],[16,"Item",E,"The type of item returned by this producer.",7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with",E,R[1597],7,[[["f"]],["f"]]],[11,"take",R[1598],"Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip",E,"Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,R[1611],E,R[1612],N,N],[10,R[2007],E,R[1613],9,[[],[R[1636]]]],[8,R[1673],E,"`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The parallel iterator type that will be created.",10,N],[16,"Item",E,"The type of item that the parallel iterator will produce.",10,N],[10,R[1617],E,R[1599],10,[[]]],[8,R[1674],E,"`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The type of the parallel iterator that will be returned.",11,N],[16,"Item",E,"The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter",E,R[1599],11,[[["self"]]]],[8,R[1675],E,"`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter",E,"The type of iterator that will be created.",12,N],[16,"Item",E,"The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut",E,"Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,R[1676],E,"Parallel version of the standard iterator trait.",N,N],[16,"Item",E,"The type of item that this parallel iterator produces. For…",13,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",13,[[["op"],[T]]]],[11,"for_each_init",E,"Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each",E,"Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with",E,"Executes a fallible `OP` on the given `init` value with…",13,[[["op"],[T]],["r"]]],[11,"try_for_each_init",E,"Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count",E,"Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",13,[[[T],["f"]],["mapwith"]]],[11,"map_init",E,"Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update",E,"Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten",E,"An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce",E,R[1600],13,[[["op"],["id"]]]],[11,"reduce_with",E,R[1600],13,[[["op"]],[R[24]]]],[11,"try_reduce",E,R[1601],13,[[["op"],["id"]]]],[11,"try_reduce_with",E,R[1601],13,[[["op"]],[R[24]]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with",E,"Applies `fold_op` to the given `init` value with each item…",13,[[[T],["f"]],["foldwith"]]],[11,"try_fold",E,"Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with",E,"Perform a fallible parallel fold with a cloneable `init`…",13,[[[T],["f"]],[R[1637]]]],[11,"sum",E,"Sums up the items in the iterator.",13,[[],["s"]]],[11,"product",E,"Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",13,[[],[R[24]]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",13,[[["f"]],[R[24]]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",13,[[["f"]],[R[24]]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",13,[[],[R[24]]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",13,[[["f"]],[R[24]]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",13,[[["f"]],[R[24]]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any",E,R[1603],13,[[["p"]],[R[24]]]],[11,"find_first",E,R[1609],13,[[["p"]],[R[24]]]],[11,"find_last",E,R[1610],13,[[["p"]],[R[24]]]],[11,"find_map_any",E,R[1602],13,[[["p"]],[R[24]]]],[11,"find_map_first",E,R[1602],13,[[["p"]],[R[24]]]],[11,"find_map_last",E,R[1602],13,[[["p"]],[R[24]]]],[11,"any",E,R[1603],13,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some",E,"Creates an iterator over the `Some` items of this…",13,[[],["whilesome"]]],[11,"panic_fuse",E,"Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect",E,"Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition",E,"Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,"partition_map",E,"Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,R[1604],E,"Intersperses clones of an element between items of this…",13,[[],[R[1604]]]],[10,R[1631],E,R[1605],13,[[["c"]]]],[11,"opt_len",E,R[1605],13,[[["self"]],[["usize"],[R[24],["usize"]]]]],[8,R[1677],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec",E,"Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs",E,"Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq",E,"The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,R[1638],E,R[1606],14,[[["i"]],[R[1638]]]],[11,"interleave_shortest",E,R[1606],14,[[["i"]],[R[1639]]]],[11,"chunks",E,"Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp",E,R[1607],14,[[["i"]],[R[23]]]],[11,R[153],E,R[1607],14,[[["i"]],[[R[24],[R[23]]],[R[23]]]]],[11,"eq",E,R[1608],14,[[["i"]],["bool"]]],[11,"ne",E,R[1608],14,[[["i"]],["bool"]]],[11,"lt",E,R[1608],14,[[["i"]],["bool"]]],[11,"le",E,R[1608],14,[[["i"]],["bool"]]],[11,"gt",E,R[1608],14,[[["i"]],["bool"]]],[11,"ge",E,R[1608],14,[[["i"]],["bool"]]],[11,"enumerate",E,"Yields an index along with each item.",14,[[],["enumerate"]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any",E,R[1603],14,[[["p"]],[["usize"],[R[24],["usize"]]]]],[11,"position_first",E,R[1609],14,[[["p"]],[["usize"],[R[24],["usize"]]]]],[11,"position_last",E,R[1610],14,[[["p"]],[["usize"],[R[24],["usize"]]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive",E,R[1605],14,[[[R[1635]]]]],[10,R[1634],E,R[1605],14,[[["producercallback"]]]],[8,R[1678],E,"`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter",E,"Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,R[1679],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend",E,"Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,R[24],"rayon","Parallel iterator types for [options][std::option]",N,N],[3,R[201],R[1625],"A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter",E,"A parallel iterator over a reference to the [`Some`]…",N,N],[3,"IterMut",E,"A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,R[1611],"rayon::prelude",R[1612],N,N],[10,R[2007],E,R[1613],9,[[],[R[1636]]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter",R[1626],"Parallel iterator over a range, implemented for all…",N,N],[0,R[1614],"rayon","Parallel iterator types for [inclusive…",N,N],[3,"Iter",R[1627],"Parallel iterator over an inclusive range, implemented for…",N,N],[0,R[2],"rayon","Parallel iterator types for [results][std::result]",N,N],[3,R[201],R[1628],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter",R[1629],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,"IterMut",E,"Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut",E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[1680],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split",E,"Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[1615],17,[[["self"],["usize"]],["chunks"]]],[8,R[1681],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[1615],18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars",R[1632],"Parallel iterator over the characters of a string",N,N],[3,R[1686],E,"Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes",E,"Parallel iterator over the bytes of a string",N,N],[3,R[1687],E,"Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[1688],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[1689],E,"Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches",E,"Parallel iterator over substrings that match a pattern",N,N],[3,R[1690],E,"Parallel iterator over substrings that match a pattern,…",N,N],[8,R[1682],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices",E,"Returns a parallel iterator over the characters of a…",19,[[["self"]],[R[1640]]]],[11,"par_bytes",E,"Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16",E,"Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],[R[1641]]]],[11,"par_split",E,"Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["pattern"],[R[1642]]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],[R[1643]]]],[11,"par_matches",E,R[1616],19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices",E,R[1616],19,[[["self"],["pattern"]],[[R[1644]],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,R[201],R[1633],"Parallel iterator that moves out of a vector.",N,N],[11,"into","rayon",E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"into",E,E,23,[[],[U]]],[11,R[82],E,E,23,[[["self"]],[R[81]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,R[1617],R[1618],E,27,[[],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[83],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,R[1617],E,E,28,[[],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[83],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,R[1617],R[1619],E,29,[[],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,R[1617],E,E,30,[[],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[83],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,R[1617],E,E,31,[[],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,R[1617],R[1620],E,32,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,R[1617],E,E,33,[[],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[83],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,R[1617],R[1621],E,34,[[],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,R[1617],E,E,35,[[],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[83],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,R[1617],E,E,36,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,R[1617],R[1622],E,37,[[],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,R[1617],E,E,38,[[],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[83],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"],[T]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,R[1617],R[1623],E,39,[[],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[83],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"],[T]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,R[1617],E,E,40,[[],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[83],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"],[T]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,R[1617],E,E,41,[[],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,R[1617],R[1624],E,42,[[],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[83],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"],[T]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,R[1617],E,E,43,[[],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[83],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"],[T]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,R[1617],E,E,44,[[],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,R[1617],R[1598],E,0,[[],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,R[22],E,E,0,[[],["i"]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[1617],E,E,45,[[],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[83],E,E,45,[[["self"]],[T]]],[11,R[84],E,E,45,[[["self"],[T]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,R[1617],E,E,46,[[],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[83],E,E,46,[[["self"]],[T]]],[11,R[84],E,E,46,[[["self"],[T]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,R[1617],E,E,47,[[],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[83],E,E,47,[[["self"]],[T]]],[11,R[84],E,E,47,[[["self"],[T]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,R[1617],E,E,48,[[],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[83],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"],[T]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,R[1617],E,E,49,[[],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[83],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"],[T]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,R[1617],E,E,50,[[],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[83],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"],[T]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,R[1617],E,E,51,[[],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[83],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"],[T]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,R[1617],E,E,52,[[],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[83],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"],[T]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,R[1617],E,E,53,[[],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[83],E,E,53,[[["self"]],[T]]],[11,R[84],E,E,53,[[["self"],[T]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,R[1617],E,E,54,[[],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[83],E,E,54,[[["self"]],[T]]],[11,R[84],E,E,54,[[["self"],[T]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,R[1617],E,E,55,[[],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[83],E,E,55,[[["self"]],[T]]],[11,R[84],E,E,55,[[["self"],[T]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,R[1617],E,E,56,[[],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[83],E,E,56,[[["self"]],[T]]],[11,R[84],E,E,56,[[["self"],[T]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,R[1617],E,E,57,[[],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[83],E,E,57,[[["self"]],[T]]],[11,R[84],E,E,57,[[["self"],[T]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,R[1617],E,E,58,[[],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[83],E,E,58,[[["self"]],[T]]],[11,R[84],E,E,58,[[["self"],[T]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,R[1617],E,E,59,[[],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[83],E,E,59,[[["self"]],[T]]],[11,R[84],E,E,59,[[["self"],[T]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,R[1617],E,E,60,[[],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[83],E,E,60,[[["self"]],[T]]],[11,R[84],E,E,60,[[["self"],[T]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,R[1617],E,E,61,[[],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[83],E,E,61,[[["self"]],[T]]],[11,R[84],E,E,61,[[["self"],[T]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,R[1617],E,E,62,[[],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[83],E,E,62,[[["self"]],[T]]],[11,R[84],E,E,62,[[["self"],[T]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,R[1617],E,E,63,[[],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[83],E,E,63,[[["self"]],[T]]],[11,R[84],E,E,63,[[["self"],[T]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,R[1617],E,E,64,[[],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[83],E,E,64,[[["self"]],[T]]],[11,R[84],E,E,64,[[["self"],[T]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,R[1617],E,E,65,[[],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[83],E,E,65,[[["self"]],[T]]],[11,R[84],E,E,65,[[["self"],[T]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,R[1617],E,E,66,[[],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[83],E,E,66,[[["self"]],[T]]],[11,R[84],E,E,66,[[["self"],[T]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,R[1617],E,E,67,[[],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[83],E,E,67,[[["self"]],[T]]],[11,R[84],E,E,67,[[["self"],[T]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[1617],E,E,68,[[],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[83],E,E,68,[[["self"]],[T]]],[11,R[84],E,E,68,[[["self"],[T]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,R[1617],E,E,69,[[],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[83],E,E,69,[[["self"]],[T]]],[11,R[84],E,E,69,[[["self"],[T]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,R[1617],E,E,70,[[],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[83],E,E,70,[[["self"]],[T]]],[11,R[84],E,E,70,[[["self"],[T]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,R[1617],E,E,71,[[],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[83],E,E,71,[[["self"]],[T]]],[11,R[84],E,E,71,[[["self"],[T]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,R[1617],E,E,72,[[],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[83],E,E,72,[[["self"]],[T]]],[11,R[84],E,E,72,[[["self"],[T]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,R[1617],E,E,73,[[],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[83],E,E,73,[[["self"]],[T]]],[11,R[84],E,E,73,[[["self"],[T]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,R[1617],E,E,74,[[],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[83],E,E,74,[[["self"]],[T]]],[11,R[84],E,E,74,[[["self"],[T]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[8],E,E,74,[[[U]],[R[2]]]],[11,R[9],E,E,74,[[],[R[2]]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,R[1617],E,E,75,[[],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[83],E,E,75,[[["self"]],[T]]],[11,R[84],E,E,75,[[["self"],[T]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[8],E,E,75,[[[U]],[R[2]]]],[11,R[9],E,E,75,[[],[R[2]]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[29]]]],[11,R[1617],E,E,8,[[],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,R[1617],E,E,76,[[],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[83],E,E,76,[[["self"]],[T]]],[11,R[84],E,E,76,[[["self"],[T]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[8],E,E,76,[[[U]],[R[2]]]],[11,R[9],E,E,76,[[],[R[2]]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[29]]]],[11,R[1617],E,E,77,[[],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[83],E,E,77,[[["self"]],[T]]],[11,R[84],E,E,77,[[["self"],[T]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[8],E,E,77,[[[U]],[R[2]]]],[11,R[9],E,E,77,[[],[R[2]]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[29]]]],[11,R[1617],E,E,78,[[],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[83],E,E,78,[[["self"]],[T]]],[11,R[84],E,E,78,[[["self"],[T]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[8],E,E,78,[[[U]],[R[2]]]],[11,R[9],E,E,78,[[],[R[2]]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[29]]]],[11,R[1617],R[1625],E,79,[[],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[83],E,E,79,[[["self"]],[T]]],[11,R[84],E,E,79,[[["self"],[T]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[8],E,E,79,[[[U]],[R[2]]]],[11,R[9],E,E,79,[[],[R[2]]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[29]]]],[11,R[1617],E,E,80,[[],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[83],E,E,80,[[["self"]],[T]]],[11,R[84],E,E,80,[[["self"],[T]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[8],E,E,80,[[[U]],[R[2]]]],[11,R[9],E,E,80,[[],[R[2]]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[29]]]],[11,R[1617],E,E,81,[[],[T]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[8],E,E,81,[[[U]],[R[2]]]],[11,R[9],E,E,81,[[],[R[2]]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[29]]]],[11,R[1617],R[1626],E,82,[[],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[83],E,E,82,[[["self"]],[T]]],[11,R[84],E,E,82,[[["self"],[T]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[8],E,E,82,[[[U]],[R[2]]]],[11,R[9],E,E,82,[[],[R[2]]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[29]]]],[11,R[1617],R[1627],E,83,[[],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[83],E,E,83,[[["self"]],[T]]],[11,R[84],E,E,83,[[["self"],[T]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[8],E,E,83,[[[U]],[R[2]]]],[11,R[9],E,E,83,[[],[R[2]]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[29]]]],[11,R[1617],R[1628],E,84,[[],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[83],E,E,84,[[["self"]],[T]]],[11,R[84],E,E,84,[[["self"],[T]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[8],E,E,84,[[[U]],[R[2]]]],[11,R[9],E,E,84,[[],[R[2]]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[29]]]],[11,R[1617],E,E,85,[[],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[83],E,E,85,[[["self"]],[T]]],[11,R[84],E,E,85,[[["self"],[T]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[8],E,E,85,[[[U]],[R[2]]]],[11,R[9],E,E,85,[[],[R[2]]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[29]]]],[11,R[1617],E,E,86,[[],[T]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[8],E,E,86,[[[U]],[R[2]]]],[11,R[9],E,E,86,[[],[R[2]]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[29]]]],[11,R[1617],R[1629],E,87,[[],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[83],E,E,87,[[["self"]],[T]]],[11,R[84],E,E,87,[[["self"],[T]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[8],E,E,87,[[[U]],[R[2]]]],[11,R[9],E,E,87,[[],[R[2]]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[29]]]],[11,R[1617],E,E,88,[[],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[83],E,E,88,[[["self"]],[T]]],[11,R[84],E,E,88,[[["self"],[T]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[8],E,E,88,[[[U]],[R[2]]]],[11,R[9],E,E,88,[[],[R[2]]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[29]]]],[11,R[1617],E,E,89,[[],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[83],E,E,89,[[["self"]],[T]]],[11,R[84],E,E,89,[[["self"],[T]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[8],E,E,89,[[[U]],[R[2]]]],[11,R[9],E,E,89,[[],[R[2]]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[29]]]],[11,R[1617],E,E,90,[[],[T]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[8],E,E,90,[[[U]],[R[2]]]],[11,R[9],E,E,90,[[],[R[2]]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[28],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[29]]]],[11,R[1617],E,E,91,[[],[T]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[8],E,E,91,[[[U]],[R[2]]]],[11,R[9],E,E,91,[[],[R[2]]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[29]]]],[11,R[1617],E,E,92,[[],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[83],E,E,92,[[["self"]],[T]]],[11,R[84],E,E,92,[[["self"],[T]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[8],E,E,92,[[[U]],[R[2]]]],[11,R[9],E,E,92,[[],[R[2]]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[29]]]],[11,R[1617],E,E,93,[[],[T]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[8],E,E,93,[[[U]],[R[2]]]],[11,R[9],E,E,93,[[],[R[2]]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[29]]]],[11,R[1617],R[1632],E,94,[[],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[83],E,E,94,[[["self"]],[T]]],[11,R[84],E,E,94,[[["self"],[T]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[8],E,E,94,[[[U]],[R[2]]]],[11,R[9],E,E,94,[[],[R[2]]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[29]]]],[11,R[1617],E,E,95,[[],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[83],E,E,95,[[["self"]],[T]]],[11,R[84],E,E,95,[[["self"],[T]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[8],E,E,95,[[[U]],[R[2]]]],[11,R[9],E,E,95,[[],[R[2]]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[29]]]],[11,R[1617],E,E,96,[[],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[83],E,E,96,[[["self"]],[T]]],[11,R[84],E,E,96,[[["self"],[T]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[8],E,E,96,[[[U]],[R[2]]]],[11,R[9],E,E,96,[[],[R[2]]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[29]]]],[11,R[1617],E,E,97,[[],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[83],E,E,97,[[["self"]],[T]]],[11,R[84],E,E,97,[[["self"],[T]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[8],E,E,97,[[[U]],[R[2]]]],[11,R[9],E,E,97,[[],[R[2]]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[28],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[29]]]],[11,R[1617],E,E,98,[[],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[83],E,E,98,[[["self"]],[T]]],[11,R[84],E,E,98,[[["self"],[T]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[8],E,E,98,[[[U]],[R[2]]]],[11,R[9],E,E,98,[[],[R[2]]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[28],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[29]]]],[11,R[1617],E,E,99,[[],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[83],E,E,99,[[["self"]],[T]]],[11,R[84],E,E,99,[[["self"],[T]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[8],E,E,99,[[[U]],[R[2]]]],[11,R[9],E,E,99,[[],[R[2]]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[28],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[29]]]],[11,R[1617],E,E,100,[[],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[83],E,E,100,[[["self"]],[T]]],[11,R[84],E,E,100,[[["self"],[T]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[8],E,E,100,[[[U]],[R[2]]]],[11,R[9],E,E,100,[[],[R[2]]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[28],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[29]]]],[11,R[1617],E,E,101,[[],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[83],E,E,101,[[["self"]],[T]]],[11,R[84],E,E,101,[[["self"],[T]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[8],E,E,101,[[[U]],[R[2]]]],[11,R[9],E,E,101,[[],[R[2]]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[28],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[29]]]],[11,R[1617],E,E,102,[[],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[83],E,E,102,[[["self"]],[T]]],[11,R[84],E,E,102,[[["self"],[T]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[8],E,E,102,[[[U]],[R[2]]]],[11,R[9],E,E,102,[[],[R[2]]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[28],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[29]]]],[11,R[1617],E,E,103,[[],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[83],E,E,103,[[["self"]],[T]]],[11,R[84],E,E,103,[[["self"],[T]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[8],E,E,103,[[[U]],[R[2]]]],[11,R[9],E,E,103,[[],[R[2]]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[28],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[29]]]],[11,R[1617],R[1633],E,104,[[],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[83],E,E,104,[[["self"]],[T]]],[11,R[84],E,E,104,[[["self"],[T]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[8],E,E,104,[[[U]],[R[2]]]],[11,R[9],E,E,104,[[],[R[2]]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[28],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[29]]]],[11,"as_mut",R[1598],E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"eq",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"from",E,E,0,[[[R[2]]],[R[17]]]],[11,"clone",E,E,0,[[["self"]],[R[17]]]],[11,R[153],E,E,0,[[["self"],[R[17]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[17]]],["bool"]]],[11,"into",E,E,0,[[],[R[2]]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[155],E,E,0,[[["self"]],[R[24]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"cmp",E,E,0,[[["self"],[R[17]]],[R[23]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[13],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"next",E,E,0,[[["self"]],[R[24]]]],[11,R[154],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[24]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[24]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"fmt","rayon",E,23,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,R[93],E,E,23,[[["self"]],["str"]]],[11,"fmt",E,E,23,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,20,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,21,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,26,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,22,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,24,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,R[188],E,E,24,[[],[[R[1645],[R[1630]]],[R[1630]]]]],[11,"drop",E,E,22,[[["self"]]]],[11,R[1631],R[1618],E,27,[[["c"]]]],[11,"opt_len",E,E,27,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,28,[[["c"]]]],[11,"opt_len",E,E,28,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1619],E,29,[[["c"]]]],[11,"opt_len",E,E,29,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,30,[[["c"]]]],[11,"opt_len",E,E,30,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,31,[[["c"]]]],[11,"opt_len",E,E,31,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1620],E,32,[[["c"]]]],[11,"opt_len",E,E,32,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,33,[[["c"]]]],[11,"opt_len",E,E,33,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1621],E,34,[[["c"]]]],[11,"opt_len",E,E,34,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,35,[[["c"]]]],[11,"opt_len",E,E,35,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,36,[[["c"]]]],[11,"opt_len",E,E,36,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1622],E,37,[[["c"]]]],[11,"opt_len",E,E,37,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,38,[[["c"]]]],[11,"opt_len",E,E,38,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1623],E,39,[[["c"]]]],[11,"opt_len",E,E,39,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,40,[[["c"]]]],[11,"opt_len",E,E,40,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,41,[[["c"]]]],[11,"opt_len",E,E,41,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1624],E,42,[[["c"]]]],[11,"opt_len",E,E,42,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,43,[[["c"]]]],[11,"opt_len",E,E,43,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,44,[[["c"]]]],[11,"opt_len",E,E,44,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1598],E,45,[[["c"]]]],[11,R[1631],E,E,46,[[["c"]]]],[11,"opt_len",E,E,46,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,47,[[["c"]]]],[11,"opt_len",E,E,47,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,48,[[["c"]]]],[11,"opt_len",E,E,48,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,49,[[["c"]]]],[11,R[1631],E,E,50,[[["c"]]]],[11,R[1631],E,E,51,[[["c"]]]],[11,R[1631],E,E,52,[[["c"]]]],[11,R[1631],E,E,53,[[["c"]]]],[11,R[1631],E,E,54,[[["c"]]]],[11,R[1631],E,E,55,[[["c"]]]],[11,R[1631],E,E,56,[[["c"]]]],[11,R[1631],E,E,57,[[["c"]]]],[11,"opt_len",E,E,57,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,58,[[["c"]]]],[11,R[1631],E,E,59,[[["c"]]]],[11,"opt_len",E,E,59,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,60,[[["c"]]]],[11,"opt_len",E,E,60,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,62,[[["c"]]]],[11,"opt_len",E,E,62,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,63,[[["c"]]]],[11,"opt_len",E,E,63,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,64,[[["c"]]]],[11,"opt_len",E,E,64,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,65,[[["c"]]]],[11,"opt_len",E,E,65,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,66,[[["c"]]]],[11,"opt_len",E,E,66,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,67,[[["c"]]]],[11,"opt_len",E,E,67,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,68,[[["c"]]]],[11,"opt_len",E,E,68,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,69,[[["c"]]]],[11,"opt_len",E,E,69,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,71,[[["c"]]]],[11,"opt_len",E,E,71,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,70,[[["c"]]]],[11,"opt_len",E,E,70,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,72,[[["c"]]]],[11,"opt_len",E,E,72,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,73,[[["c"]]]],[11,"opt_len",E,E,73,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,74,[[["c"]]]],[11,"opt_len",E,E,74,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,75,[[["c"]]]],[11,R[1631],E,E,8,[[["c"]]]],[11,R[1631],E,E,76,[[["c"]]]],[11,"opt_len",E,E,76,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,77,[[["c"]]]],[11,"opt_len",E,E,77,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,78,[[["c"]]]],[11,"opt_len",E,E,78,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1625],E,79,[[["c"]]]],[11,"opt_len",E,E,79,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,80,[[["c"]]]],[11,"opt_len",E,E,80,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,81,[[["c"]]]],[11,"opt_len",E,E,81,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1626],E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1627],E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1628],E,84,[[["c"]]]],[11,"opt_len",E,E,84,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,85,[[["c"]]]],[11,"opt_len",E,E,85,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,86,[[["c"]]]],[11,"opt_len",E,E,86,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1629],E,87,[[["c"]]]],[11,"opt_len",E,E,87,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,88,[[["c"]]]],[11,"opt_len",E,E,88,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,89,[[["c"]]]],[11,"opt_len",E,E,89,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,90,[[["c"]]]],[11,"opt_len",E,E,90,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,91,[[["c"]]]],[11,"opt_len",E,E,91,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],E,E,92,[[["c"]]]],[11,R[1631],E,E,93,[[["c"]]]],[11,R[1631],R[1632],E,94,[[["c"]]]],[11,R[1631],E,E,95,[[["c"]]]],[11,R[1631],E,E,96,[[["c"]]]],[11,R[1631],E,E,97,[[["c"]]]],[11,R[1631],E,E,98,[[["c"]]]],[11,R[1631],E,E,99,[[["c"]]]],[11,R[1631],E,E,100,[[["c"]]]],[11,R[1631],E,E,101,[[["c"]]]],[11,R[1631],E,E,102,[[["c"]]]],[11,R[1631],E,E,103,[[["c"]]]],[11,R[1631],R[1633],E,104,[[["c"]]]],[11,"opt_len",E,E,104,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1631],R[1598],E,0,[[["c"]]]],[11,"opt_len",E,E,0,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"drive",R[1618],E,27,[[["c"]]]],[11,"len",E,E,27,[[["self"]],["usize"]]],[11,R[1634],E,E,27,[[["cb"]]]],[11,"drive",E,E,28,[[["c"]]]],[11,"len",E,E,28,[[["self"]],["usize"]]],[11,R[1634],E,E,28,[[["cb"]]]],[11,"drive",R[1624],E,42,[[["c"]]]],[11,"len",E,E,42,[[["self"]],["usize"]]],[11,R[1634],E,E,42,[[["cb"]]]],[11,"drive",E,E,43,[[["c"]]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,R[1634],E,E,43,[[["cb"]]]],[11,"drive",E,E,44,[[["c"]]]],[11,"len",E,E,44,[[["self"]],["usize"]]],[11,R[1634],E,E,44,[[["cb"]]]],[11,"drive",R[1598],E,46,[[["c"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,R[1634],E,E,46,[[["cb"]]]],[11,"drive",E,E,47,[[["c"]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[1634],E,E,47,[[["cb"]]]],[11,"drive",E,E,48,[[[R[1635]]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,R[1634],E,E,48,[[["cb"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"drive",E,E,57,[[[R[1635]]]]],[11,R[1634],E,E,57,[[["cb"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"drive",E,E,59,[[[R[1635]]]]],[11,R[1634],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[1634],E,E,60,[[["cb"]]]],[11,"drive",E,E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[1634],E,E,62,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1634],E,E,61,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[1634],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[1634],E,E,64,[[["cb"]]]],[11,"drive",E,E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[1634],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[1634],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[1634],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[1634],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[[R[1635]]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[1634],E,E,69,[[["cb"]]]],[11,"drive",E,E,71,[[[R[1635]]]]],[11,"len",E,E,71,[[["self"]],["usize"]]],[11,R[1634],E,E,71,[[["cb"]]]],[11,"drive",E,E,70,[[[R[1635]]]]],[11,"len",E,E,70,[[["self"]],["usize"]]],[11,R[1634],E,E,70,[[["cb"]]]],[11,"drive",E,E,72,[[["c"]]]],[11,"len",E,E,72,[[["self"]],["usize"]]],[11,R[1634],E,E,72,[[["cb"]]]],[11,"drive",E,E,73,[[["c"]]]],[11,"len",E,E,73,[[["self"]],["usize"]]],[11,R[1634],E,E,73,[[["cb"]]]],[11,"drive",E,E,74,[[["c"]]]],[11,"len",E,E,74,[[["self"]],["usize"]]],[11,R[1634],E,E,74,[[["cb"]]]],[11,"drive",E,E,76,[[["c"]]]],[11,R[1634],E,E,76,[[["cb"]]]],[11,"len",E,E,76,[[["self"]],["usize"]]],[11,"drive",E,E,77,[[["c"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,R[1634],E,E,77,[[["cb"]]]],[11,"drive",E,E,78,[[["c"]]]],[11,"len",E,E,78,[[["self"]],["usize"]]],[11,R[1634],E,E,78,[[["cb"]]]],[11,"drive",R[1625],E,79,[[["c"]]]],[11,"len",E,E,79,[[["self"]],["usize"]]],[11,R[1634],E,E,79,[[["cb"]]]],[11,"drive",E,E,80,[[["c"]]]],[11,"len",E,E,80,[[["self"]],["usize"]]],[11,R[1634],E,E,80,[[["cb"]]]],[11,"drive",E,E,81,[[["c"]]]],[11,"len",E,E,81,[[["self"]],["usize"]]],[11,R[1634],E,E,81,[[["cb"]]]],[11,"drive",R[1626],E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1634],E,E,82,[[["cb"]]]],[11,"drive",R[1627],E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1634],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1634],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1634],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1634],E,E,83,[[["cb"]]]],[11,"drive",R[1628],E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[1634],E,E,84,[[["cb"]]]],[11,"drive",E,E,85,[[["c"]]]],[11,"len",E,E,85,[[["self"]],["usize"]]],[11,R[1634],E,E,85,[[["cb"]]]],[11,"drive",E,E,86,[[["c"]]]],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[1634],E,E,86,[[["cb"]]]],[11,"drive",R[1629],E,87,[[["c"]]]],[11,"len",E,E,87,[[["self"]],["usize"]]],[11,R[1634],E,E,87,[[["cb"]]]],[11,"drive",E,E,88,[[["c"]]]],[11,"len",E,E,88,[[["self"]],["usize"]]],[11,R[1634],E,E,88,[[["cb"]]]],[11,"drive",E,E,89,[[["c"]]]],[11,"len",E,E,89,[[["self"]],["usize"]]],[11,R[1634],E,E,89,[[["cb"]]]],[11,"drive",E,E,90,[[["c"]]]],[11,"len",E,E,90,[[["self"]],["usize"]]],[11,R[1634],E,E,90,[[["cb"]]]],[11,"drive",E,E,91,[[["c"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[1634],E,E,91,[[["cb"]]]],[11,"drive",R[1633],E,104,[[["c"]]]],[11,"len",E,E,104,[[["self"]],["usize"]]],[11,R[1634],E,E,104,[[["cb"]]]],[11,"drive",R[1598],E,0,[[["c"]]]],[11,"len",E,E,0,[[["self"]],["usize"]]],[11,R[1634],E,E,0,[[["cb"]]]],[11,"par_extend",E,E,0,[[["self"],["i"]]]],[11,"clone",R[1618],E,27,[[["self"]],[R[210]]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",R[1619],E,30,[[["self"]],["self"]]],[11,"clone",R[1620],E,33,[[["self"]],["self"]]],[11,"clone",R[1621],E,35,[[["self"]],["self"]]],[11,"clone",R[1622],E,38,[[["self"]],["self"]]],[11,"clone",R[1623],E,39,[[["self"]],[R[210]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",R[1624],E,42,[[["self"]],[R[210]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",R[1598],E,45,[[["self"]],[R[1636]]]],[11,"clone",E,E,46,[[["self"]],["chain"]]],[11,"clone",E,E,47,[[["self"]],["chunks"]]],[11,"clone",E,E,48,[[["self"]],["enumerate"]]],[11,"clone",E,E,49,[[["self"]],["filter"]]],[11,"clone",E,E,50,[[["self"]],["filtermap"]]],[11,"clone",E,E,51,[[["self"]],["flatmap"]]],[11,"clone",E,E,52,[[["self"]],["flatten"]]],[11,"clone",E,E,53,[[["self"]],["fold"]]],[11,"clone",E,E,54,[[["self"]],["foldwith"]]],[11,"clone",E,E,55,[[["self"]],["tryfold"]]],[11,"clone",E,E,56,[[["self"]],[R[1637]]]],[11,"clone",E,E,57,[[["self"]],["skip"]]],[11,"clone",E,E,58,[[["self"]],["split"]]],[11,"clone",E,E,59,[[["self"]],["take"]]],[11,"clone",E,E,60,[[["self"]],["map"]]],[11,"clone",E,E,62,[[["self"]],["mapwith"]]],[11,"clone",E,E,61,[[["self"]],["mapinit"]]],[11,"clone",E,E,63,[[["self"]],["zip"]]],[11,"clone",E,E,64,[[["self"]],["zipeq"]]],[11,"clone",E,E,65,[[["self"]],[R[1638]]]],[11,"clone",E,E,66,[[["self"]],[R[1639]]]],[11,"clone",E,E,67,[[["self"]],[R[1604]]]],[11,"clone",E,E,68,[[["self"]],["update"]]],[11,"clone",E,E,69,[[["self"]],["rev"]]],[11,"clone",E,E,71,[[["self"]],["minlen"]]],[11,"clone",E,E,70,[[["self"]],["maxlen"]]],[11,"clone",E,E,72,[[["self"]],["cloned"]]],[11,"clone",E,E,73,[[["self"]],["inspect"]]],[11,"clone",E,E,74,[[["self"]],["panicfuse"]]],[11,"clone",E,E,75,[[["self"]],["whilesome"]]],[11,"clone",E,E,8,[[["self"]],["repeat"]]],[11,"clone",E,E,76,[[["self"]],["repeatn"]]],[11,"clone",E,E,77,[[["self"]],["self"]]],[11,"clone",E,E,78,[[["self"]],["once"]]],[11,"clone",R[1625],E,79,[[["self"]],[R[210]]]],[11,"clone",E,E,80,[[["self"]],["self"]]],[11,"clone",R[1626],E,82,[[["self"]],["iter"]]],[11,"clone",R[1627],E,83,[[["self"]],["iter"]]],[11,"clone",R[1628],E,84,[[["self"]],[R[210]]]],[11,"clone",E,E,85,[[["self"]],["self"]]],[11,"clone",R[1629],E,87,[[["self"]],["self"]]],[11,"clone",E,E,88,[[["self"]],["self"]]],[11,"clone",E,E,89,[[["self"]],["self"]]],[11,"clone",E,E,92,[[["self"]],["self"]]],[11,"clone",R[1632],E,94,[[["self"]],["chars"]]],[11,"clone",E,E,95,[[["self"]],[R[1640]]]],[11,"clone",E,E,96,[[["self"]],["bytes"]]],[11,"clone",E,E,97,[[["self"]],[R[1641]]]],[11,"clone",E,E,98,[[["self"]],["split"]]],[11,"clone",E,E,99,[[["self"]],[R[1642]]]],[11,"clone",E,E,100,[[["self"]],["lines"]]],[11,"clone",E,E,101,[[["self"]],[R[1643]]]],[11,"clone",E,E,102,[[["self"]],["matches"]]],[11,"clone",E,E,103,[[["self"]],[R[1644]]]],[11,"clone",R[1633],E,104,[[["self"]],[R[210]]]],[11,"fmt",R[1618],E,27,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1619],E,29,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1620],E,32,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1621],E,34,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1622],E,37,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1623],E,39,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1624],E,42,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1598],E,45,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,51,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,52,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,53,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,55,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,56,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,57,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,58,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,59,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,60,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,62,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,61,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,63,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,64,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,65,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,66,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,67,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,68,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,69,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,71,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,70,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,72,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,73,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,74,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,75,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,76,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,77,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,78,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1625],E,79,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,80,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,81,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1626],E,82,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1627],E,83,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1628],E,84,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,85,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,86,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1629],E,87,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,88,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,89,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,90,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,91,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,92,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,93,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1632],E,94,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,95,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,96,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,97,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,98,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,99,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,100,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,101,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,102,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,103,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1633],E,104,[[["self"],[R[14]]],[R[2]]]],[11,"migrated","rayon",R[1729],20,[[["self"]],["bool"]]],[11,"index",E,R[1705],21,[[["self"]],["usize"]]],[11,"name",E,R[1706],21,[[["self"]],[[R[24],["str"]],["str"]]]],[11,R[1530],E,R[1707],21,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,"run",E,R[1708],21,[[]]],[11,"new",E,R[1531],22,[[[R[1520]]],[[R[2],[R[1527],"box"]],["box",["error"]],[R[1527]]]]],[11,"install",E,R[1709],22,[[["self"],["op"]],["r"]]],[11,R[1521],E,R[1710],22,[[["self"]],["usize"]]],[11,R[1522],E,R[1711],22,[[["self"]],[[R[24],["usize"]],["usize"]]]],[11,R[1523],E,R[1712],22,[[["self"]],[["bool"],[R[24],["bool"]]]]],[11,"join",E,R[1713],22,[[["self"],["a"],["b"]]]],[11,"scope",E,R[1524],22,[[["self"],["op"]],["r"]]],[11,R[1701],E,R[1524],22,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[1526],22,[[["self"],["op"]]]],[11,R[1525],E,R[1526],22,[[["self"],["op"]]]],[11,"new",E,R[1714],24,[[],[[R[1645],[R[1630]]],[R[1630]]]]],[11,"build",E,R[1715],24,[[],[[R[1527]],[R[1528]],[R[2],[R[1527],R[1528]]]]]],[11,R[1716],E,R[1717],24,[[],[[R[2],[R[1528]]],[R[1528]]]]],[11,R[1718],E,R[1719],24,[[["w"],["f"]],[[R[1528]],[R[2],[R[1528]]]]]],[11,R[1720],E,R[1721],24,[[["f"]],[[R[1645],[R[1529]]],[R[1529]]]]],[11,R[1532],E,R[1722],24,[[["f"]],[R[1645]]]],[11,R[1533],E,R[1723],24,[[["usize"]],[R[1645]]]],[11,R[1534],E,R[1724],24,[[["h"]],[R[1645]]]],[11,R[1530],E,R[1725],24,[[["usize"]],[R[1645]]]],[11,R[1535],E,R[1726],24,[[],[R[1645]]]],[11,R[1536],E,R[1727],24,[[["h"]],[R[1645]]]],[11,R[1537],E,R[1728],24,[[["h"]],[R[1645]]]],[11,"spawn",E,R[1519],25,[[["self"],["body"]]]],[11,R[1525],E,R[1519],26,[[["self"],["body"]]]],[11,"is_left",R[1598],R[1646],0,[[["self"]],["bool"]]],[11,"is_right",E,R[1647],0,[[["self"]],["bool"]]],[11,"left",E,R[1648],0,[[],[R[24]]]],[11,"right",E,R[1649],0,[[],[R[24]]]],[11,"as_ref",E,R[1650],0,[[["self"]],[["l"],["r"],[R[17]]]]],[11,"as_mut",E,R[1651],0,[[["self"]],[[R[17]],["l"],["r"]]]],[11,"flip",E,R[1652],0,[[],[R[17]]]],[11,"map_left",E,R[18],0,[[["f"]],[R[17]]]],[11,"map_right",E,R[19],0,[[["f"]],[R[17]]]],[11,R[17],E,R[1653],0,[[["f"],["g"]],[T]]],[11,R[1654],E,R[1655],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[1656],E,R[18],0,[[["f"]],[R[17]]]],[11,R[1657],E,R[19],0,[[["f"]],[R[17]]]],[11,R[22],E,R[1658],0,[[],[R[17]]]],[11,"left_or",E,R[1659],0,[[["l"]],["l"]]],[11,R[1660],E,R[1661],0,[[],["l"]]],[11,R[1662],E,R[20],0,[[["f"]],["l"]]],[11,"right_or",E,R[1663],0,[[["r"]],["r"]]],[11,R[1664],E,R[1665],0,[[],["r"]]],[11,R[1666],E,R[20],0,[[["f"]],["r"]]],[11,R[1667],E,R[21],0,[[]]],[11,R[1668],E,R[21],0,[[]]],[11,R[25],E,R[1669],0,[[],[T]]]],"p":[[4,"Either"],[8,R[1670]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[1671]],[8,R[1672]],[3,"Repeat"],[8,R[1611]],[8,R[1673]],[8,R[1674]],[8,R[1675]],[8,R[1676]],[8,R[1677]],[8,R[1678]],[8,R[1679]],[8,R[1680]],[8,R[1681]],[8,R[1682]],[3,R[1731]],[3,R[1538]],[3,R[1692]],[3,R[1541]],[3,R[1539]],[3,"Scope"],[3,R[1730]],[3,R[201]],[3,"Iter"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,R[201]],[3,"Iter"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,R[201]],[3,"Iter"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,R[1683]],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"Interleave"],[3,R[1684]],[3,R[1685]],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,R[1686]],[3,"Bytes"],[3,R[1687]],[3,"Split"],[3,R[1688]],[3,"Lines"],[3,R[1689]],[3,"Matches"],[3,R[1690]],[3,R[201]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[1538],"rayon_core",R[1691],N,N],[3,"Scope",E,R[1517],N,N],[3,R[1730],E,R[1517],N,N],[3,R[1692],E,R[1693],N,N],[3,R[1541],E,R[1694],N,N],[3,R[1539],E,R[1695],N,N],[3,R[1540],E,"Contains the rayon thread pool configuration. Use…",N,N],[3,R[1731],E,R[1696],N,N],[5,"join",E,R[1697],N,[[["a"],["b"]]]],[5,R[1698],E,R[1699],N,[[["a"],["b"]]]],[5,"scope",E,R[1700],N,[[["op"]],["r"]]],[5,R[1701],E,R[1702],N,[[["op"]],["r"]]],[5,"spawn",E,R[1518],N,[[["f"]]]],[5,R[1525],E,R[1518],N,[[["f"]]]],[5,R[1523],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[[R[24],["bool"]],["bool"]]]],[5,R[1522],E,R[1703],N,[[],[["usize"],[R[24],["usize"]]]]],[5,R[1521],E,R[1704],N,[[],["usize"]]],[5,"initialize",E,"Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[[R[1520]]],[[R[2],["box"]],["box",["error"]]]]],[11,"index",E,R[1705],0,[[["self"]],["usize"]]],[11,"name",E,R[1706],0,[[["self"]],[["str"],[R[24],["str"]]]]],[11,R[1530],E,R[1707],0,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,"run",E,R[1708],0,[[]]],[11,"spawn",E,R[1519],1,[[["self"],["body"]]]],[11,R[1525],E,R[1519],2,[[["self"],["body"]]]],[11,"new",E,R[1531],3,[[[R[1520]]],[[R[1527]],["box",["error"]],[R[2],[R[1527],"box"]]]]],[11,"install",E,R[1709],3,[[["self"],["op"]],["r"]]],[11,R[1521],E,R[1710],3,[[["self"]],["usize"]]],[11,R[1522],E,R[1711],3,[[["self"]],[["usize"],[R[24],["usize"]]]]],[11,R[1523],E,R[1712],3,[[["self"]],[[R[24],["bool"]],["bool"]]]],[11,"join",E,R[1713],3,[[["self"],["a"],["b"]]]],[11,"scope",E,R[1524],3,[[["self"],["op"]],["r"]]],[11,R[1701],E,R[1524],3,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[1526],3,[[["self"],["op"]]]],[11,R[1525],E,R[1526],3,[[["self"],["op"]]]],[11,"new",E,R[1714],4,[[],["self"]]],[11,"build",E,R[1715],4,[[],[[R[1527]],[R[2],[R[1527],R[1528]]],[R[1528]]]]],[11,R[1716],E,R[1717],4,[[],[[R[2],[R[1528]]],[R[1528]]]]],[11,R[1718],E,R[1719],4,[[["w"],["f"]],[[R[2],[R[1528]]],[R[1528]]]]],[11,R[1720],E,R[1721],4,[[["f"]],[[R[1645],[R[1529]]],[R[1529]]]]],[11,R[1532],E,R[1722],4,[[["f"]],["self"]]],[11,R[1533],E,R[1723],4,[[["usize"]],["self"]]],[11,R[1534],E,R[1724],4,[[["h"]],["self"]]],[11,R[1530],E,R[1725],4,[[["usize"]],["self"]]],[11,R[1535],E,R[1726],4,[[],["self"]]],[11,R[1536],E,R[1727],4,[[["h"]],["self"]]],[11,R[1537],E,R[1728],4,[[["h"]],["self"]]],[11,"new",E,"Creates and return a valid rayon thread pool…",5,[[],[R[1520]]]],[11,"build",E,R[1531],5,[[],[[R[1527]],[R[2],[R[1527],"box"]],["box",["error"]]]]],[11,R[1532],E,"Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,R[1533],E,"Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],[R[1520]]]],[11,R[1534],E,"Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],[R[1520]]]],[11,R[1530],E,"Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,R[1535],E,"Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,R[1536],E,"Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],[R[1520]]]],[11,R[1537],E,"Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],[R[1520]]]],[11,"migrated",E,R[1729],6,[[["self"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[R[81]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"drop",E,E,3,[[["self"]]]],[11,R[188],E,E,4,[[],["self"]]],[11,R[188],E,E,5,[[],["self"]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[1538]],[3,"Scope"],[3,R[1730]],[3,R[1692]],[3,R[1539]],[3,R[1540]],[3,R[1731]],[3,R[1541]]]};
searchIndex["rusttype"]={"doc":"RustType is a pure Rust alternative to libraries like…","i":[[3,"Curve","rusttype","A quadratic Bezier curve, starting at `p[0]`, ending at…",N,N],[12,"p",E,E,0,N],[3,"Line",E,"A straight line between two points, `p[0]` and `p[1]`",N,N],[12,"p",E,E,1,N],[3,"Point",E,"A point in 2-dimensional space, with each dimension of…",N,N],[12,"x",E,E,2,N],[12,"y",E,E,2,N],[3,"Rect",E,"A rectangle, with top-left corner at `min`, and…",N,N],[12,"min",E,E,3,N],[12,"max",E,E,3,N],[3,"Vector",E,"A vector in 2-dimensional space, with each dimension of…",N,N],[12,"x",E,E,4,N],[12,"y",E,E,4,N],[3,R[1510],E,"A collection of fonts read straight from a font file's…",N,N],[3,"Font",E,"A single font. This may or may not own the font data.",N,N],[3,"Codepoint",E,"Represents a Unicode code point.",N,N],[12,"0",E,E,5,N],[3,"GlyphId",E,"Represents a glyph identifier for a particular font. This…",N,N],[12,"0",E,E,6,N],[3,"Glyph",E,"A single glyph of a font. this may either be a thin…",N,N],[3,R[1507],E,E,N,N],[12,"id",E,E,7,N],[12,"extents",E,E,7,N],[12,"scale_for_1_pixel",E,E,7,N],[12,"unit_h_metrics",E,E,7,N],[12,"shape",E,E,7,N],[3,"HMetrics",E,"The \"horizontal metrics\" of a glyph. This is useful for…",N,N],[12,R[1514],E,"The horizontal offset that the origin of the next glyph…",8,N],[12,R[1515],E,"The horizontal offset between the origin of this glyph and…",8,N],[3,"VMetrics",E,"The \"vertical metrics\" of a font at a particular scale.…",N,N],[12,"ascent",E,"The highest point that any glyph in the font extends to…",9,N],[12,"descent",E,"The lowest point that any glyph in the font extends to…",9,N],[12,"line_gap",E,"The gap to leave between the descent of one line and the…",9,N],[3,R[1511],E,"A glyph augmented with scaling information. You can query…",N,N],[3,R[1512],E,"A glyph augmented with positioning and scaling…",N,N],[3,"Scale",E,"Defines the size of a rendered face of a font, in pixels,…",N,N],[12,"x",E,"Horizontal scale, in pixels.",10,N],[12,"y",E,"Vertical scale, in pixels.",10,N],[3,R[1513],E,E,N,N],[3,"GlyphIter",E,E,N,N],[3,"LayoutIter",E,E,N,N],[3,"Contour",E,"A closed loop consisting of a sequence of `Segment`s.",N,N],[12,"segments",E,E,11,N],[4,R[1508],E,"`SharedBytes` handles the lifetime of font data used in…",N,N],[13,"ByRef",E,E,12,N],[13,"ByArc",E,E,12,N],[4,"Segment",E,"Part of a `Contour`, either a `Line` or a `Curve`.",N,N],[13,"Line",E,E,13,N],[13,"Curve",E,E,13,N],[4,"Error",E,"The type for errors returned by rusttype.",N,N],[13,"UnrecognizedFormat",E,"Font data presented to rusttype is not in a format that…",14,N],[13,"IllFormed",E,"Font data presented to rusttype was ill-formed (lacking…",14,N],[13,"CollectionIndexOutOfBounds",E,"The caller tried to access the `i`'th font from a…",14,N],[13,"CollectionContainsMultipleFonts",E,"The caller tried to convert a `FontCollection` into a font…",14,N],[5,"point",E,"A convenience function for generating `Point`s.",N,[[["n"]],["point"]]],[5,"vector",E,"A convenience function for generating `Vector`s.",N,[[["n"]],["vector"]]],[11,"width",E,E,3,[[["self"]],["n"]]],[11,"height",E,E,3,[[["self"]],["n"]]],[8,R[1509],E,"A trait for types that can be converted into a `GlyphId`,…",N,N],[10,R[1505],E,"Convert `self` into a `GlyphId`, consulting the index map…",15,[[["font"]],["glyphid"]]],[11,"uniform",E,"Uniform scaling, equivalent to `Scale { x: s, y: s }`.",10,[[["f32"]],["scale"]]],[11,"from_bytes",E,"Constructs a font collection from an array of bytes,…",16,[[["into",[R[1497]]],[R[1497]]],[["error"],[R[2],[R[1498],"error"]],[R[1498]]]]],[11,"into_font",E,"If this `FontCollection` holds a single font, or a…",16,[[],[["error"],["font"],[R[2],["font","error"]]]]],[11,"font_at",E,"Gets the font at index `i` in the font collection, if it…",16,[[["self"],["usize"]],[["error"],["font"],[R[2],["font","error"]]]]],[11,"into_fonts",E,"Converts `self` into an `Iterator` yielding each `Font`…",16,[[],["intofontsiter"]]],[11,"from_bytes",E,"Constructs a font from an array of bytes, this is a…",17,[[["into",[R[1497]]],[R[1497]]],[["error"],["font"],[R[2],["font","error"]]]]],[11,"v_metrics",E,"The \"vertical metrics\" for this font at a given scale.…",17,[[["self"],["scale"]],[R[623]]]],[11,"v_metrics_unscaled",E,"Get the unscaled VMetrics for this font, shared by all…",17,[[["self"]],[R[623]]]],[11,R[1516],E,"Returns the units per EM square of this font",17,[[["self"]],["u16"]]],[11,"glyph_count",E,"The number of glyphs present in this font. Glyph…",17,[[["self"]],["usize"]]],[11,"glyph",E,"Returns the corresponding glyph for a Unicode code point…",17,[[["self"],["intoglyphid"]],["glyph"]]],[11,"glyphs_for",E,"A convenience function.",17,[[["self"],[R[2256]]],[["glyphiter"],[R[2256]]]]],[11,"font_name_strings",E,"Returns an iterator over the names for this font.",17,[[["self"]],[[R[617],[R[1497]]],[R[1497]]]]],[11,"layout",E,"A convenience function for laying out glyphs for a string…",17,[[["point",["f32"]],["f32"],["scale"],["self"],["str"]],["layoutiter"]]],[11,"pair_kerning",E,"Returns additional kerning to apply as well as that given…",17,[[["self"],["a"],["scale"],["b"]],["f32"]]],[11,"font",E,R[1500],18,[[["self"]],[[R[24],["font"]],["font"]]]],[11,"id",E,R[1499],18,[[["self"]],["glyphid"]]],[11,"scaled",E,"Augments this glyph with scaling information, making…",18,[[["scale"]],[R[1501]]]],[11,R[1502],E,"Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces…",18,[[["self"]],["glyph"]]],[11,"get_data",E,"Get the data from this glyph (such as width, extents,…",18,[[["self"]],[["arc",["sharedglyphdata"]],[R[24],["arc"]]]]],[11,"id",E,R[1499],19,[[["self"]],["glyphid"]]],[11,"font",E,R[1500],19,[[["self"]],[[R[24],["font"]],["font"]]]],[11,"into_unscaled",E,"A reference to this glyph without the scaling",19,[[],["glyph"]]],[11,"unscaled",E,"Removes the scaling from this glyph",19,[[["self"]],["glyph"]]],[11,"positioned",E,"Augments this glyph with positioning information, making…",19,[[["point",["f32"]],["f32"]],[R[1504]]]],[11,"scale",E,E,19,[[["self"]],["scale"]]],[11,"h_metrics",E,"Retrieves the \"horizontal metrics\" of this glyph. See…",19,[[["self"]],[R[616]]]],[11,"shape",E,"Produces a list of the contours that make up the shape of…",19,[[["self"]],[["vec",["contour"]],[R[24],["vec"]]]]],[11,"exact_bounding_box",E,"The bounding box of the shape of this glyph, not to be…",19,[[["self"]],[["rect",["f32"]],[R[24],["rect"]]]]],[11,R[1502],E,R[1503],19,[[["self"]],[R[1501]]]],[11,"id",E,R[1499],20,[[["self"]],["glyphid"]]],[11,"font",E,R[1500],20,[[["self"]],[[R[24],["font"]],["font"]]]],[11,"unpositioned",E,"A reference to this glyph without positioning",20,[[["self"]],[R[1501]]]],[11,"into_unpositioned",E,"Removes the positioning from this glyph",20,[[],[R[1501]]]],[11,"pixel_bounding_box",E,"The conservative pixel-boundary bounding box for this…",20,[[["self"]],[["rect",["i32"]],[R[24],["rect"]]]]],[11,"shape",E,"Similar to `ScaledGlyph::shape()`, but with the position…",20,[[["self"]],[["vec",["contour"]],[R[24],["vec"]]]]],[11,"scale",E,E,20,[[["self"]],["scale"]]],[11,R[91],E,E,20,[[["self"]],[["point",["f32"]],["f32"]]]],[11,"draw",E,"Rasterises this glyph. For each pixel in the rect given by…",20,[[["self"],["fnmut"]]]],[11,R[1502],E,R[1503],20,[[["self"]],[R[1504]]]],[11,"set_position",E,"Resets positioning information and recalculates the pixel…",20,[[["self"],["point",["f32"]],["f32"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,16,[[],[U]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"into",E,E,17,[[],[U]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,18,[[],[U]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,19,[[],[U]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"into",E,E,20,[[],[U]]],[11,R[83],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"into",E,E,21,[[],[U]]],[11,R[22],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"into",E,E,22,[[],[U]]],[11,R[22],E,E,22,[[],["i"]]],[11,R[83],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"into",E,E,23,[[],[U]]],[11,R[22],E,E,23,[[],["i"]]],[11,R[83],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",E,E,12,[[],[U]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,13,[[],[U]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[R[81]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,R[1505],E,E,5,[[["font"]],["glyphid"]]],[11,R[1505],E,E,6,[[["font"]],["glyphid"]]],[11,"clone",E,E,2,[[["self"]],["point"]]],[11,"clone",E,E,4,[[["self"]],["vector"]]],[11,"clone",E,E,1,[[["self"]],["line"]]],[11,"clone",E,E,0,[[["self"]],["curve"]]],[11,"clone",E,E,3,[[["self"]],["rect"]]],[11,"clone",E,E,16,[[["self"]],[R[1498]]]],[11,"clone",E,E,17,[[["self"]],["font"]]],[11,"clone",E,E,12,[[["self"]],[R[1497]]]],[11,"clone",E,E,5,[[["self"]],[R[1506]]]],[11,"clone",E,E,6,[[["self"]],["glyphid"]]],[11,"clone",E,E,18,[[["self"]],["glyph"]]],[11,"clone",E,E,8,[[["self"]],[R[616]]]],[11,"clone",E,E,9,[[["self"]],[R[623]]]],[11,"clone",E,E,19,[[["self"]],[R[1501]]]],[11,"clone",E,E,20,[[["self"]],[R[1504]]]],[11,"clone",E,E,10,[[["self"]],["scale"]]],[11,"clone",E,E,22,[[["self"]],["glyphiter"]]],[11,"clone",E,E,23,[[["self"]],["layoutiter"]]],[11,"clone",E,E,13,[[["self"]],["segment"]]],[11,"clone",E,E,11,[[["self"]],["contour"]]],[11,R[153],E,E,2,[[["self"],["point"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,2,[[["self"],["point"]],["bool"]]],[11,"le",E,E,2,[[["self"],["point"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["point"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["point"]],["bool"]]],[11,R[153],E,E,4,[[["self"],["vector"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"le",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"gt",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"ge",E,E,4,[[["self"],["vector"]],["bool"]]],[11,R[153],E,E,1,[[["self"],["line"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,1,[[["self"],["line"]],["bool"]]],[11,"le",E,E,1,[[["self"],["line"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["line"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["line"]],["bool"]]],[11,R[153],E,E,0,[[["self"],["curve"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"le",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["curve"]],["bool"]]],[11,R[153],E,E,3,[[["self"],["rect"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"le",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["rect"]],["bool"]]],[11,R[153],E,E,5,[[["self"],[R[1506]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,5,[[["self"],[R[1506]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[1506]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[1506]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[1506]]],["bool"]]],[11,R[153],E,E,6,[[["self"],["glyphid"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"le",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,R[153],E,E,8,[[["self"],[R[616]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,8,[[["self"],[R[616]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[616]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[616]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[616]]],["bool"]]],[11,R[153],E,E,9,[[["self"],[R[623]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"le",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"gt",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"ge",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,R[153],E,E,10,[[["self"],["scale"]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"le",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"cmp",E,E,2,[[["self"],["point"]],[R[23]]]],[11,"cmp",E,E,4,[[["self"],["vector"]],[R[23]]]],[11,"cmp",E,E,3,[[["self"],["rect"]],[R[23]]]],[11,"cmp",E,E,5,[[["self"],[R[1506]]],[R[23]]]],[11,"cmp",E,E,6,[[["self"],["glyphid"]],[R[23]]]],[11,"eq",E,E,2,[[["self"],["point"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["point"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["line"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["line"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1506]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1506]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[616]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[616]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"from",E,E,12,[[],[R[1497]]]],[11,"from",E,E,12,[[["arc"]],[R[1497]]]],[11,"from",E,E,12,[[["box"]],[R[1497]]]],[11,"from",E,E,12,[[["vec",["u8"]],["u8"]],[R[1497]]]],[11,"from",E,E,12,[[[T]],[R[1497]]]],[11,"from",E,E,9,[[[R[623]]],["self"]]],[11,"next",E,E,21,[[["self"]],[R[24]]]],[11,"next",E,E,22,[[["self"]],[[R[24],["glyph"]],["glyph"]]]],[11,"next",E,E,23,[[["self"]],[[R[24],[R[1504]]],[R[1504]]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"add",E,E,4,[[["vector"]],["vector"]]],[11,"add",E,E,2,[[["vector"]],["point"]]],[11,"add",E,E,4,[[["point"]],["point"]]],[11,"sub",E,E,2,[[["point"]],["vector"]]],[11,"sub",E,E,4,[[["vector"]],["vector"]]],[11,"sub",E,E,2,[[["vector"]],["point"]]],[11,"mul",E,E,4,[[["f32"]],[["f32"],["vector",["f32"]]]]],[11,"mul",E,E,4,[[["f64"]],[["vector",["f64"]],["f64"]]]],[11,"mul",E,E,9,[[["f32"]],["self"]]],[11,"div",E,E,4,[[["f32"]],[["f32"],["vector",["f32"]]]]],[11,"div",E,E,4,[[["f64"]],[["vector",["f64"]],["f64"]]]],[11,"deref",E,E,12,[[["self"]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,14,[[["self"]],["str"]]]],"p":[[3,"Curve"],[3,"Line"],[3,"Point"],[3,"Rect"],[3,"Vector"],[3,"Codepoint"],[3,"GlyphId"],[3,R[1507]],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,R[1508]],[4,"Segment"],[4,"Error"],[8,R[1509]],[3,R[1510]],[3,"Font"],[3,"Glyph"],[3,R[1511]],[3,R[1512]],[3,R[1513]],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["scoped_threadpool"]={"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads…",N,N],[3,"Scope",E,"Handle to the scope during which the threadpool is borrowed.",N,N],[11,"new",E,"Construct a threadpool with the given number of threads.…",0,[[["u32"]],["pool"]]],[11,"scoped",E,"Borrows the pool and allows executing jobs on other…",0,[[["self"],["f"]],["r"]]],[11,"thread_count",E,"Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute",E,"Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all",E,"Blocks until all currently queued jobs have run to…",1,[[["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,"Pool"],[3,"Scope"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[16],R[6],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[7]],[R[6],[R[7]]]]]],[8,R[15],E,E,N,N],[10,R[12],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[6]]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind",E,"Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[12],E,E,2,[[],["bool"]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]]],"p":[[8,R[15]],[3,R[16]],[4,"Always"]]};
searchIndex["stb_truetype"]={"doc":E,"i":[[3,"FontInfo","stb_truetype",E,N,N],[3,"Vertex",E,E,N,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[12,"cx",E,E,0,N],[12,"cy",E,E,0,N],[3,"Rect",E,E,N,N],[12,"x0",E,E,1,N],[12,"y0",E,E,1,N],[12,"x1",E,E,1,N],[12,"y1",E,E,1,N],[3,"HMetrics",E,E,N,N],[12,R[1514],E,E,2,N],[12,R[1515],E,E,2,N],[3,"VMetrics",E,E,N,N],[12,"ascent",E,E,3,N],[12,"descent",E,E,3,N],[12,"line_gap",E,E,3,N],[3,R[630],E,E,N,N],[4,R[624],E,E,N,N],[13,"MoveTo",E,E,4,N],[13,"LineTo",E,E,4,N],[13,"CurveTo",E,E,4,N],[4,R[625],E,E,N,N],[13,"Unicode",E,E,5,N],[13,"Mac",E,E,5,N],[13,"Iso",E,E,5,N],[13,R[613],E,E,5,N],[4,R[626],E,E,N,N],[13,"Unicode_1_0",E,E,6,N],[13,"Unicode_1_1",E,E,6,N],[13,"Iso_10646",E,E,6,N],[13,"Unicode_2_0_Bmp",E,E,6,N],[13,"Unicode_2_0_Full",E,E,6,N],[4,R[627],E,E,N,N],[13,"Symbol",E,E,7,N],[13,"UnicodeBMP",E,E,7,N],[13,"Shiftjis",E,E,7,N],[13,"UnicodeFull",E,E,7,N],[4,"MacEid",E,E,N,N],[13,"Roman",E,E,8,N],[13,"Arabic",E,E,8,N],[13,R[611],E,E,8,N],[13,"Hebrew",E,E,8,N],[13,R[612],E,E,8,N],[13,"Greek",E,E,8,N],[13,"Korean",E,E,8,N],[13,"Russian",E,E,8,N],[4,R[628],E,E,N,N],[13,"English",E,E,9,N],[13,"Italian",E,E,9,N],[13,"Chinese",E,E,9,N],[13,R[611],E,E,9,N],[13,"Dutch",E,E,9,N],[13,"Korean",E,E,9,N],[13,"French",E,E,9,N],[13,"Russian",E,E,9,N],[13,"German",E,E,9,N],[13,"Hebrew",E,E,9,N],[13,"Swedish",E,E,9,N],[4,"MacLang",E,E,N,N],[13,"English",E,E,10,N],[13,R[611],E,E,10,N],[13,"Arabic",E,E,10,N],[13,"Korean",E,E,10,N],[13,"Dutch",E,E,10,N],[13,"Russian",E,E,10,N],[13,"French",E,E,10,N],[13,"Spanish",E,E,10,N],[13,"German",E,E,10,N],[13,"Swedish",E,E,10,N],[13,"Hebrew",E,E,10,N],[13,"ChineseSimplified",E,E,10,N],[13,"Italian",E,E,10,N],[13,R[612],E,E,10,N],[4,R[629],E,E,N,N],[13,"Unicode",E,E,11,N],[13,"Mac",E,E,11,N],[13,"Iso",E,E,11,N],[13,R[613],E,E,11,N],[5,"is_font",E,"Return `true` if `data` holds a font stored in a format…",N,[[],["bool"]]],[5,"is_collection",E,"Return `true` if `data` holds a TrueType Collection,…",N,[[],["bool"]]],[5,"get_font_offset_for_index",E,"Each .ttf/.ttc file may have more than one font. Each font…",N,[[["i32"]],[["u32"],[R[24],["u32"]]]]],[11,"vertex_type",E,E,0,[[["self"]],[R[615]]]],[11,"new",E,"Given an offset into the file that defines a font, this…",12,[[["data"],["usize"]],[[R[24],[R[614]]],[R[614]]]]],[11,"get_num_glyphs",E,E,12,[[["self"]],["u32"]]],[11,"find_glyph_index",E,"If you're going to perform multiple operations on the same…",12,[[["self"],["u32"]],["u32"]]],[11,"get_codepoint_shape",E,"Returns the series of vertices encoding the shape of the…",12,[[["self"],["u32"]],[["vec",["vertex"]],[R[24],["vec"]]]]],[11,"get_glyph_box",E,"Like `get_codepoint_box`, but takes a glyph index. Use…",12,[[["self"],["u32"]],[["rect",["i16"]],[R[24],["rect"]]]]],[11,"get_codepoint_box",E,"Gets the bounding box of the visible part of the glyph, in…",12,[[["self"],["u32"]],[["rect",["i16"]],[R[24],["rect"]]]]],[11,"is_glyph_empty",E,"returns true if nothing is drawn for this glyph",12,[[["self"],["u32"]],["bool"]]],[11,"get_glyph_shape",E,"Like `get_codepoint_shape`, but takes a glyph index…",12,[[["self"],["u32"]],[["vec",["vertex"]],[R[24],["vec"]]]]],[11,"get_glyph_h_metrics",E,"like `get_codepoint_h_metrics`, but takes a glyph index…",12,[[["self"],["u32"]],[R[616]]]],[11,"get_glyph_kern_advance",E,"like `get_codepoint_kern_advance`, but takes glyph indices…",12,[[["self"],["u32"]],["i32"]]],[11,"get_codepoint_kern_advance",E,"an additional amount to add to the 'advance' value between…",12,[[["self"],["u32"]],["i32"]]],[11,"get_codepoint_h_metrics",E,"`left_side_bearing` is the offset from the current…",12,[[["self"],["u32"]],[R[616]]]],[11,"get_v_metrics",E,"`ascent` is the coordinate above the baseline the font…",12,[[["self"]],[R[623]]]],[11,"get_bounding_box",E,"the bounding box around all possible characters",12,[[["self"]],[["rect",["i16"]],["i16"]]]],[11,"scale_for_pixel_height",E,"computes a scale factor to produce a font whose \"height\"…",12,[[["self"],["f32"]],["f32"]]],[11,R[1516],E,"Returns the units per EM square of this font.",12,[[["self"]],["u16"]]],[11,"scale_for_mapping_em_to_pixels",E,"computes a scale factor to produce a font whose EM size is…",12,[[["self"],["f32"]],["f32"]]],[11,"get_glyph_bitmap_box_subpixel",E,"like `get_codepoint_bitmap_box_subpixel`, but takes a…",12,[[["self"],["u32"],["f32"]],[[R[24],["rect"]],["rect",["i32"]]]]],[11,"get_glyph_bitmap_box",E,"like `get_codepoint_bitmap_box`, but takes a glyph index…",12,[[["self"],["u32"],["f32"]],[[R[24],["rect"]],["rect",["i32"]]]]],[11,"get_codepoint_bitmap_box_subpixel",E,"same as get_codepoint_bitmap_box, but you can specify a…",12,[[["self"],["u32"],["f32"]],[[R[24],["rect"]],["rect",["i32"]]]]],[11,"get_codepoint_bitmap_box",E,"get the bounding box of the bitmap centered around the…",12,[[["self"],["u32"],["f32"]],[[R[24],["rect"]],["rect",["i32"]]]]],[11,"get_font_name_strings",E,E,12,[[["self"]],[R[617]]]],[11,"into",E,E,12,[[],[U]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,13,[[],[U]]],[11,R[22],E,E,13,[[],["i"]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"clone",E,E,12,[[["self"]],[R[614]]]],[11,"clone",E,E,0,[[["self"]],["vertex"]]],[11,"clone",E,E,4,[[["self"]],[R[615]]]],[11,"clone",E,E,1,[[["self"]],["rect"]]],[11,"clone",E,E,2,[[["self"]],[R[616]]]],[11,"clone",E,E,3,[[["self"]],[R[623]]]],[11,"clone",E,E,5,[[["self"]],[R[618]]]],[11,"clone",E,E,6,[[["self"]],[R[619]]]],[11,"clone",E,E,7,[[["self"]],[R[620]]]],[11,"clone",E,E,8,[[["self"]],["maceid"]]],[11,"clone",E,E,9,[[["self"]],[R[621]]]],[11,"clone",E,E,10,[[["self"]],["maclang"]]],[11,"clone",E,E,11,[[["self"]],[R[622]]]],[11,"clone",E,E,13,[[["self"]],[R[617]]]],[11,R[153],E,E,5,[[["self"],[R[618]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,6,[[["self"],[R[619]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,7,[[["self"],[R[620]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,8,[[["self"],["maceid"]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,9,[[["self"],[R[621]]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,10,[[["self"],["maclang"]],[[R[23]],[R[24],[R[23]]]]]],[11,R[153],E,E,11,[[["self"],[R[622]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,11,[[["self"],[R[622]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[622]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[622]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[622]]],["bool"]]],[11,"cmp",E,E,5,[[["self"],[R[618]]],[R[23]]]],[11,"cmp",E,E,6,[[["self"],[R[619]]],[R[23]]]],[11,"cmp",E,E,7,[[["self"],[R[620]]],[R[23]]]],[11,"cmp",E,E,8,[[["self"],["maceid"]],[R[23]]]],[11,"cmp",E,E,9,[[["self"],[R[621]]],[R[23]]]],[11,"cmp",E,E,10,[[["self"],["maclang"]],[R[23]]]],[11,"cmp",E,E,11,[[["self"],[R[622]]],[R[23]]]],[11,"eq",E,E,0,[[["self"],["vertex"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["vertex"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[615]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["rect"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["rect"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[616]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[616]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[623]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[623]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[618]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[619]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[620]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["maceid"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[621]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["maclang"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[622]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[622]]],["bool"]]],[11,"next",E,E,13,[[["self"]],[R[24]]]],[11,R[154],E,E,13,[[["self"]]]],[11,"count",E,E,13,[[],["usize"]]],[11,"last",E,E,13,[[],[R[24]]]],[11,"nth",E,E,13,[[["self"],["usize"]],[R[24]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]]],"p":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,R[624]],[4,R[625]],[4,R[626]],[4,R[627]],[4,"MacEid"],[4,R[628]],[4,"MacLang"],[4,R[629]],[3,"FontInfo"],[3,R[630]]]};
searchIndex["svg"]={"doc":"An SVG composer and parser.","i":[[5,"open","svg","Open a document.",N,[[[T]],[[R[2],[R[79]]],[R[79]]]]],[5,"read",E,"Read a document.",N,[[[T]],[[R[2],[R[79]]],[R[79]]]]],[5,"save",E,"Save a document.",N,[[[U],[T]],[R[2]]]],[5,"write",E,"Write a document.",N,[[[U],[T]],[R[2]]]],[0,"node",E,"The nodes.",N,N],[3,"Text",R[78],"A text node.",N,N],[3,"Value",E,"A value of an attribute.",N,N],[11,"new",E,R[75],0,[[[T]],["self"]]],[0,"element",E,"The element nodes.",N,N],[3,R[95],R[62],"An `animate` element.",N,N],[3,R[63],E,"An `animateColor` element.",N,N],[3,R[64],E,"An `animateMotion` element.",N,N],[3,R[65],E,"An `animateTransform` element.",N,N],[3,"Circle",E,"A `circle` element.",N,N],[3,R[66],E,"A `clipPath` element.",N,N],[3,R[67],E,"A `defs` element.",N,N],[3,R[68],E,"A `desc` element.",N,N],[3,R[96],E,"An `ellipse` element.",N,N],[3,"Filter",E,"A `filter` element.",N,N],[3,"Group",E,"A `g` element.",N,N],[3,"Image",E,"An `image` element.",N,N],[3,"Line",E,"A `line` element.",N,N],[3,R[69],E,"A `linearGradient` element.",N,N],[3,"Link",E,"An `a` element.",N,N],[3,"Marker",E,"A `marker` element.",N,N],[3,"Mask",E,"A `mask` element.",N,N],[3,R[70],E,"An `mpath` element.",N,N],[3,"Path",E,"A `path` element.",N,N],[3,R[97],E,"A `pattern` element.",N,N],[3,R[98],E,"A `polygon` element.",N,N],[3,R[71],E,"A `polyline` element.",N,N],[3,R[72],E,"A `radialGradient` element.",N,N],[3,R[73],E,"A `rect` element.",N,N],[3,"Stop",E,"A `stop` element.",N,N],[3,"Symbol",E,"A `symbol` element.",N,N],[3,"Text",E,"A `text` element.",N,N],[3,R[74],E,"A `textPath` element.",N,N],[3,"Title",E,"A `title` element.",N,N],[3,"Use",E,"A `use` element.",N,N],[3,"SVG",E,"An `svg` element.",N,N],[3,"Script",E,"A `script` element.",N,N],[3,"Style",E,"A `style` element.",N,N],[0,"path",E,"The path element.",N,N],[3,"Data",R[85],"A [data][1] attribute.",N,N],[3,R[99],E,"Parameters of a command.",N,N],[4,"Command",E,"A command of a data attribute.",N,N],[13,"Move",E,"[Establish][1] a new current point.",1,N],[13,"Line",E,"[Draw][1] straight lines.",1,N],[13,"HorizontalLine",E,"[Draw][1] horizontal lines.",1,N],[13,"VerticalLine",E,"[Draw][1] vertical lines.",1,N],[13,"QuadraticCurve",E,"[Draw][1] a quadratic Bézier curve.",1,N],[13,"SmoothQuadraticCurve",E,"[Draw][1] a quadratic Bézier curve assuming the control…",1,N],[13,"CubicCurve",E,"[Draw][1] a cubic Bézier curve.",1,N],[13,"SmoothCubicCurve",E,"[Draw][1] a cubic Bézier curve assuming the first control…",1,N],[13,"EllipticalArc",E,"[Draw][1] an elliptical arc.",1,N],[13,"Close",E,"[End][1] the current subpath.",1,N],[4,R[94],E,"A positioning method.",N,N],[13,"Absolute",E,"Absolute.",2,N],[13,R[60],E,"Relative.",2,N],[11,"new",E,"Create a data attribute.",3,[[],["self"]]],[11,"parse",E,"Parse a data attribute.",3,[[["str"]],[R[2]]]],[11,"move_to",E,"Add an absolute `Command::Move` command.",3,[[[T]],["self"]]],[11,"move_by",E,"Add a relative `Command::Move` command.",3,[[[T]],["self"]]],[11,"line_to",E,"Add an absolute `Command::Line` command.",3,[[[T]],["self"]]],[11,"line_by",E,"Add a relative `Command::Line` command.",3,[[[T]],["self"]]],[11,"horizontal_line_to",E,"Add an absolute `Command::HorizontalLine` command.",3,[[[T]],["self"]]],[11,"horizontal_line_by",E,"Add a relative `Command::HorizontalLine` command.",3,[[[T]],["self"]]],[11,"vertical_line_to",E,"Add an absolute `Command::VerticalLine` command.",3,[[[T]],["self"]]],[11,"vertical_line_by",E,"Add a relative `Command::VerticalLine` command.",3,[[[T]],["self"]]],[11,"quadratic_curve_to",E,"Add an absolute `Command::QuadraticCurve` command.",3,[[[T]],["self"]]],[11,"quadratic_curve_by",E,"Add a relative `Command::QuadraticCurve` command.",3,[[[T]],["self"]]],[11,"smooth_quadratic_curve_to",E,"Add an absolute `Command::SmoothQuadraticCurve` command.",3,[[[T]],["self"]]],[11,"smooth_quadratic_curve_by",E,"Add a relative `Command::SmoothQuadraticCurve` command.",3,[[[T]],["self"]]],[11,"cubic_curve_to",E,"Add an absolute `Command::CubicCurve` command.",3,[[[T]],["self"]]],[11,"cubic_curve_by",E,"Add a relative `Command::CubicCurve` command.",3,[[[T]],["self"]]],[11,"smooth_cubic_curve_to",E,"Add an absolute `Command::SmoothCubicCurve` command.",3,[[[T]],["self"]]],[11,"smooth_cubic_curve_by",E,"Add a relative `Command::SmoothCubicCurve` command.",3,[[[T]],["self"]]],[11,"elliptical_arc_to",E,"Add an absolute `Command::EllipticalArc` command.",3,[[[T]],["self"]]],[11,"elliptical_arc_by",E,"Add a relative `Command::EllipticalArc` command.",3,[[[T]],["self"]]],[11,"close",E,"Add a `Command::Close` command.",3,[[],["self"]]],[6,"Number",E,"A number.",N,N],[0,"tag",R[62],"The tags.",N,N],[3,"Tag",R[86],"A tag.",N,N],[12,"0",E,E,4,N],[12,"1",E,E,4,N],[12,"2",E,E,4,N],[4,"Type",E,"A [type][1] of a tag.",N,N],[13,"Start",E,"A start tag.",5,N],[13,"End",E,"An end tag.",5,N],[13,"Empty",E,"An empty tag.",5,N],[17,R[95],E,"animate",N,N],[17,R[63],E,"animateColor",N,N],[17,R[64],E,"animateMotion",N,N],[17,R[65],E,"animateTransform",N,N],[17,"Circle",E,"circle",N,N],[17,R[66],E,"clipPath",N,N],[17,R[67],E,"defs",N,N],[17,R[68],E,"desc",N,N],[17,R[96],E,"ellipse",N,N],[17,"Filter",E,"filter",N,N],[17,"Group",E,"g",N,N],[17,"Image",E,"image",N,N],[17,"Line",E,"line",N,N],[17,R[69],E,"linearGradient",N,N],[17,"Link",E,"a",N,N],[17,"Marker",E,"marker",N,N],[17,"Mask",E,"mask",N,N],[17,R[70],E,"mpath",N,N],[17,"Path",E,"path",N,N],[17,R[97],E,"pattern",N,N],[17,R[98],E,"polygon",N,N],[17,R[71],E,R[90],N,N],[17,R[72],E,"radialGradient",N,N],[17,R[73],E,"rect",N,N],[17,"Script",E,"script",N,N],[17,"Stop",E,"stop",N,N],[17,"Style",E,"style",N,N],[17,"SVG",E,"svg",N,N],[17,"Symbol",E,"symbol",N,N],[17,"Text",E,"text",N,N],[17,R[74],E,"textPath",N,N],[17,"Title",E,"title",N,N],[17,"Use",E,"use",N,N],[11,"parse",E,"Parse a tag.",4,[[["str"]],[[R[2],["tag"]],["tag"]]]],[11,"new",R[62],R[75],6,[[],["self"]]],[11,"add",E,R[76],6,[[[T]],["self"]]],[11,"set",E,R[77],6,[[[U],[T]],["self"]]],[11,"new",E,R[75],7,[[],["self"]]],[11,"add",E,R[76],7,[[[T]],["self"]]],[11,"set",E,R[77],7,[[[U],[T]],["self"]]],[11,"new",E,R[75],8,[[],["self"]]],[11,"add",E,R[76],8,[[[T]],["self"]]],[11,"set",E,R[77],8,[[[U],[T]],["self"]]],[11,"new",E,R[75],9,[[],["self"]]],[11,"add",E,R[76],9,[[[T]],["self"]]],[11,"set",E,R[77],9,[[[U],[T]],["self"]]],[11,"new",E,R[75],10,[[],["self"]]],[11,"add",E,R[76],10,[[[T]],["self"]]],[11,"set",E,R[77],10,[[[U],[T]],["self"]]],[11,"new",E,R[75],11,[[],["self"]]],[11,"add",E,R[76],11,[[[T]],["self"]]],[11,"set",E,R[77],11,[[[U],[T]],["self"]]],[11,"new",E,R[75],12,[[],["self"]]],[11,"add",E,R[76],12,[[[T]],["self"]]],[11,"set",E,R[77],12,[[[U],[T]],["self"]]],[11,"new",E,R[75],13,[[],["self"]]],[11,"add",E,R[76],13,[[[T]],["self"]]],[11,"set",E,R[77],13,[[[U],[T]],["self"]]],[11,"new",E,R[75],14,[[],["self"]]],[11,"add",E,R[76],14,[[[T]],["self"]]],[11,"set",E,R[77],14,[[[U],[T]],["self"]]],[11,"new",E,R[75],15,[[],["self"]]],[11,"add",E,R[76],15,[[[T]],["self"]]],[11,"set",E,R[77],15,[[[U],[T]],["self"]]],[11,"new",E,R[75],16,[[],["self"]]],[11,"add",E,R[76],16,[[[T]],["self"]]],[11,"set",E,R[77],16,[[[U],[T]],["self"]]],[11,"new",E,R[75],17,[[],["self"]]],[11,"add",E,R[76],17,[[[T]],["self"]]],[11,"set",E,R[77],17,[[[U],[T]],["self"]]],[11,"new",E,R[75],18,[[],["self"]]],[11,"add",E,R[76],18,[[[T]],["self"]]],[11,"set",E,R[77],18,[[[U],[T]],["self"]]],[11,"new",E,R[75],19,[[],["self"]]],[11,"add",E,R[76],19,[[[T]],["self"]]],[11,"set",E,R[77],19,[[[U],[T]],["self"]]],[11,"new",E,R[75],20,[[],["self"]]],[11,"add",E,R[76],20,[[[T]],["self"]]],[11,"set",E,R[77],20,[[[U],[T]],["self"]]],[11,"new",E,R[75],21,[[],["self"]]],[11,"add",E,R[76],21,[[[T]],["self"]]],[11,"set",E,R[77],21,[[[U],[T]],["self"]]],[11,"new",E,R[75],22,[[],["self"]]],[11,"add",E,R[76],22,[[[T]],["self"]]],[11,"set",E,R[77],22,[[[U],[T]],["self"]]],[11,"new",E,R[75],23,[[],["self"]]],[11,"add",E,R[76],23,[[[T]],["self"]]],[11,"set",E,R[77],23,[[[U],[T]],["self"]]],[11,"new",E,R[75],24,[[],["self"]]],[11,"add",E,R[76],24,[[[T]],["self"]]],[11,"set",E,R[77],24,[[[U],[T]],["self"]]],[11,"new",E,R[75],25,[[],["self"]]],[11,"add",E,R[76],25,[[[T]],["self"]]],[11,"set",E,R[77],25,[[[U],[T]],["self"]]],[11,"new",E,R[75],26,[[],["self"]]],[11,"add",E,R[76],26,[[[T]],["self"]]],[11,"set",E,R[77],26,[[[U],[T]],["self"]]],[11,"new",E,R[75],27,[[],["self"]]],[11,"add",E,R[76],27,[[[T]],["self"]]],[11,"set",E,R[77],27,[[[U],[T]],["self"]]],[11,"new",E,R[75],28,[[],["self"]]],[11,"add",E,R[76],28,[[[T]],["self"]]],[11,"set",E,R[77],28,[[[U],[T]],["self"]]],[11,"new",E,R[75],29,[[],["self"]]],[11,"add",E,R[76],29,[[[T]],["self"]]],[11,"set",E,R[77],29,[[[U],[T]],["self"]]],[11,"new",E,R[75],30,[[],["self"]]],[11,"add",E,R[76],30,[[[T]],["self"]]],[11,"set",E,R[77],30,[[[U],[T]],["self"]]],[11,"new",E,R[75],31,[[],["self"]]],[11,"add",E,R[76],31,[[[T]],["self"]]],[11,"set",E,R[77],31,[[[U],[T]],["self"]]],[11,"new",E,R[75],32,[[],["self"]]],[11,"add",E,R[76],32,[[[T]],["self"]]],[11,"set",E,R[77],32,[[[U],[T]],["self"]]],[11,"new",E,R[75],33,[[],["self"]]],[11,"add",E,R[76],33,[[[T]],["self"]]],[11,"set",E,R[77],33,[[[U],[T]],["self"]]],[11,"new",E,R[75],34,[[],["self"]]],[11,"add",E,R[76],34,[[[T]],["self"]]],[11,"set",E,R[77],34,[[[U],[T]],["self"]]],[11,"new",E,R[75],35,[[],["self"]]],[11,"add",E,R[76],35,[[[T]],["self"]]],[11,"set",E,R[77],35,[[[U],[T]],["self"]]],[11,"new",E,R[75],36,[[],["self"]]],[11,"add",E,R[76],36,[[[T]],["self"]]],[11,"set",E,R[77],36,[[[U],[T]],["self"]]],[11,"new",E,R[75],37,[[[R[81]],["into",[R[81]]]],["self"]]],[11,"add",E,R[76],37,[[[T]],["self"]]],[11,"set",E,R[77],37,[[[U],[T]],["self"]]],[11,"new",E,R[75],38,[[[R[81]],["into",[R[81]]]],["self"]]],[11,"add",E,R[76],38,[[[T]],["self"]]],[11,"set",E,R[77],38,[[[U],[T]],["self"]]],[6,"Attributes",R[78],"Attributes.",N,N],[6,"Children",E,"Child nodes.",N,N],[8,"Node",E,"A node.",N,N],[10,R[88],E,"Append a child node.",39,[[["self"],[T]]]],[10,R[89],E,R[77],39,[[["self"],[U],[T]]]],[0,R[79],"svg","The parser.",N,N],[3,"Error",R[87],R[80],N,N],[3,"Parser",E,"A parser.",N,N],[4,"Event",E,"An event.",N,N],[13,"Error",E,R[80],40,N],[13,"Tag",E,"A tag.",40,N],[13,"Text",E,"A text.",40,N],[13,"Comment",E,"A comment.",40,N],[13,"Declaration",E,"A declaration.",40,N],[13,"Instruction",E,"An instruction.",40,N],[11,"new",E,"Create an error.",41,[[[R[81]],["into",[R[81]]]],["self"]]],[6,"Result",E,"A result.",N,N],[11,"new",E,"Create a parser.",42,[[[T]],["self"]]],[6,"Document","svg","A document.",N,N],[11,"into",R[78],E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,43,[[],[U]]],[11,R[82],E,E,43,[[["self"]],[R[81]]]],[11,R[83],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"],[T]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"into",R[62],E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[R[81]]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[R[81]]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[R[81]]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[82],E,E,9,[[["self"]],[R[81]]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[R[81]]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[R[81]]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[R[81]]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,13,[[],[U]]],[11,R[82],E,E,13,[[["self"]],[R[81]]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[R[81]]]],[11,R[83],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"into",E,E,15,[[],[U]]],[11,R[82],E,E,15,[[["self"]],[R[81]]]],[11,R[83],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"into",E,E,16,[[],[U]]],[11,R[82],E,E,16,[[["self"]],[R[81]]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"into",E,E,17,[[],[U]]],[11,R[82],E,E,17,[[["self"]],[R[81]]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"into",E,E,18,[[],[U]]],[11,R[82],E,E,18,[[["self"]],[R[81]]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"into",E,E,19,[[],[U]]],[11,R[82],E,E,19,[[["self"]],[R[81]]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[R[81]]]],[11,R[83],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"into",E,E,21,[[],[U]]],[11,R[82],E,E,21,[[["self"]],[R[81]]]],[11,R[83],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"],[T]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"into",E,E,22,[[],[U]]],[11,R[82],E,E,22,[[["self"]],[R[81]]]],[11,R[83],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"into",E,E,23,[[],[U]]],[11,R[82],E,E,23,[[["self"]],[R[81]]]],[11,R[83],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"into",E,E,24,[[],[U]]],[11,R[82],E,E,24,[[["self"]],[R[81]]]],[11,R[83],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"into",E,E,25,[[],[U]]],[11,R[82],E,E,25,[[["self"]],[R[81]]]],[11,R[83],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"into",E,E,26,[[],[U]]],[11,R[82],E,E,26,[[["self"]],[R[81]]]],[11,R[83],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"into",E,E,27,[[],[U]]],[11,R[82],E,E,27,[[["self"]],[R[81]]]],[11,R[83],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"into",E,E,28,[[],[U]]],[11,R[82],E,E,28,[[["self"]],[R[81]]]],[11,R[83],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"into",E,E,29,[[],[U]]],[11,R[82],E,E,29,[[["self"]],[R[81]]]],[11,R[83],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"into",E,E,30,[[],[U]]],[11,R[82],E,E,30,[[["self"]],[R[81]]]],[11,R[83],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"into",E,E,31,[[],[U]]],[11,R[82],E,E,31,[[["self"]],[R[81]]]],[11,R[83],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"],[T]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"into",E,E,32,[[],[U]]],[11,R[82],E,E,32,[[["self"]],[R[81]]]],[11,R[83],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"into",E,E,33,[[],[U]]],[11,R[82],E,E,33,[[["self"]],[R[81]]]],[11,R[83],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"into",E,E,34,[[],[U]]],[11,R[82],E,E,34,[[["self"]],[R[81]]]],[11,R[83],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"into",E,E,35,[[],[U]]],[11,R[82],E,E,35,[[["self"]],[R[81]]]],[11,R[83],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"into",E,E,36,[[],[U]]],[11,R[82],E,E,36,[[["self"]],[R[81]]]],[11,R[83],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"],[T]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"into",E,E,37,[[],[U]]],[11,R[82],E,E,37,[[["self"]],[R[81]]]],[11,R[83],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"],[T]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"into",E,E,38,[[],[U]]],[11,R[82],E,E,38,[[["self"]],[R[81]]]],[11,R[83],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"],[T]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"into",R[85],E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,44,[[],[U]]],[11,R[83],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"],[T]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",R[86],E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",R[87],E,41,[[],[U]]],[11,R[82],E,E,41,[[["self"]],[R[81]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"into",E,E,42,[[],[U]]],[11,R[22],E,E,42,[[],["i"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,R[88],R[78],E,0,[[["self"],[T]]]],[11,R[89],E,E,0,[[["self"],[U],[T]]]],[11,R[88],R[62],E,6,[[["self"],[T]]]],[11,R[89],E,E,6,[[["self"],[U],[T]]]],[11,R[88],E,E,7,[[["self"],[T]]]],[11,R[89],E,E,7,[[["self"],[U],[T]]]],[11,R[88],E,E,8,[[["self"],[T]]]],[11,R[89],E,E,8,[[["self"],[U],[T]]]],[11,R[88],E,E,9,[[["self"],[T]]]],[11,R[89],E,E,9,[[["self"],[U],[T]]]],[11,R[88],E,E,10,[[["self"],[T]]]],[11,R[89],E,E,10,[[["self"],[U],[T]]]],[11,R[88],E,E,11,[[["self"],[T]]]],[11,R[89],E,E,11,[[["self"],[U],[T]]]],[11,R[88],E,E,12,[[["self"],[T]]]],[11,R[89],E,E,12,[[["self"],[U],[T]]]],[11,R[88],E,E,13,[[["self"],[T]]]],[11,R[89],E,E,13,[[["self"],[U],[T]]]],[11,R[88],E,E,14,[[["self"],[T]]]],[11,R[89],E,E,14,[[["self"],[U],[T]]]],[11,R[88],E,E,15,[[["self"],[T]]]],[11,R[89],E,E,15,[[["self"],[U],[T]]]],[11,R[88],E,E,16,[[["self"],[T]]]],[11,R[89],E,E,16,[[["self"],[U],[T]]]],[11,R[88],E,E,17,[[["self"],[T]]]],[11,R[89],E,E,17,[[["self"],[U],[T]]]],[11,R[88],E,E,18,[[["self"],[T]]]],[11,R[89],E,E,18,[[["self"],[U],[T]]]],[11,R[88],E,E,19,[[["self"],[T]]]],[11,R[89],E,E,19,[[["self"],[U],[T]]]],[11,R[88],E,E,20,[[["self"],[T]]]],[11,R[89],E,E,20,[[["self"],[U],[T]]]],[11,R[88],E,E,21,[[["self"],[T]]]],[11,R[89],E,E,21,[[["self"],[U],[T]]]],[11,R[88],E,E,22,[[["self"],[T]]]],[11,R[89],E,E,22,[[["self"],[U],[T]]]],[11,R[88],E,E,23,[[["self"],[T]]]],[11,R[89],E,E,23,[[["self"],[U],[T]]]],[11,R[88],E,E,24,[[["self"],[T]]]],[11,R[89],E,E,24,[[["self"],[U],[T]]]],[11,R[88],E,E,25,[[["self"],[T]]]],[11,R[89],E,E,25,[[["self"],[U],[T]]]],[11,R[88],E,E,26,[[["self"],[T]]]],[11,R[89],E,E,26,[[["self"],[U],[T]]]],[11,R[88],E,E,27,[[["self"],[T]]]],[11,R[89],E,E,27,[[["self"],[U],[T]]]],[11,R[88],E,E,28,[[["self"],[T]]]],[11,R[89],E,E,28,[[["self"],[U],[T]]]],[11,R[88],E,E,29,[[["self"],[T]]]],[11,R[89],E,E,29,[[["self"],[U],[T]]]],[11,R[88],E,E,30,[[["self"],[T]]]],[11,R[89],E,E,30,[[["self"],[U],[T]]]],[11,R[88],E,E,31,[[["self"],[T]]]],[11,R[89],E,E,31,[[["self"],[U],[T]]]],[11,R[88],E,E,32,[[["self"],[T]]]],[11,R[89],E,E,32,[[["self"],[U],[T]]]],[11,R[88],E,E,33,[[["self"],[T]]]],[11,R[89],E,E,33,[[["self"],[U],[T]]]],[11,R[88],E,E,34,[[["self"],[T]]]],[11,R[89],E,E,34,[[["self"],[U],[T]]]],[11,R[88],E,E,35,[[["self"],[T]]]],[11,R[89],E,E,35,[[["self"],[U],[T]]]],[11,R[88],E,E,36,[[["self"],[T]]]],[11,R[89],E,E,36,[[["self"],[U],[T]]]],[11,R[88],E,E,37,[[["self"],[T]]]],[11,R[89],E,E,37,[[["self"],[U],[T]]]],[11,R[88],E,E,38,[[["self"],[T]]]],[11,R[89],E,E,38,[[["self"],[U],[T]]]],[11,R[188],R[85],E,3,[[],["data"]]],[11,"clone",R[78],E,0,[[["self"]],["text"]]],[11,"clone",E,E,43,[[["self"]],["value"]]],[11,"clone",R[85],E,1,[[["self"]],[R[92]]]],[11,"clone",E,E,3,[[["self"]],["data"]]],[11,"clone",E,E,44,[[["self"]],[R[1847]]]],[11,"clone",E,E,2,[[["self"]],[R[91]]]],[11,"clone",R[86],E,4,[[["self"]],["tag"]]],[11,"clone",E,E,5,[[["self"]],["type"]]],[11,"clone",R[62],E,6,[[["self"]],["animate"]]],[11,"clone",E,E,7,[[["self"]],["animatecolor"]]],[11,"clone",E,E,8,[[["self"]],["animatemotion"]]],[11,"clone",E,E,9,[[["self"]],["animatetransform"]]],[11,"clone",E,E,10,[[["self"]],["circle"]]],[11,"clone",E,E,11,[[["self"]],["clippath"]]],[11,"clone",E,E,12,[[["self"]],["definitions"]]],[11,"clone",E,E,13,[[["self"]],[R[93]]]],[11,"clone",E,E,14,[[["self"]],["ellipse"]]],[11,"clone",E,E,15,[[["self"]],["filter"]]],[11,"clone",E,E,16,[[["self"]],["group"]]],[11,"clone",E,E,17,[[["self"]],["image"]]],[11,"clone",E,E,18,[[["self"]],["line"]]],[11,"clone",E,E,19,[[["self"]],["lineargradient"]]],[11,"clone",E,E,20,[[["self"]],["link"]]],[11,"clone",E,E,21,[[["self"]],["marker"]]],[11,"clone",E,E,22,[[["self"]],["mask"]]],[11,"clone",E,E,23,[[["self"]],["motionpath"]]],[11,"clone",E,E,24,[[["self"]],["path"]]],[11,"clone",E,E,25,[[["self"]],["pattern"]]],[11,"clone",E,E,26,[[["self"]],["polygon"]]],[11,"clone",E,E,27,[[["self"]],[R[90]]]],[11,"clone",E,E,28,[[["self"]],["radialgradient"]]],[11,"clone",E,E,29,[[["self"]],["rectangle"]]],[11,"clone",E,E,30,[[["self"]],["stop"]]],[11,"clone",E,E,31,[[["self"]],["symbol"]]],[11,"clone",E,E,32,[[["self"]],["text"]]],[11,"clone",E,E,33,[[["self"]],["textpath"]]],[11,"clone",E,E,34,[[["self"]],["title"]]],[11,"clone",E,E,35,[[["self"]],["use"]]],[11,"clone",E,E,36,[[["self"]],["svg"]]],[11,"clone",E,E,37,[[["self"]],["script"]]],[11,"clone",E,E,38,[[["self"]],["style"]]],[11,"eq",R[85],E,2,[[["self"],[R[91]]],["bool"]]],[11,"eq",R[86],E,5,[[["self"],["type"]],["bool"]]],[11,"from",R[78],E,43,[[["i8"]],["self"]]],[11,"from",E,E,43,[[["i16"]],["self"]]],[11,"from",E,E,43,[[["i32"]],["self"]]],[11,"from",E,E,43,[[["i64"]],["self"]]],[11,"from",E,E,43,[[["isize"]],["self"]]],[11,"from",E,E,43,[[["u8"]],["self"]]],[11,"from",E,E,43,[[["u16"]],["self"]]],[11,"from",E,E,43,[[["u32"]],["self"]]],[11,"from",E,E,43,[[["u64"]],["self"]]],[11,"from",E,E,43,[[["usize"]],["self"]]],[11,"from",E,E,43,[[["f32"]],["self"]]],[11,"from",E,E,43,[[["f64"]],["self"]]],[11,"from",E,E,43,[[[R[81]]],["self"]]],[11,"from",E,E,43,[[["bool"]],["self"]]],[11,"from",E,E,43,[[["str"]],["value"]]],[11,"from",E,E,43,[[["vec"]],["self"]]],[11,"from",E,E,43,[[],["self"]]],[11,"from",E,E,43,[[],["self"]]],[11,"from",R[85],E,3,[[[R[92]],["vec",[R[92]]]],["self"]]],[11,"from",R[78],E,43,[[["data"]],["self"]]],[11,"from",R[85],E,44,[[["number"],["vec",["number"]]],["self"]]],[11,"from",E,E,44,[[["i8"]],["self"]]],[11,"from",E,E,44,[[["i16"]],["self"]]],[11,"from",E,E,44,[[["i32"]],["self"]]],[11,"from",E,E,44,[[["i64"]],["self"]]],[11,"from",E,E,44,[[["isize"]],["self"]]],[11,"from",E,E,44,[[["u8"]],["self"]]],[11,"from",E,E,44,[[["u16"]],["self"]]],[11,"from",E,E,44,[[["u32"]],["self"]]],[11,"from",E,E,44,[[["u64"]],["self"]]],[11,"from",E,E,44,[[["usize"]],["self"]]],[11,"from",E,E,44,[[["f32"]],["self"]]],[11,"from",E,E,44,[[["f64"]],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"from",E,E,44,[[],["self"]]],[11,"next",R[87],E,42,[[["self"]],[R[24]]]],[11,"deref",R[78],E,43,[[["self"]]]],[11,"deref",R[85],E,3,[[["self"]]]],[11,"deref",E,E,44,[[["self"]]]],[11,"fmt",R[78],E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[62],E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,32,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[87],E,41,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[78],E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[85],E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[86],E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[62],E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,32,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[87],E,41,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,41,[[["self"]],["str"]]]],"p":[[3,"Text"],[4,"Command"],[4,R[94]],[3,"Data"],[3,"Tag"],[4,"Type"],[3,R[95]],[3,R[63]],[3,R[64]],[3,R[65]],[3,"Circle"],[3,R[66]],[3,R[67]],[3,R[68]],[3,R[96]],[3,"Filter"],[3,"Group"],[3,"Image"],[3,"Line"],[3,R[69]],[3,"Link"],[3,"Marker"],[3,"Mask"],[3,R[70]],[3,"Path"],[3,R[97]],[3,R[98]],[3,R[71]],[3,R[72]],[3,R[73]],[3,"Stop"],[3,"Symbol"],[3,"Text"],[3,R[74]],[3,"Title"],[3,"Use"],[3,"SVG"],[3,"Script"],[3,"Style"],[8,"Node"],[4,"Event"],[3,"Error"],[3,"Parser"],[3,"Value"],[3,R[99]]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[672],N,N],[3,"Attribute",E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[675],E,E,0,N],[12,"path",E,E,0,N],[12,"tts",E,E,0,N],[3,"MetaList",E,R[688],N,N],[12,"ident",E,E,1,N],[12,R[673],E,E,1,N],[12,"nested",E,E,1,N],[3,R[1000],E,R[689],N,N],[12,"ident",E,E,2,N],[12,R[677],E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,R[1054],3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[676],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[1001],E,R[690],N,N],[12,R[680],E,E,4,N],[12,"named",E,E,4,N],[3,R[1002],E,R[691],N,N],[12,R[673],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,"discriminant",E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[693],N,N],[12,R[1060],E,E,7,N],[3,"VisPublic",E,R[692],N,N],[12,R[674],E,E,8,N],[3,R[1003],E,R[694],N,N],[12,R[674],E,E,9,N],[12,R[673],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"ExprArray",E,R[697],N,N],[12,"attrs",E,E,10,N],[12,R[675],E,E,10,N],[12,"elems",E,E,10,N],[3,"ExprAssign",E,R[716],N,N],[12,"attrs",E,E,11,N],[12,"left",E,E,11,N],[12,R[677],E,E,11,N],[12,"right",E,E,11,N],[3,R[1031],E,R[717],N,N],[12,"attrs",E,E,12,N],[12,"left",E,E,12,N],[12,"op",E,E,12,N],[12,"right",E,E,12,N],[3,"ExprAsync",E,R[1072],N,N],[12,"attrs",E,E,13,N],[12,"async_token",E,E,13,N],[12,"capture",E,E,13,N],[12,"block",E,E,13,N],[3,"ExprBinary",E,R[701],N,N],[12,"attrs",E,E,14,N],[12,"left",E,E,14,N],[12,"op",E,E,14,N],[12,"right",E,E,14,N],[3,"ExprBlock",E,R[715],N,N],[12,"attrs",E,E,15,N],[12,"label",E,E,15,N],[12,"block",E,E,15,N],[3,"ExprBox",E,R[695],N,N],[12,"attrs",E,E,16,N],[12,"box_token",E,E,16,N],[12,"expr",E,E,16,N],[3,"ExprBreak",E,R[723],N,N],[12,"attrs",E,E,17,N],[12,"break_token",E,E,17,N],[12,"label",E,E,17,N],[12,"expr",E,E,17,N],[3,"ExprCall",E,R[698],N,N],[12,"attrs",E,E,18,N],[12,"func",E,E,18,N],[12,R[673],E,E,18,N],[12,"args",E,E,18,N],[3,"ExprCast",E,R[704],N,N],[12,"attrs",E,E,19,N],[12,"expr",E,E,19,N],[12,"as_token",E,E,19,N],[12,"ty",E,E,19,N],[3,R[1032],E,R[713],N,N],[12,"attrs",E,E,20,N],[12,"asyncness",E,E,20,N],[12,"movability",E,E,20,N],[12,"capture",E,E,20,N],[12,"or1_token",E,E,20,N],[12,"inputs",E,E,20,N],[12,"or2_token",E,E,20,N],[12,"output",E,E,20,N],[12,"body",E,E,20,N],[3,R[1033],E,R[724],N,N],[12,"attrs",E,E,21,N],[12,"continue_token",E,E,21,N],[12,"label",E,E,21,N],[3,"ExprField",E,R[718],N,N],[12,"attrs",E,E,22,N],[12,"base",E,E,22,N],[12,"dot_token",E,E,22,N],[12,"member",E,E,22,N],[3,R[1034],E,R[710],N,N],[12,"attrs",E,E,23,N],[12,"label",E,E,23,N],[12,"for_token",E,E,23,N],[12,"pat",E,E,23,N],[12,"in_token",E,E,23,N],[12,"expr",E,E,23,N],[12,"body",E,E,23,N],[3,"ExprGroup",E,R[730],N,N],[12,"attrs",E,E,24,N],[12,R[1067],E,E,24,N],[12,"expr",E,E,24,N],[3,"ExprIf",E,R[706],N,N],[12,"attrs",E,E,25,N],[12,"if_token",E,E,25,N],[12,"cond",E,E,25,N],[12,"then_branch",E,E,25,N],[12,"else_branch",E,E,25,N],[3,R[1035],E,R[696],N,N],[12,"attrs",E,E,26,N],[12,"place",E,E,26,N],[12,"arrow_token",E,E,26,N],[12,"value",E,E,26,N],[3,"ExprIndex",E,R[719],N,N],[12,"attrs",E,E,27,N],[12,"expr",E,E,27,N],[12,R[675],E,E,27,N],[12,"index",E,E,27,N],[3,"ExprLet",E,R[1071],N,N],[12,"attrs",E,E,28,N],[12,"let_token",E,E,28,N],[12,"pats",E,E,28,N],[12,R[677],E,E,28,N],[12,"expr",E,E,28,N],[3,"ExprLit",E,R[703],N,N],[12,"attrs",E,E,29,N],[12,"lit",E,E,29,N],[3,"ExprLoop",E,R[711],N,N],[12,"attrs",E,E,30,N],[12,"label",E,E,30,N],[12,"loop_token",E,E,30,N],[12,"body",E,E,30,N],[3,"ExprMacro",E,R[726],N,N],[12,"attrs",E,E,31,N],[12,"mac",E,E,31,N],[3,"ExprMatch",E,R[712],N,N],[12,"attrs",E,E,32,N],[12,"match_token",E,E,32,N],[12,"expr",E,E,32,N],[12,R[680],E,E,32,N],[12,"arms",E,E,32,N],[3,R[1036],E,R[699],N,N],[12,"attrs",E,E,33,N],[12,"receiver",E,E,33,N],[12,"dot_token",E,E,33,N],[12,"method",E,E,33,N],[12,R[957],E,E,33,N],[12,R[673],E,E,33,N],[12,"args",E,E,33,N],[3,"ExprParen",E,R[729],N,N],[12,"attrs",E,E,34,N],[12,R[673],E,E,34,N],[12,"expr",E,E,34,N],[3,"ExprPath",E,R[721],N,N],[12,"attrs",E,E,35,N],[12,"qself",E,E,35,N],[12,"path",E,E,35,N],[3,"ExprRange",E,R[720],N,N],[12,"attrs",E,E,36,N],[12,"from",E,E,36,N],[12,"limits",E,E,36,N],[12,"to",E,E,36,N],[3,R[1037],E,R[722],N,N],[12,"attrs",E,E,37,N],[12,R[1069],E,E,37,N],[12,R[685],E,E,37,N],[12,"expr",E,E,37,N],[3,"ExprRepeat",E,R[728],N,N],[12,"attrs",E,E,38,N],[12,R[675],E,E,38,N],[12,"expr",E,E,38,N],[12,R[681],E,E,38,N],[12,"len",E,E,38,N],[3,"ExprReturn",E,R[725],N,N],[12,"attrs",E,E,39,N],[12,"return_token",E,E,39,N],[12,"expr",E,E,39,N],[3,"ExprStruct",E,R[727],N,N],[12,"attrs",E,E,40,N],[12,"path",E,E,40,N],[12,R[680],E,E,40,N],[12,"fields",E,E,40,N],[12,R[1055],E,E,40,N],[12,"rest",E,E,40,N],[3,"ExprTry",E,R[731],N,N],[12,"attrs",E,E,41,N],[12,"expr",E,E,41,N],[12,"question_token",E,E,41,N],[3,R[1300],E,R[1073],N,N],[12,"attrs",E,E,42,N],[12,"try_token",E,E,42,N],[12,"block",E,E,42,N],[3,"ExprTuple",E,R[700],N,N],[12,"attrs",E,E,43,N],[12,R[673],E,E,43,N],[12,"elems",E,E,43,N],[3,"ExprType",E,R[705],N,N],[12,"attrs",E,E,44,N],[12,"expr",E,E,44,N],[12,R[676],E,E,44,N],[12,"ty",E,E,44,N],[3,"ExprUnary",E,R[702],N,N],[12,"attrs",E,E,45,N],[12,"op",E,E,45,N],[12,"expr",E,E,45,N],[3,"ExprUnsafe",E,R[714],N,N],[12,"attrs",E,E,46,N],[12,"unsafe_token",E,E,46,N],[12,"block",E,E,46,N],[3,R[1004],E,R[734],N,N],[12,"tts",E,E,47,N],[3,"ExprWhile",E,R[708],N,N],[12,"attrs",E,E,48,N],[12,"label",E,E,48,N],[12,"while_token",E,E,48,N],[12,"cond",E,E,48,N],[12,"body",E,E,48,N],[3,"ExprYield",E,R[733],N,N],[12,"attrs",E,E,49,N],[12,"yield_token",E,E,49,N],[12,"expr",E,E,49,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,50,N],[12,"span",E,E,50,N],[3,"Arm",E,"One arm of a `match` expression: `0...10 => { return true;…",N,N],[12,"attrs",E,E,51,N],[12,"leading_vert",E,E,51,N],[12,"pats",E,E,51,N],[12,"guard",E,E,51,N],[12,"fat_arrow_token",E,E,51,N],[12,"body",E,E,51,N],[12,"comma",E,E,51,N],[3,"Block",E,"A braced block containing Rust statements.",N,N],[12,R[680],E,E,52,N],[12,"stmts",E,"Statements in a block",52,N],[3,"FieldPat",E,"A single field in a struct pattern.",N,N],[12,"attrs",E,E,53,N],[12,"member",E,E,53,N],[12,R[676],E,E,53,N],[12,"pat",E,E,53,N],[3,"FieldValue",E,"A field-value pair in a struct literal.",N,N],[12,"attrs",E,R[1054],54,N],[12,"member",E,"Name or index of the field.",54,N],[12,R[676],E,"The colon in `Struct { x: x }`. If written in shorthand…",54,N],[12,"expr",E,"Value of the field.",54,N],[3,"Label",E,"A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name",E,E,55,N],[12,R[676],E,E,55,N],[3,"Local",E,"A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs",E,E,56,N],[12,"let_token",E,E,56,N],[12,"pats",E,E,56,N],[12,"ty",E,E,56,N],[12,"init",E,E,56,N],[12,R[681],E,E,56,N],[3,R[1301],E,"The `::<>` explicit type parameters passed to a method…",N,N],[12,R[1063],E,E,57,N],[12,R[686],E,E,57,N],[12,"args",E,E,57,N],[12,R[687],E,E,57,N],[3,"PatBox",E,R[1080],N,N],[12,"box_token",E,E,58,N],[12,"pat",E,E,58,N],[3,"PatIdent",E,R[1075],N,N],[12,"by_ref",E,E,59,N],[12,R[685],E,E,59,N],[12,"ident",E,E,59,N],[12,"subpat",E,E,59,N],[3,"PatLit",E,R[1082],N,N],[12,"expr",E,E,60,N],[3,"PatMacro",E,R[1085],N,N],[12,"mac",E,E,61,N],[3,"PatPath",E,R[1078],N,N],[12,"qself",E,E,62,N],[12,"path",E,E,62,N],[3,"PatRange",E,R[1083],N,N],[12,"lo",E,E,63,N],[12,"limits",E,E,63,N],[12,"hi",E,E,63,N],[3,"PatRef",E,R[1081],N,N],[12,R[1069],E,E,64,N],[12,R[685],E,E,64,N],[12,"pat",E,E,64,N],[3,"PatSlice",E,R[1084],N,N],[12,R[675],E,E,65,N],[12,"front",E,E,65,N],[12,"middle",E,E,65,N],[12,R[1055],E,E,65,N],[12,R[1056],E,E,65,N],[12,"back",E,E,65,N],[3,"PatStruct",E,R[1076],N,N],[12,"path",E,E,66,N],[12,R[680],E,E,66,N],[12,"fields",E,E,66,N],[12,R[1055],E,E,66,N],[3,"PatTuple",E,R[1079],N,N],[12,R[673],E,E,67,N],[12,"front",E,E,67,N],[12,R[1055],E,E,67,N],[12,R[1056],E,E,67,N],[12,"back",E,E,67,N],[3,R[1302],E,R[1077],N,N],[12,"path",E,E,68,N],[12,"pat",E,E,68,N],[3,R[1303],E,R[1086],N,N],[12,"tts",E,E,69,N],[3,"PatWild",E,R[1074],N,N],[12,R[1068],E,E,70,N],[3,R[1005],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,71,N],[12,R[686],E,E,71,N],[12,R[678],E,E,71,N],[12,R[687],E,E,71,N],[3,"ConstParam",E,R[737],N,N],[12,"attrs",E,E,72,N],[12,R[683],E,E,72,N],[12,"ident",E,E,72,N],[12,R[676],E,E,72,N],[12,"ty",E,E,72,N],[12,R[677],E,E,72,N],[12,R[188],E,E,72,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,R[686],E,E,73,N],[12,"params",E,E,73,N],[12,R[687],E,E,73,N],[12,"where_clause",E,E,73,N],[3,R[1006],E,R[736],N,N],[12,"attrs",E,E,74,N],[12,R[684],E,E,74,N],[12,R[676],E,E,74,N],[12,"bounds",E,E,74,N],[3,R[1007],E,R[741],N,N],[12,"lhs_ty",E,E,75,N],[12,R[677],E,E,75,N],[12,"rhs_ty",E,E,75,N],[3,R[1008],E,R[740],N,N],[12,R[684],E,E,76,N],[12,R[676],E,E,76,N],[12,"bounds",E,E,76,N],[3,R[1009],E,R[739],N,N],[12,R[678],E,"Any lifetimes from a `for` binding",77,N],[12,"bounded_ty",E,"The type being bounded",77,N],[12,R[676],E,E,77,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",77,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[673],E,E,78,N],[12,"modifier",E,E,78,N],[12,R[678],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",78,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,N],[3,"TypeParam",E,R[735],N,N],[12,"attrs",E,E,79,N],[12,"ident",E,E,79,N],[12,R[676],E,E,79,N],[12,"bounds",E,E,79,N],[12,R[677],E,E,79,N],[12,R[188],E,E,79,N],[3,R[1010],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,80,N],[12,"predicates",E,E,80,N],[3,R[1039],E,R[679],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[1029],E,R[679],N,N],[3,R[1304],E,R[1089],N,N],[12,"pat",E,E,81,N],[12,R[676],E,E,81,N],[12,"ty",E,E,81,N],[3,"ArgSelf",E,R[1088],N,N],[12,R[685],E,E,82,N],[12,"self_token",E,E,82,N],[3,"ArgSelfRef",E,R[1087],N,N],[12,R[1069],E,E,83,N],[12,R[684],E,E,83,N],[12,R[685],E,E,83,N],[12,"self_token",E,E,83,N],[3,"FnDecl",E,"Header of a function declaration, without including the…",N,N],[12,"fn_token",E,E,84,N],[12,R[847],E,E,84,N],[12,R[673],E,E,84,N],[12,"inputs",E,E,84,N],[12,"variadic",E,E,84,N],[12,"output",E,E,84,N],[3,R[1305],E,R[1090],N,N],[12,"attrs",E,E,85,N],[12,"vis",E,E,85,N],[12,"ident",E,E,85,N],[12,"decl",E,E,85,N],[12,R[681],E,E,85,N],[3,R[1306],E,R[1093],N,N],[12,"attrs",E,E,86,N],[12,"mac",E,E,86,N],[12,R[681],E,E,86,N],[3,R[1307],E,R[1091],N,N],[12,"attrs",E,E,87,N],[12,"vis",E,E,87,N],[12,R[1061],E,E,87,N],[12,R[685],E,E,87,N],[12,"ident",E,E,87,N],[12,R[676],E,E,87,N],[12,"ty",E,E,87,N],[12,R[681],E,E,87,N],[3,R[1308],E,R[1092],N,N],[12,"attrs",E,E,88,N],[12,"vis",E,E,88,N],[12,R[1058],E,E,88,N],[12,"ident",E,E,88,N],[12,R[681],E,E,88,N],[3,R[1309],E,R[1094],N,N],[12,"tts",E,E,89,N],[3,R[1310],E,R[1095],N,N],[12,"attrs",E,E,90,N],[12,"vis",E,E,90,N],[12,R[1057],E,E,90,N],[12,R[683],E,E,90,N],[12,"ident",E,E,90,N],[12,R[676],E,E,90,N],[12,"ty",E,E,90,N],[12,R[677],E,E,90,N],[12,"expr",E,E,90,N],[12,R[681],E,E,90,N],[3,R[1311],E,R[1098],N,N],[12,"attrs",E,E,91,N],[12,R[1059],E,E,91,N],[12,R[1058],E,E,91,N],[12,"ident",E,E,91,N],[12,R[847],E,E,91,N],[12,R[676],E,E,91,N],[12,"bounds",E,E,91,N],[12,R[681],E,E,91,N],[3,R[1312],E,R[1099],N,N],[12,"attrs",E,E,92,N],[12,"mac",E,E,92,N],[12,R[681],E,E,92,N],[3,R[1313],E,R[1096],N,N],[12,"attrs",E,E,93,N],[12,"vis",E,E,93,N],[12,R[1057],E,E,93,N],[12,"sig",E,E,93,N],[12,"block",E,E,93,N],[3,R[1314],E,R[1097],N,N],[12,"attrs",E,E,94,N],[12,"vis",E,E,94,N],[12,R[1057],E,E,94,N],[12,R[1058],E,E,94,N],[12,"ident",E,E,94,N],[12,R[847],E,E,94,N],[12,R[677],E,E,94,N],[12,"ty",E,E,94,N],[12,R[681],E,E,94,N],[3,R[1315],E,R[1100],N,N],[12,"tts",E,E,95,N],[3,"ItemConst",E,R[1104],N,N],[12,"attrs",E,E,96,N],[12,"vis",E,E,96,N],[12,R[683],E,E,96,N],[12,"ident",E,E,96,N],[12,R[676],E,E,96,N],[12,"ty",E,E,96,N],[12,R[677],E,E,96,N],[12,"expr",E,E,96,N],[12,R[681],E,E,96,N],[3,"ItemEnum",E,R[1112],N,N],[12,"attrs",E,E,97,N],[12,"vis",E,E,97,N],[12,"enum_token",E,E,97,N],[12,"ident",E,E,97,N],[12,R[847],E,E,97,N],[12,R[680],E,E,97,N],[12,"variants",E,E,97,N],[3,R[1316],E,R[1110],N,N],[12,"attrs",E,E,98,N],[12,"vis",E,E,98,N],[12,R[1059],E,E,98,N],[12,R[1058],E,E,98,N],[12,"ident",E,E,98,N],[12,R[847],E,E,98,N],[12,R[676],E,E,98,N],[12,"bounds",E,E,98,N],[12,R[681],E,E,98,N],[3,R[1317],E,R[1101],N,N],[12,"attrs",E,E,99,N],[12,"vis",E,E,99,N],[12,R[1066],E,E,99,N],[12,R[1060],E,E,99,N],[12,"ident",E,E,99,N],[12,"rename",E,E,99,N],[12,R[681],E,E,99,N],[3,"ItemFn",E,R[1105],N,N],[12,"attrs",E,E,100,N],[12,"vis",E,E,100,N],[12,"constness",E,E,100,N],[12,"asyncness",E,E,100,N],[12,"unsafety",E,E,100,N],[12,"abi",E,E,100,N],[12,"ident",E,E,100,N],[12,"decl",E,E,100,N],[12,"block",E,E,100,N],[3,R[1318],E,R[1107],N,N],[12,"attrs",E,E,101,N],[12,"abi",E,E,101,N],[12,R[680],E,E,101,N],[12,"items",E,E,101,N],[3,"ItemImpl",E,R[1116],N,N],[12,"attrs",E,E,102,N],[12,R[1057],E,E,102,N],[12,"unsafety",E,E,102,N],[12,"impl_token",E,E,102,N],[12,R[847],E,E,102,N],[12,"trait_",E,"Trait this impl implements.",102,N],[12,"self_ty",E,"The Self type of the impl.",102,N],[12,R[680],E,E,102,N],[12,"items",E,E,102,N],[3,"ItemMacro",E,R[1117],N,N],[12,"attrs",E,E,103,N],[12,"ident",E,"The `example` in `macro_rules! example { ... }`.",103,N],[12,"mac",E,E,103,N],[12,R[681],E,E,103,N],[3,"ItemMacro2",E,R[1118],N,N],[12,"attrs",E,E,104,N],[12,"vis",E,E,104,N],[12,"macro_token",E,E,104,N],[12,"ident",E,E,104,N],[12,R[673],E,E,104,N],[12,"args",E,E,104,N],[12,R[680],E,E,104,N],[12,"body",E,E,104,N],[3,"ItemMod",E,R[1106],N,N],[12,"attrs",E,E,105,N],[12,"vis",E,E,105,N],[12,"mod_token",E,E,105,N],[12,"ident",E,E,105,N],[12,"content",E,E,105,N],[12,"semi",E,E,105,N],[3,"ItemStatic",E,R[1103],N,N],[12,"attrs",E,E,106,N],[12,"vis",E,E,106,N],[12,R[1061],E,E,106,N],[12,R[685],E,E,106,N],[12,"ident",E,E,106,N],[12,R[676],E,E,106,N],[12,"ty",E,E,106,N],[12,R[677],E,E,106,N],[12,"expr",E,E,106,N],[12,R[681],E,E,106,N],[3,"ItemStruct",E,R[1111],N,N],[12,"attrs",E,E,107,N],[12,"vis",E,E,107,N],[12,R[1064],E,E,107,N],[12,"ident",E,E,107,N],[12,R[847],E,E,107,N],[12,"fields",E,E,107,N],[12,R[681],E,E,107,N],[3,"ItemTrait",E,R[1114],N,N],[12,"attrs",E,E,108,N],[12,"vis",E,E,108,N],[12,"unsafety",E,E,108,N],[12,"auto_token",E,E,108,N],[12,R[1062],E,E,108,N],[12,"ident",E,E,108,N],[12,R[847],E,E,108,N],[12,R[676],E,E,108,N],[12,"supertraits",E,E,108,N],[12,R[680],E,E,108,N],[12,"items",E,E,108,N],[3,R[1319],E,R[1115],N,N],[12,"attrs",E,E,109,N],[12,"vis",E,E,109,N],[12,R[1062],E,E,109,N],[12,"ident",E,E,109,N],[12,R[847],E,E,109,N],[12,R[677],E,E,109,N],[12,"bounds",E,E,109,N],[12,R[681],E,E,109,N],[3,"ItemType",E,R[1108],N,N],[12,"attrs",E,E,110,N],[12,"vis",E,E,110,N],[12,R[1058],E,E,110,N],[12,"ident",E,E,110,N],[12,R[847],E,E,110,N],[12,R[677],E,E,110,N],[12,"ty",E,E,110,N],[12,R[681],E,E,110,N],[3,"ItemUnion",E,R[1113],N,N],[12,"attrs",E,E,111,N],[12,"vis",E,E,111,N],[12,R[1065],E,E,111,N],[12,"ident",E,E,111,N],[12,R[847],E,E,111,N],[12,"fields",E,E,111,N],[3,"ItemUse",E,R[1102],N,N],[12,"attrs",E,E,112,N],[12,"vis",E,E,112,N],[12,"use_token",E,E,112,N],[12,R[1070],E,E,112,N],[12,"tree",E,E,112,N],[12,R[681],E,E,112,N],[3,R[1320],E,R[1119],N,N],[12,"tts",E,E,113,N],[3,"MethodSig",E,"A method's signature in a trait or implementation: `unsafe…",N,N],[12,"constness",E,E,114,N],[12,"asyncness",E,E,114,N],[12,"unsafety",E,E,114,N],[12,"abi",E,E,114,N],[12,"ident",E,E,114,N],[12,"decl",E,E,114,N],[3,R[1321],E,R[1120],N,N],[12,"attrs",E,E,115,N],[12,R[683],E,E,115,N],[12,"ident",E,E,115,N],[12,R[676],E,E,115,N],[12,"ty",E,E,115,N],[12,R[188],E,E,115,N],[12,R[681],E,E,115,N],[3,R[1322],E,R[1123],N,N],[12,"attrs",E,E,116,N],[12,"mac",E,E,116,N],[12,R[681],E,E,116,N],[3,R[1323],E,R[1121],N,N],[12,"attrs",E,E,117,N],[12,"sig",E,E,117,N],[12,R[188],E,E,117,N],[12,R[681],E,E,117,N],[3,R[1324],E,R[1122],N,N],[12,"attrs",E,E,118,N],[12,R[1058],E,E,118,N],[12,"ident",E,E,118,N],[12,R[847],E,E,118,N],[12,R[676],E,E,118,N],[12,"bounds",E,E,118,N],[12,R[188],E,E,118,N],[12,R[681],E,E,118,N],[3,R[1325],E,R[1124],N,N],[12,"tts",E,E,119,N],[3,"UseGlob",E,R[1128],N,N],[12,"star_token",E,E,120,N],[3,"UseGroup",E,R[1129],N,N],[12,R[680],E,E,121,N],[12,"items",E,E,121,N],[3,"UseName",E,R[1126],N,N],[12,"ident",E,E,122,N],[3,"UsePath",E,R[1125],N,N],[12,"ident",E,E,123,N],[12,R[1063],E,E,123,N],[12,"tree",E,E,123,N],[3,"UseRename",E,R[1127],N,N],[12,"ident",E,E,124,N],[12,"as_token",E,E,124,N],[12,"rename",E,E,124,N],[3,"File",E,"A complete file of Rust source code.",N,N],[12,"shebang",E,E,125,N],[12,"attrs",E,E,125,N],[12,"items",E,E,125,N],[3,R[738],E,"A Rust lifetime: `'a`.",N,N],[12,R[946],E,E,126,N],[12,"ident",E,E,126,N],[3,"LitBool",E,R[748],N,N],[12,"value",E,E,127,N],[12,"span",E,E,127,N],[3,"LitByte",E,R[744],N,N],[3,"LitByteStr",E,R[743],N,N],[3,"LitChar",E,R[745],N,N],[3,"LitFloat",E,R[747],N,N],[3,"LitInt",E,R[746],N,N],[3,"LitStr",E,R[742],N,N],[3,R[1011],E,R[749],N,N],[12,"token",E,E,128,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,129,N],[12,R[682],E,E,129,N],[12,R[204],E,E,129,N],[12,"tts",E,E,129,N],[3,"DataEnum",E,R[751],N,N],[12,"enum_token",E,E,130,N],[12,R[680],E,E,130,N],[12,"variants",E,E,130,N],[3,"DataStruct",E,R[750],N,N],[12,R[1064],E,E,131,N],[12,"fields",E,E,131,N],[12,R[681],E,E,131,N],[3,"DataUnion",E,R[752],N,N],[12,R[1065],E,E,132,N],[12,"fields",E,E,132,N],[3,R[1012],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",133,N],[12,"vis",E,"Visibility of the struct or enum.",133,N],[12,"ident",E,"Name of the struct or enum.",133,N],[12,R[847],E,"Generics required to complete the definition.",133,N],[12,"data",E,"Data within the struct or enum.",133,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,R[1066],E,E,134,N],[12,"name",E,E,134,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name",E,E,135,N],[12,"ty",E,E,135,N],[3,"TypeArray",E,R[754],N,N],[12,R[675],E,E,136,N],[12,"elem",E,E,136,N],[12,R[681],E,E,136,N],[12,"len",E,E,136,N],[3,"TypeBareFn",E,R[758],N,N],[12,R[678],E,E,137,N],[12,"unsafety",E,E,137,N],[12,"abi",E,E,137,N],[12,"fn_token",E,E,137,N],[12,R[673],E,E,137,N],[12,"inputs",E,E,137,N],[12,"variadic",E,E,137,N],[12,"output",E,E,137,N],[3,"TypeGroup",E,R[765],N,N],[12,R[1067],E,E,138,N],[12,"elem",E,E,138,N],[3,R[1013],E,R[763],N,N],[12,"impl_token",E,E,139,N],[12,"bounds",E,E,139,N],[3,"TypeInfer",E,R[766],N,N],[12,R[1068],E,E,140,N],[3,"TypeMacro",E,R[767],N,N],[12,"mac",E,E,141,N],[3,"TypeNever",E,R[759],N,N],[12,R[682],E,E,142,N],[3,"TypeParen",E,R[764],N,N],[12,R[673],E,E,143,N],[12,"elem",E,E,143,N],[3,"TypePath",E,R[761],N,N],[12,"qself",E,E,144,N],[12,"path",E,E,144,N],[3,"TypePtr",E,R[755],N,N],[12,"star_token",E,E,145,N],[12,R[683],E,E,145,N],[12,R[685],E,E,145,N],[12,"elem",E,E,145,N],[3,R[1014],E,R[757],N,N],[12,R[1069],E,E,146,N],[12,R[684],E,E,146,N],[12,R[685],E,E,146,N],[12,"elem",E,E,146,N],[3,"TypeSlice",E,R[753],N,N],[12,R[675],E,E,147,N],[12,"elem",E,E,147,N],[3,R[1015],E,R[762],N,N],[12,"dyn_token",E,E,148,N],[12,"bounds",E,E,148,N],[3,"TypeTuple",E,R[760],N,N],[12,R[673],E,E,149,N],[12,"elems",E,E,149,N],[3,R[1016],E,R[769],N,N],[12,"tts",E,E,150,N],[3,R[1017],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,R[1063],E,E,151,N],[12,R[686],E,E,151,N],[12,"args",E,E,151,N],[12,R[687],E,E,151,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,152,N],[12,R[677],E,E,152,N],[12,"ty",E,E,152,N],[3,R[1326],E,R[1131],N,N],[12,"ident",E,E,153,N],[12,R[676],E,E,153,N],[12,"bounds",E,E,153,N],[3,R[1018],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[673],E,E,154,N],[12,"inputs",E,"`(A, B)`",154,N],[12,"output",E,"`C`",154,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,R[1070],E,E,155,N],[12,"segments",E,E,155,N],[3,R[1019],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,156,N],[12,"arguments",E,E,156,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,R[686],E,E,157,N],[12,"ty",E,E,157,N],[12,R[91],E,E,157,N],[12,"as_token",E,E,157,N],[12,R[687],E,E,157,N],[3,"Error",E,R[1264],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,158,N],[13,"Inner",E,E,158,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Word",E,E,159,N],[13,"List",E,R[688],159,N],[13,"NameValue",E,R[689],159,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",160,N],[13,"Literal",E,"A Rust literal, like the `\"new_name\"` in…",160,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[690],161,N],[13,"Unnamed",E,R[691],161,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",161,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[692],162,N],[13,"Crate",E,R[693],162,N],[13,"Restricted",E,R[694],162,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",162,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Box",E,R[695],163,N],[13,"InPlace",E,R[696],163,N],[13,"Array",E,R[697],163,N],[13,"Call",E,R[698],163,N],[13,"MethodCall",E,R[699],163,N],[13,"Tuple",E,R[700],163,N],[13,"Binary",E,R[701],163,N],[13,"Unary",E,R[702],163,N],[13,"Lit",E,R[703],163,N],[13,"Cast",E,R[704],163,N],[13,"Type",E,R[705],163,N],[13,"Let",E,R[1071],163,N],[13,"If",E,R[706],163,N],[13,"While",E,R[708],163,N],[13,"ForLoop",E,R[710],163,N],[13,"Loop",E,R[711],163,N],[13,"Match",E,R[712],163,N],[13,"Closure",E,R[713],163,N],[13,"Unsafe",E,R[714],163,N],[13,"Block",E,R[715],163,N],[13,"Assign",E,R[716],163,N],[13,"AssignOp",E,R[717],163,N],[13,"Field",E,R[718],163,N],[13,"Index",E,R[719],163,N],[13,"Range",E,R[720],163,N],[13,"Path",E,R[721],163,N],[13,R[756],E,R[722],163,N],[13,"Break",E,R[723],163,N],[13,"Continue",E,R[724],163,N],[13,"Return",E,R[725],163,N],[13,"Macro",E,R[726],163,N],[13,"Struct",E,R[727],163,N],[13,"Repeat",E,R[728],163,N],[13,"Paren",E,R[729],163,N],[13,"Group",E,R[730],163,N],[13,"Try",E,R[731],163,N],[13,"Async",E,R[1072],163,N],[13,"TryBlock",E,R[1073],163,N],[13,"Yield",E,R[733],163,N],[13,R[768],E,R[734],163,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",164,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",164,N],[4,R[1327],E,"An individual generic argument to a method, like `T`.",N,N],[13,"Type",E,R[1130],165,N],[13,"Const",E,R[1132],165,N],[4,"Pat",E,"A pattern in a local binding, function signature, match…",N,N],[13,"Wild",E,R[1074],166,N],[13,"Ident",E,R[1075],166,N],[13,"Struct",E,R[1076],166,N],[13,"TupleStruct",E,R[1077],166,N],[13,"Path",E,R[1078],166,N],[13,"Tuple",E,R[1079],166,N],[13,"Box",E,R[1080],166,N],[13,"Ref",E,R[1081],166,N],[13,"Lit",E,R[1082],166,N],[13,"Range",E,R[1083],166,N],[13,"Slice",E,R[1084],166,N],[13,"Macro",E,R[1085],166,N],[13,R[768],E,R[1086],166,N],[4,R[1328],E,"Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen",E,"Inclusive at the beginning, exclusive at the end.",167,N],[13,"Closed",E,"Inclusive at the beginning and end.",167,N],[4,"Stmt",E,"A statement, usually ending in a semicolon.",N,N],[13,"Local",E,"A local (let) binding.",168,N],[13,"Item",E,"An item definition.",168,N],[13,"Expr",E,"Expr without trailing semicolon.",168,N],[13,"Semi",E,"Expression with trailing semicolon.",168,N],[4,R[1020],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[735],169,N],[13,R[738],E,R[736],169,N],[13,"Const",E,R[737],169,N],[4,R[1021],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,170,N],[13,"Maybe",E,E,170,N],[4,R[1022],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,171,N],[13,R[738],E,E,171,N],[4,R[1023],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[739],172,N],[13,R[738],E,R[740],172,N],[13,"Eq",E,R[741],172,N],[4,"FnArg",E,"An argument in a function signature: the `n: usize` in `fn…",N,N],[13,"SelfRef",E,R[1087],173,N],[13,"SelfValue",E,R[1088],173,N],[13,"Captured",E,R[1089],173,N],[13,"Inferred",E,"A pattern whose type is inferred captured by a function…",173,N],[13,"Ignored",E,"A type not bound to any pattern in a function signature.",173,N],[4,R[1329],E,"An item within an `extern` block.",N,N],[13,"Fn",E,R[1090],174,N],[13,"Static",E,R[1091],174,N],[13,"Type",E,R[1092],174,N],[13,"Macro",E,R[1093],174,N],[13,R[768],E,R[1094],174,N],[4,"ImplItem",E,"An item within an impl block.",N,N],[13,"Const",E,R[1095],175,N],[13,"Method",E,R[1096],175,N],[13,"Type",E,R[1097],175,N],[13,R[1109],E,R[1098],175,N],[13,"Macro",E,R[1099],175,N],[13,R[768],E,R[1100],175,N],[4,"Item",E,"Things that can appear directly inside of a module or scope.",N,N],[13,"ExternCrate",E,R[1101],176,N],[13,"Use",E,R[1102],176,N],[13,"Static",E,R[1103],176,N],[13,"Const",E,R[1104],176,N],[13,"Fn",E,R[1105],176,N],[13,"Mod",E,R[1106],176,N],[13,"ForeignMod",E,R[1107],176,N],[13,"Type",E,R[1108],176,N],[13,R[1109],E,R[1110],176,N],[13,"Struct",E,R[1111],176,N],[13,"Enum",E,R[1112],176,N],[13,"Union",E,R[1113],176,N],[13,"Trait",E,R[1114],176,N],[13,"TraitAlias",E,R[1115],176,N],[13,"Impl",E,R[1116],176,N],[13,"Macro",E,R[1117],176,N],[13,"Macro2",E,R[1118],176,N],[13,R[768],E,R[1119],176,N],[4,"TraitItem",E,"An item declaration within the definition of a trait.",N,N],[13,"Const",E,R[1120],177,N],[13,"Method",E,R[1121],177,N],[13,"Type",E,R[1122],177,N],[13,"Macro",E,R[1123],177,N],[13,R[768],E,R[1124],177,N],[4,"UseTree",E,"A suffix of an import tree in a `use` item: `Type as…",N,N],[13,"Path",E,R[1125],178,N],[13,"Name",E,R[1126],178,N],[13,"Rename",E,R[1127],178,N],[13,"Glob",E,R[1128],178,N],[13,"Group",E,R[1129],178,N],[4,R[1024],E,"The suffix on a floating point literal if any, like the…",N,N],[13,"F32",E,E,179,N],[13,"F64",E,E,179,N],[13,"None",E,E,179,N],[4,"IntSuffix",E,"The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8",E,E,180,N],[13,"I16",E,E,180,N],[13,"I32",E,E,180,N],[13,"I64",E,E,180,N],[13,"I128",E,E,180,N],[13,"Isize",E,E,180,N],[13,"U8",E,E,180,N],[13,"U16",E,E,180,N],[13,"U32",E,E,180,N],[13,"U64",E,E,180,N],[13,"U128",E,E,180,N],[13,"Usize",E,E,180,N],[13,"None",E,E,180,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[742],181,N],[13,"ByteStr",E,R[743],181,N],[13,"Byte",E,R[744],181,N],[13,"Char",E,R[745],181,N],[13,"Int",E,R[746],181,N],[13,"Float",E,R[747],181,N],[13,"Bool",E,R[748],181,N],[13,R[768],E,R[749],181,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",182,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",182,N],[4,R[1025],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,183,N],[13,"Brace",E,E,183,N],[13,"Bracket",E,E,183,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[750],184,N],[13,"Enum",E,R[751],184,N],[13,"Union",E,R[752],184,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",185,N],[13,"Sub",E,"The `-` operator (subtraction)",185,N],[13,"Mul",E,"The `*` operator (multiplication)",185,N],[13,"Div",E,"The `/` operator (division)",185,N],[13,"Rem",E,"The `%` operator (modulus)",185,N],[13,"And",E,"The `&&` operator (logical and)",185,N],[13,"Or",E,"The `||` operator (logical or)",185,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",185,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",185,N],[13,"BitOr",E,"The `|` operator (bitwise or)",185,N],[13,"Shl",E,"The `<<` operator (shift left)",185,N],[13,"Shr",E,"The `>>` operator (shift right)",185,N],[13,"Eq",E,"The `==` operator (equality)",185,N],[13,"Lt",E,"The `<` operator (less than)",185,N],[13,"Le",E,"The `<=` operator (less than or equal to)",185,N],[13,"Ne",E,"The `!=` operator (not equal to)",185,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",185,N],[13,"Gt",E,"The `>` operator (greater than)",185,N],[13,"AddEq",E,"The `+=` operator",185,N],[13,"SubEq",E,"The `-=` operator",185,N],[13,"MulEq",E,"The `*=` operator",185,N],[13,"DivEq",E,"The `/=` operator",185,N],[13,"RemEq",E,"The `%=` operator",185,N],[13,"BitXorEq",E,"The `^=` operator",185,N],[13,"BitAndEq",E,"The `&=` operator",185,N],[13,"BitOrEq",E,"The `|=` operator",185,N],[13,"ShlEq",E,"The `<<=` operator",185,N],[13,"ShrEq",E,"The `>>=` operator",185,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",186,N],[13,"Not",E,"The `!` operator for logical inversion",186,N],[13,"Neg",E,"The `-` operator for negation",186,N],[4,R[1026],E,"Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named",E,"Argument given a name.",187,N],[13,"Wild",E,"Argument not given a name, matched with `_`.",187,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",188,N],[13,"Type",E,"A particular type is returned.",188,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Slice",E,R[753],189,N],[13,"Array",E,R[754],189,N],[13,"Ptr",E,R[755],189,N],[13,R[756],E,R[757],189,N],[13,"BareFn",E,R[758],189,N],[13,"Never",E,R[759],189,N],[13,"Tuple",E,R[760],189,N],[13,"Path",E,R[761],189,N],[13,"TraitObject",E,R[762],189,N],[13,"ImplTrait",E,R[763],189,N],[13,"Paren",E,R[764],189,N],[13,"Group",E,R[765],189,N],[13,"Infer",E,R[766],189,N],[13,"Macro",E,R[767],189,N],[13,R[768],E,R[769],189,N],[4,R[1027],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,R[738],E,"A lifetime argument.",190,N],[13,"Type",E,R[1130],190,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",190,N],[13,R[1326],E,R[1131],190,N],[13,"Const",E,R[1132],190,N],[4,R[1028],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,191,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",191,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",191,N],[5,"parse",E,R[788],N,[[[R[203]]],[["parse"],[R[2]]]]],[5,"parse2",E,R[787],N,[[[R[203]]],[["parse"],[R[2]]]]],[5,R[789],E,R[790],N,[[["str"]],[["parse"],[R[2]]]]],[5,"parse_file",E,"Parse the content of a file of Rust code.",N,[[["str"]],[[R[2],["file"]],["file"]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[941],"`_`",N,N],[12,"spans",E,E,192,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,193,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,194,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,195,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,196,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,197,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,198,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,199,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,200,N],[3,"Continue",E,"`continue`",N,N],[12,"span",E,E,201,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,202,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,203,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,204,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,205,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,206,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,207,N],[3,R[1109],E,"`existential`",N,N],[12,"span",E,E,208,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,209,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,210,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,211,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,212,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,213,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,214,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,215,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,216,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,217,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,218,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,219,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,220,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,221,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,222,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,223,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,224,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,225,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,226,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,227,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,228,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,229,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,230,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,231,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,232,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,233,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,234,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,235,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,236,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,237,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,238,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,239,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,240,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,241,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,242,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,243,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,244,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,245,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,246,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,247,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,248,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,249,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,250,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,251,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,252,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,253,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,254,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,255,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,256,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,257,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,258,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,259,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,260,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,261,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,262,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,263,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,264,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,265,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,266,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,267,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,268,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,269,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,270,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,271,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,272,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,273,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,274,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,275,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,276,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,277,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,278,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,279,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,280,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,281,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,282,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,283,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,284,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,285,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,286,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,287,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,288,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,289,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,290,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,291,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,292,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,293,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,294,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,R[770],E,E,291,[[["self"],[R[203]],["f"]]]],[11,R[770],E,E,292,[[["self"],[R[203]],["f"]]]],[11,R[770],E,E,293,[[["self"],[R[203]],["f"]]]],[11,R[770],E,E,294,[[["self"],[R[203]],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[[R[2],["meta"]],["meta"]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[1133]]],[[R[2],["vec"]],["vec"]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[1133]]],[[R[2],["vec"]],["vec"]]]],[11,"name",E,"Returns the identifier that begins this structured meta…",159,[[["self"]],["ident"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[1133]]],[R[2]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[1133]]],[R[2]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",161,[[["self"]],[["iter",["field"]],["field"]]]],[11,"iter_mut",E,"Get an iterator over the mutably borrowed [`Field`] items…",161,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"parse_within",E,"Parse the body of a block as zero or more statements,…",52,[[[R[1133]]],[["vec",["stmt"]],[R[2],["vec"]]]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",73,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",73,[[["self"]],["typeparamsmut"]]],[11,R[678],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",73,[[["self"]],[R[678]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",73,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",73,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",73,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",73,[[["self"]],[R[792]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",73,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",295,[[["self"]],[R[957]]]],[11,"new",E,E,74,[[[R[684]]],["self"]]],[11,"new",E,"Panics",126,[[["str"],["span"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",181,[[[R[207]]],["self"]]],[11,"new",E,E,296,[[["str"],["span"]],["self"]]],[11,"value",E,E,296,[[["self"]],[R[81]]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",296,[[["self"]],[[R[2]],["parse"]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",296,[[["self"],[R[79]]],[R[2]]]],[11,"span",E,E,296,[[["self"]],["span"]]],[11,R[205],E,E,296,[[["self"],["span"]]]],[11,"new",E,E,297,[[["span"]],["self"]]],[11,"value",E,E,297,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"span",E,E,297,[[["self"]],["span"]]],[11,R[205],E,E,297,[[["self"],["span"]]]],[11,"new",E,E,298,[[["span"],["u8"]],["self"]]],[11,"value",E,E,298,[[["self"]],["u8"]]],[11,"span",E,E,298,[[["self"]],["span"]]],[11,R[205],E,E,298,[[["self"],["span"]]]],[11,"new",E,E,299,[[["char"],["span"]],["self"]]],[11,"value",E,E,299,[[["self"]],["char"]]],[11,"span",E,E,299,[[["self"]],["span"]]],[11,R[205],E,E,299,[[["self"],["span"]]]],[11,"new",E,E,300,[[[R[772]],["u64"],["span"]],["self"]]],[11,"value",E,E,300,[[["self"]],["u64"]]],[11,"suffix",E,E,300,[[["self"]],[R[772]]]],[11,"span",E,E,300,[[["self"]],["span"]]],[11,R[205],E,E,300,[[["self"],["span"]]]],[11,"new",E,E,301,[[[R[773]],["f64"],["span"]],["self"]]],[11,"value",E,E,301,[[["self"]],["f64"]]],[11,"suffix",E,E,301,[[["self"]],[R[773]]]],[11,"span",E,E,301,[[["self"]],["span"]]],[11,R[205],E,E,301,[[["self"],["span"]]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,R[205],E,E,128,[[["self"],["span"]]]],[11,R[774],E,"In some positions, types may not contain the `+`…",189,[[[R[1133]]],[R[2]]]],[11,R[774],E,E,188,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,188,[[[R[1133]],["bool"]],[R[2]]]],[11,R[774],E,E,148,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,148,[[[R[1133]],["bool"]],[R[2]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",155,[[[R[1133]]],[R[2]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",155,[[["self"],["i"]],["bool"]]],[11,R[461],E,E,191,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[1030],R[942],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[775],302,[[[R[203]]],[R[776]]]],[11,"new2",E,R[775],302,[[[R[203]]],[R[776]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",302,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",303,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",303,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",303,[[[R[204]]],[R[24]]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",303,[[],[R[24]]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",303,[[],[R[24]]]],[11,R[207],E,"If the cursor is pointing at a `Literal`, return it along…",303,[[],[R[24]]]],[11,R[684],E,"If the cursor is pointing at a `Lifetime`, returns it…",303,[[],[R[24]]]],[11,R[777],E,"Copies all remaining tokens visible from this cursor into…",303,[[],[R[203]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",303,[[],[R[24]]]],[11,"span",E,"Returns the `Span` of the current token, or…",303,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,R[947],E,"Parses any identifier including keywords.",304,[[[R[1133]]],[R[2]]]],[18,"peek_any",E,"Peeks any identifier including keywords. Usage:…",304,N],[10,"unraw",E,"Strips the raw marker `r#`, if any, from the beginning of…",304,[[["self"]],["ident"]]],[0,R[779],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[778],R[943],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[201],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut",E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[778],E,E,305,N],[13,"End",E,E,305,N],[11,"new",E,"Creates an empty punctuated sequence.",306,[[],[R[779]]]],[11,R[461],E,"Determines whether this punctuated sequence is empty,…",306,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",306,[[["self"]],["usize"]]],[11,"first",E,"Borrows the first punctuated pair in this sequence.",306,[[["self"]],[["pair"],[R[24],["pair"]]]]],[11,"last",E,"Borrows the last punctuated pair in this sequence.",306,[[["self"]],[["pair"],[R[24],["pair"]]]]],[11,"last_mut",E,"Mutably borrows the last punctuated pair in this sequence.",306,[[["self"]],[[R[24],["pair"]],["pair"]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",306,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns an iterator over mutably borrowed syntax tree…",306,[[["self"]],["itermut"]]],[11,"pairs",E,R[780],306,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[780],306,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[780],306,[[],["intopairs"]]],[11,"push_value",E,R[781],306,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",306,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",306,[[["self"]],[[R[24],["pair"]],["pair"]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",306,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",306,[[["self"]],["bool"]]],[11,"push",E,R[781],306,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",306,[[["self"],["usize"],[T]]]],[11,R[1265],E,R[1266],306,[[[R[1133]]],[R[2]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",306,[[[R[1133]]],[R[2]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",306,[[[R[1133]]],[R[2]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",306,[[[R[1133]]],[R[2]]]],[11,"into_value",E,"Extracts the syntax tree node from this punctuated pair,…",305,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",305,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",305,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",305,[[["self"]],[[R[24]],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",305,[[[R[24]],[T]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",305,[[]]],[0,"spanned","syn",R[791],N,N],[8,"Spanned","syn::spanned",R[791],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",307,[[["self"]],["span"]]],[0,"visit","syn",R[793],N,N],[5,R[794],R[997],E,N,[[["abi"],["v"]]]],[5,R[795],E,E,N,[[[R[796]],["v"]]]],[5,R[1134],E,E,N,[[[R[1135]],["v"]]]],[5,R[1136],E,E,N,[[["argself"],["v"]]]],[5,R[1137],E,E,N,[[[R[1274]],["v"]]]],[5,"visit_arm",E,E,N,[[["arm"],["v"]]]],[5,R[797],E,E,N,[[[R[798]],["v"]]]],[5,R[799],E,E,N,[[[R[800]],["v"]]]],[5,R[801],E,E,N,[[[R[802]],["v"]]]],[5,R[803],E,E,N,[[[R[804]],["v"]]]],[5,R[805],E,E,N,[[["binop"],["v"]]]],[5,R[806],E,E,N,[[[R[998]],["v"]]]],[5,R[1138],E,E,N,[[["block"],["v"]]]],[5,R[807],E,E,N,[[[R[808]],["v"]]]],[5,R[809],E,E,N,[[[R[810]],["v"]]]],[5,R[1139],E,E,N,[[[R[1275]],["v"]]]],[5,R[811],E,E,N,[[["data"],["v"]]]],[5,R[812],E,E,N,[[[R[959]],["v"]]]],[5,R[813],E,E,N,[[[R[814]],["v"]]]],[5,R[815],E,E,N,[[[R[816]],["v"]]]],[5,R[817],E,E,N,[[[R[818]],["v"]]]],[5,R[819],E,E,N,[[["expr"],["v"]]]],[5,R[1140],E,E,N,[[[R[962]],["v"]]]],[5,R[1141],E,E,N,[[[R[975]],["v"]]]],[5,R[1142],E,E,N,[[[R[976]],["v"]]]],[5,R[1143],E,E,N,[[[R[1277]],["v"]]]],[5,R[820],E,E,N,[[[R[821]],["v"]]]],[5,R[1144],E,E,N,[[[R[974]],["v"]]]],[5,R[1145],E,E,N,[[["exprbox"],["v"]]]],[5,R[1146],E,E,N,[[[R[979]],["v"]]]],[5,R[822],E,E,N,[[[R[954]],["v"]]]],[5,R[823],E,E,N,[[[R[955]],["v"]]]],[5,R[1147],E,E,N,[[[R[972]],["v"]]]],[5,R[1148],E,E,N,[[[R[980]],["v"]]]],[5,R[824],E,E,N,[[[R[825]],["v"]]]],[5,R[1149],E,E,N,[[[R[969]],["v"]]]],[5,R[1150],E,E,N,[[[R[985]],["v"]]]],[5,R[1151],E,E,N,[[["exprif"],["v"]]]],[5,R[1152],E,E,N,[[[R[961]],["v"]]]],[5,R[826],E,E,N,[[[R[827]],["v"]]]],[5,R[1153],E,E,N,[[["exprlet"],["v"]]]],[5,R[828],E,E,N,[[[R[992]],["v"]]]],[5,R[1154],E,E,N,[[[R[970]],["v"]]]],[5,R[1155],E,E,N,[[[R[982]],["v"]]]],[5,R[1156],E,E,N,[[[R[971]],["v"]]]],[5,R[1157],E,E,N,[[[R[963]],["v"]]]],[5,R[829],E,E,N,[[[R[830]],["v"]]]],[5,R[831],E,E,N,[[[R[956]],["v"]]]],[5,R[1158],E,E,N,[[[R[977]],["v"]]]],[5,R[1159],E,E,N,[[[R[978]],["v"]]]],[5,R[1160],E,E,N,[[[R[984]],["v"]]]],[5,R[1161],E,E,N,[[[R[981]],["v"]]]],[5,R[1162],E,E,N,[[[R[983]],["v"]]]],[5,R[1163],E,E,N,[[["exprtry"],["v"]]]],[5,R[1164],E,E,N,[[[R[1165]],["v"]]]],[5,R[1166],E,E,N,[[[R[964]],["v"]]]],[5,R[1167],E,E,N,[[[R[965]],["v"]]]],[5,R[832],E,E,N,[[[R[833]],["v"]]]],[5,R[1168],E,E,N,[[[R[973]],["v"]]]],[5,R[834],E,E,N,[[[R[835]],["v"]]]],[5,R[1169],E,E,N,[[[R[967]],["v"]]]],[5,R[1170],E,E,N,[[[R[987]],["v"]]]],[5,R[836],E,E,N,[[["field"],["v"]]]],[5,R[1171],E,E,N,[[["fieldpat"],["v"]]]],[5,R[1172],E,E,N,[[[R[1270]],["v"]]]],[5,R[837],E,E,N,[[["fields"],["v"]]]],[5,R[838],E,E,N,[[[R[839]],["v"]]]],[5,R[840],E,E,N,[[[R[841]],["v"]]]],[5,R[1287],E,E,N,[[["file"],["v"]]]],[5,R[1173],E,E,N,[[["fnarg"],["v"]]]],[5,R[1174],E,E,N,[[["fndecl"],["v"]]]],[5,R[1175],E,E,N,[[[R[1176]],["v"]]]],[5,R[1177],E,E,N,[[[R[1178]],["v"]]]],[5,R[1179],E,E,N,[[[R[1180]],["v"]]]],[5,R[1181],E,E,N,[[[R[1182]],["v"]]]],[5,R[1183],E,E,N,[[[R[1184]],["v"]]]],[5,R[1185],E,E,N,[[[R[1186]],["v"]]]],[5,R[842],E,E,N,[[[R[843]],["v"]]]],[5,R[1187],E,E,N,[[[R[1188]],["v"]]]],[5,R[844],E,E,N,[[[R[845]],["v"]]]],[5,R[846],E,E,N,[[[R[847]],["v"]]]],[5,R[1189],E,E,N,[[[R[1286]],["v"]]]],[5,R[1190],E,E,N,[[[R[1191]],["v"]]]],[5,R[1192],E,E,N,[[[R[1193]],["v"]]]],[5,R[1194],E,E,N,[[[R[1195]],["v"]]]],[5,R[1196],E,E,N,[[[R[1197]],["v"]]]],[5,R[1198],E,E,N,[[[R[1199]],["v"]]]],[5,R[1200],E,E,N,[[[R[1201]],["v"]]]],[5,R[849],E,E,N,[[["index"],["v"]]]],[5,R[1288],E,E,N,[[["item"],["v"]]]],[5,R[1202],E,E,N,[[[R[1279]],["v"]]]],[5,R[1203],E,E,N,[[[R[1289]],["v"]]]],[5,R[1204],E,E,N,[[[R[1205]],["v"]]]],[5,R[1206],E,E,N,[[[R[1207]],["v"]]]],[5,R[1208],E,E,N,[[["itemfn"],["v"]]]],[5,R[1209],E,E,N,[[[R[1210]],["v"]]]],[5,R[1211],E,E,N,[[[R[1290]],["v"]]]],[5,R[1212],E,E,N,[[[R[1282]],["v"]]]],[5,R[1213],E,E,N,[[[R[1273]],["v"]]]],[5,R[1214],E,E,N,[[["itemmod"],["v"]]]],[5,R[1215],E,E,N,[[[R[1271]],["v"]]]],[5,R[1216],E,E,N,[[[R[1272]],["v"]]]],[5,R[1217],E,E,N,[[[R[1281]],["v"]]]],[5,R[1218],E,E,N,[[[R[1219]],["v"]]]],[5,R[1220],E,E,N,[[[R[1291]],["v"]]]],[5,R[1221],E,E,N,[[[R[1280]],["v"]]]],[5,R[1222],E,E,N,[[["itemuse"],["v"]]]],[5,R[1223],E,E,N,[[[R[1224]],["v"]]]],[5,R[1225],E,E,N,[[["label"],["v"]]]],[5,R[850],E,E,N,[[[R[684]],["v"]]]],[5,R[851],E,E,N,[[[R[852]],["v"]]]],[5,R[853],E,E,N,[[["lit"],["v"]]]],[5,R[854],E,E,N,[[["litbool"],["v"]]]],[5,R[855],E,E,N,[[["litbyte"],["v"]]]],[5,R[856],E,E,N,[[[R[857]],["v"]]]],[5,R[858],E,E,N,[[["litchar"],["v"]]]],[5,R[859],E,E,N,[[[R[958]],["v"]]]],[5,R[860],E,E,N,[[["litint"],["v"]]]],[5,R[861],E,E,N,[[["litstr"],["v"]]]],[5,R[862],E,E,N,[[[R[863]],["v"]]]],[5,R[1226],E,E,N,[[["local"],["v"]]]],[5,R[864],E,E,N,[[["macro"],["v"]]]],[5,R[865],E,E,N,[[[R[866]],["v"]]]],[5,R[867],E,E,N,[[["member"],["v"]]]],[5,R[868],E,E,N,[[["meta"],["v"]]]],[5,R[869],E,E,N,[[[R[952]],["v"]]]],[5,R[870],E,E,N,[[[R[871]],["v"]]]],[5,R[1227],E,E,N,[[[R[1285]],["v"]]]],[5,R[1228],E,E,N,[[[R[1229]],["v"]]]],[5,R[872],E,E,N,[[[R[873]],["v"]]]],[5,R[874],E,E,N,[[[R[875]],["v"]]]],[5,"visit_pat",E,E,N,[[["pat"],["v"]]]],[5,R[1230],E,E,N,[[["patbox"],["v"]]]],[5,R[1231],E,E,N,[[[R[1292]],["v"]]]],[5,R[1232],E,E,N,[[["patlit"],["v"]]]],[5,R[1233],E,E,N,[[[R[1293]],["v"]]]],[5,R[1234],E,E,N,[[["patpath"],["v"]]]],[5,R[1235],E,E,N,[[[R[1294]],["v"]]]],[5,R[1236],E,E,N,[[["patref"],["v"]]]],[5,R[1237],E,E,N,[[[R[1295]],["v"]]]],[5,R[1238],E,E,N,[[[R[1278]],["v"]]]],[5,R[1239],E,E,N,[[[R[1296]],["v"]]]],[5,R[1240],E,E,N,[[[R[1241]],["v"]]]],[5,R[1242],E,E,N,[[[R[1243]],["v"]]]],[5,R[1244],E,E,N,[[["patwild"],["v"]]]],[5,R[876],E,E,N,[[["path"],["v"]]]],[5,R[877],E,E,N,[[[R[878]],["v"]]]],[5,R[879],E,E,N,[[[R[880]],["v"]]]],[5,R[881],E,E,N,[[[R[882]],["v"]]]],[5,R[883],E,E,N,[[[R[884]],["v"]]]],[5,R[885],E,E,N,[[[R[886]],["v"]]]],[5,R[887],E,E,N,[[["qself"],["v"]]]],[5,R[1245],E,E,N,[[[R[1246]],["v"]]]],[5,R[888],E,E,N,[[[R[889]],["v"]]]],[5,R[1297],E,E,N,[[["stmt"],["v"]]]],[5,R[891],E,E,N,[[[R[892]],["v"]]]],[5,R[893],E,E,N,[[[R[894]],["v"]]]],[5,R[1247],E,E,N,[[[R[1284]],["v"]]]],[5,R[1248],E,E,N,[[[R[1249]],["v"]]]],[5,R[1250],E,E,N,[[[R[1251]],["v"]]]],[5,R[1252],E,E,N,[[[R[1253]],["v"]]]],[5,R[1254],E,E,N,[[[R[1255]],["v"]]]],[5,R[1256],E,E,N,[[[R[1257]],["v"]]]],[5,R[895],E,E,N,[[["type"],["v"]]]],[5,R[896],E,E,N,[[[R[897]],["v"]]]],[5,R[898],E,E,N,[[[R[899]],["v"]]]],[5,R[900],E,E,N,[[[R[901]],["v"]]]],[5,R[902],E,E,N,[[[R[903]],["v"]]]],[5,R[904],E,E,N,[[[R[905]],["v"]]]],[5,R[906],E,E,N,[[[R[907]],["v"]]]],[5,R[908],E,E,N,[[[R[909]],["v"]]]],[5,R[910],E,E,N,[[[R[911]],["v"]]]],[5,R[912],E,E,N,[[[R[913]],["v"]]]],[5,R[914],E,E,N,[[[R[915]],["v"]]]],[5,R[916],E,E,N,[[[R[960]],["v"]]]],[5,R[917],E,E,N,[[[R[993]],["v"]]]],[5,R[918],E,E,N,[[[R[919]],["v"]]]],[5,R[920],E,E,N,[[[R[921]],["v"]]]],[5,R[922],E,E,N,[[[R[923]],["v"]]]],[5,R[924],E,E,N,[[[R[925]],["v"]]]],[5,R[926],E,E,N,[[[R[927]],["v"]]]],[5,R[928],E,E,N,[[["unop"],["v"]]]],[5,R[1258],E,E,N,[[["useglob"],["v"]]]],[5,R[1259],E,E,N,[[[R[1298]],["v"]]]],[5,R[1260],E,E,N,[[["usename"],["v"]]]],[5,R[1261],E,E,N,[[["usepath"],["v"]]]],[5,R[1262],E,E,N,[[[R[1283]],["v"]]]],[5,R[1263],E,E,N,[[["usetree"],["v"]]]],[5,R[929],E,E,N,[[[R[999]],["v"]]]],[5,R[930],E,E,N,[[[R[953]],["v"]]]],[5,R[931],E,E,N,[[[R[932]],["v"]]]],[5,R[933],E,E,N,[[[R[934]],["v"]]]],[5,R[935],E,E,N,[[[R[936]],["v"]]]],[5,R[937],E,E,N,[[[R[792]],["v"]]]],[5,R[938],E,E,N,[[[R[939]],["v"]]]],[5,R[890],E,E,N,[[["span"],["v"]]]],[5,R[848],E,E,N,[[["ident"],["v"]]]],[8,"Visit",E,R[793],N,N],[11,R[794],E,E,308,[[["self"],["abi"]]]],[11,R[795],E,E,308,[[["self"],[R[796]]]]],[11,R[1134],E,E,308,[[["self"],[R[1135]]]]],[11,R[1136],E,E,308,[[["self"],["argself"]]]],[11,R[1137],E,E,308,[[["self"],[R[1274]]]]],[11,"visit_arm",E,E,308,[[["self"],["arm"]]]],[11,R[797],E,E,308,[[["self"],[R[798]]]]],[11,R[799],E,E,308,[[["self"],[R[800]]]]],[11,R[801],E,E,308,[[["self"],[R[802]]]]],[11,R[803],E,E,308,[[["self"],[R[804]]]]],[11,R[805],E,E,308,[[["self"],["binop"]]]],[11,R[806],E,E,308,[[["self"],[R[998]]]]],[11,R[1138],E,E,308,[[["self"],["block"]]]],[11,R[807],E,E,308,[[["self"],[R[808]]]]],[11,R[809],E,E,308,[[["self"],[R[810]]]]],[11,R[1139],E,E,308,[[["self"],[R[1275]]]]],[11,R[811],E,E,308,[[["self"],["data"]]]],[11,R[812],E,E,308,[[["self"],[R[959]]]]],[11,R[813],E,E,308,[[["self"],[R[814]]]]],[11,R[815],E,E,308,[[["self"],[R[816]]]]],[11,R[817],E,E,308,[[["self"],[R[818]]]]],[11,R[819],E,E,308,[[["self"],["expr"]]]],[11,R[1140],E,E,308,[[["self"],[R[962]]]]],[11,R[1141],E,E,308,[[["self"],[R[975]]]]],[11,R[1142],E,E,308,[[["self"],[R[976]]]]],[11,R[1143],E,E,308,[[["self"],[R[1277]]]]],[11,R[820],E,E,308,[[["self"],[R[821]]]]],[11,R[1144],E,E,308,[[["self"],[R[974]]]]],[11,R[1145],E,E,308,[[["self"],["exprbox"]]]],[11,R[1146],E,E,308,[[["self"],[R[979]]]]],[11,R[822],E,E,308,[[["self"],[R[954]]]]],[11,R[823],E,E,308,[[["self"],[R[955]]]]],[11,R[1147],E,E,308,[[["self"],[R[972]]]]],[11,R[1148],E,E,308,[[["self"],[R[980]]]]],[11,R[824],E,E,308,[[["self"],[R[825]]]]],[11,R[1149],E,E,308,[[["self"],[R[969]]]]],[11,R[1150],E,E,308,[[["self"],[R[985]]]]],[11,R[1151],E,E,308,[[["self"],["exprif"]]]],[11,R[1152],E,E,308,[[["self"],[R[961]]]]],[11,R[826],E,E,308,[[["self"],[R[827]]]]],[11,R[1153],E,E,308,[[["self"],["exprlet"]]]],[11,R[828],E,E,308,[[["self"],[R[992]]]]],[11,R[1154],E,E,308,[[["self"],[R[970]]]]],[11,R[1155],E,E,308,[[["self"],[R[982]]]]],[11,R[1156],E,E,308,[[["self"],[R[971]]]]],[11,R[1157],E,E,308,[[["self"],[R[963]]]]],[11,R[829],E,E,308,[[["self"],[R[830]]]]],[11,R[831],E,E,308,[[["self"],[R[956]]]]],[11,R[1158],E,E,308,[[["self"],[R[977]]]]],[11,R[1159],E,E,308,[[["self"],[R[978]]]]],[11,R[1160],E,E,308,[[["self"],[R[984]]]]],[11,R[1161],E,E,308,[[["self"],[R[981]]]]],[11,R[1162],E,E,308,[[["self"],[R[983]]]]],[11,R[1163],E,E,308,[[["self"],["exprtry"]]]],[11,R[1164],E,E,308,[[["self"],[R[1165]]]]],[11,R[1166],E,E,308,[[["self"],[R[964]]]]],[11,R[1167],E,E,308,[[["self"],[R[965]]]]],[11,R[832],E,E,308,[[["self"],[R[833]]]]],[11,R[1168],E,E,308,[[["self"],[R[973]]]]],[11,R[834],E,E,308,[[["self"],[R[835]]]]],[11,R[1169],E,E,308,[[["self"],[R[967]]]]],[11,R[1170],E,E,308,[[["self"],[R[987]]]]],[11,R[836],E,E,308,[[["self"],["field"]]]],[11,R[1171],E,E,308,[[["self"],["fieldpat"]]]],[11,R[1172],E,E,308,[[["self"],[R[1270]]]]],[11,R[837],E,E,308,[[["self"],["fields"]]]],[11,R[838],E,E,308,[[["self"],[R[839]]]]],[11,R[840],E,E,308,[[["self"],[R[841]]]]],[11,R[1287],E,E,308,[[["self"],["file"]]]],[11,R[1173],E,E,308,[[["self"],["fnarg"]]]],[11,R[1174],E,E,308,[[["self"],["fndecl"]]]],[11,R[1175],E,E,308,[[["self"],[R[1176]]]]],[11,R[1177],E,E,308,[[["self"],[R[1178]]]]],[11,R[1179],E,E,308,[[["self"],[R[1180]]]]],[11,R[1181],E,E,308,[[["self"],[R[1182]]]]],[11,R[1183],E,E,308,[[["self"],[R[1184]]]]],[11,R[1185],E,E,308,[[["self"],[R[1186]]]]],[11,R[842],E,E,308,[[["self"],[R[843]]]]],[11,R[1187],E,E,308,[[["self"],[R[1188]]]]],[11,R[844],E,E,308,[[["self"],[R[845]]]]],[11,R[846],E,E,308,[[["self"],[R[847]]]]],[11,R[1189],E,E,308,[[["self"],[R[1286]]]]],[11,R[1190],E,E,308,[[["self"],[R[1191]]]]],[11,R[1192],E,E,308,[[["self"],[R[1193]]]]],[11,R[1194],E,E,308,[[["self"],[R[1195]]]]],[11,R[1196],E,E,308,[[["self"],[R[1197]]]]],[11,R[1198],E,E,308,[[["self"],[R[1199]]]]],[11,R[1200],E,E,308,[[["self"],[R[1201]]]]],[11,R[849],E,E,308,[[["self"],["index"]]]],[11,R[1288],E,E,308,[[["self"],["item"]]]],[11,R[1202],E,E,308,[[["self"],[R[1279]]]]],[11,R[1203],E,E,308,[[["self"],[R[1289]]]]],[11,R[1204],E,E,308,[[["self"],[R[1205]]]]],[11,R[1206],E,E,308,[[["self"],[R[1207]]]]],[11,R[1208],E,E,308,[[["self"],["itemfn"]]]],[11,R[1209],E,E,308,[[["self"],[R[1210]]]]],[11,R[1211],E,E,308,[[["self"],[R[1290]]]]],[11,R[1212],E,E,308,[[["self"],[R[1282]]]]],[11,R[1213],E,E,308,[[["self"],[R[1273]]]]],[11,R[1214],E,E,308,[[["self"],["itemmod"]]]],[11,R[1215],E,E,308,[[["self"],[R[1271]]]]],[11,R[1216],E,E,308,[[["self"],[R[1272]]]]],[11,R[1217],E,E,308,[[["self"],[R[1281]]]]],[11,R[1218],E,E,308,[[["self"],[R[1219]]]]],[11,R[1220],E,E,308,[[["self"],[R[1291]]]]],[11,R[1221],E,E,308,[[["self"],[R[1280]]]]],[11,R[1222],E,E,308,[[["self"],["itemuse"]]]],[11,R[1223],E,E,308,[[["self"],[R[1224]]]]],[11,R[1225],E,E,308,[[["self"],["label"]]]],[11,R[850],E,E,308,[[["self"],[R[684]]]]],[11,R[851],E,E,308,[[["self"],[R[852]]]]],[11,R[853],E,E,308,[[["self"],["lit"]]]],[11,R[854],E,E,308,[[["self"],["litbool"]]]],[11,R[855],E,E,308,[[["self"],["litbyte"]]]],[11,R[856],E,E,308,[[["self"],[R[857]]]]],[11,R[858],E,E,308,[[["self"],["litchar"]]]],[11,R[859],E,E,308,[[["self"],[R[958]]]]],[11,R[860],E,E,308,[[["self"],["litint"]]]],[11,R[861],E,E,308,[[["self"],["litstr"]]]],[11,R[862],E,E,308,[[["self"],[R[863]]]]],[11,R[1226],E,E,308,[[["self"],["local"]]]],[11,R[864],E,E,308,[[["self"],["macro"]]]],[11,R[865],E,E,308,[[["self"],[R[866]]]]],[11,R[867],E,E,308,[[["self"],["member"]]]],[11,R[868],E,E,308,[[["self"],["meta"]]]],[11,R[869],E,E,308,[[["self"],[R[952]]]]],[11,R[870],E,E,308,[[["self"],[R[871]]]]],[11,R[1227],E,E,308,[[["self"],[R[1285]]]]],[11,R[1228],E,E,308,[[["self"],[R[1229]]]]],[11,R[872],E,E,308,[[["self"],[R[873]]]]],[11,R[874],E,E,308,[[["self"],[R[875]]]]],[11,"visit_pat",E,E,308,[[["self"],["pat"]]]],[11,R[1230],E,E,308,[[["self"],["patbox"]]]],[11,R[1231],E,E,308,[[["self"],[R[1292]]]]],[11,R[1232],E,E,308,[[["self"],["patlit"]]]],[11,R[1233],E,E,308,[[["self"],[R[1293]]]]],[11,R[1234],E,E,308,[[["self"],["patpath"]]]],[11,R[1235],E,E,308,[[["self"],[R[1294]]]]],[11,R[1236],E,E,308,[[["self"],["patref"]]]],[11,R[1237],E,E,308,[[["self"],[R[1295]]]]],[11,R[1238],E,E,308,[[["self"],[R[1278]]]]],[11,R[1239],E,E,308,[[["self"],[R[1296]]]]],[11,R[1240],E,E,308,[[["self"],[R[1241]]]]],[11,R[1242],E,E,308,[[["self"],[R[1243]]]]],[11,R[1244],E,E,308,[[["self"],["patwild"]]]],[11,R[876],E,E,308,[[["self"],["path"]]]],[11,R[877],E,E,308,[[["self"],[R[878]]]]],[11,R[879],E,E,308,[[["self"],[R[880]]]]],[11,R[881],E,E,308,[[["self"],[R[882]]]]],[11,R[883],E,E,308,[[["self"],[R[884]]]]],[11,R[885],E,E,308,[[["self"],[R[886]]]]],[11,R[887],E,E,308,[[["self"],["qself"]]]],[11,R[1245],E,E,308,[[["self"],[R[1246]]]]],[11,R[888],E,E,308,[[["self"],[R[889]]]]],[11,R[1297],E,E,308,[[["self"],["stmt"]]]],[11,R[891],E,E,308,[[["self"],[R[892]]]]],[11,R[893],E,E,308,[[["self"],[R[894]]]]],[11,R[1247],E,E,308,[[["self"],[R[1284]]]]],[11,R[1248],E,E,308,[[["self"],[R[1249]]]]],[11,R[1250],E,E,308,[[["self"],[R[1251]]]]],[11,R[1252],E,E,308,[[["self"],[R[1253]]]]],[11,R[1254],E,E,308,[[["self"],[R[1255]]]]],[11,R[1256],E,E,308,[[["self"],[R[1257]]]]],[11,R[895],E,E,308,[[["self"],["type"]]]],[11,R[896],E,E,308,[[["self"],[R[897]]]]],[11,R[898],E,E,308,[[["self"],[R[899]]]]],[11,R[900],E,E,308,[[["self"],[R[901]]]]],[11,R[902],E,E,308,[[["self"],[R[903]]]]],[11,R[904],E,E,308,[[["self"],[R[905]]]]],[11,R[906],E,E,308,[[["self"],[R[907]]]]],[11,R[908],E,E,308,[[["self"],[R[909]]]]],[11,R[910],E,E,308,[[["self"],[R[911]]]]],[11,R[912],E,E,308,[[["self"],[R[913]]]]],[11,R[914],E,E,308,[[["self"],[R[915]]]]],[11,R[916],E,E,308,[[["self"],[R[960]]]]],[11,R[917],E,E,308,[[["self"],[R[993]]]]],[11,R[918],E,E,308,[[["self"],[R[919]]]]],[11,R[920],E,E,308,[[["self"],[R[921]]]]],[11,R[922],E,E,308,[[["self"],[R[923]]]]],[11,R[924],E,E,308,[[["self"],[R[925]]]]],[11,R[926],E,E,308,[[["self"],[R[927]]]]],[11,R[928],E,E,308,[[["self"],["unop"]]]],[11,R[1258],E,E,308,[[["self"],["useglob"]]]],[11,R[1259],E,E,308,[[["self"],[R[1298]]]]],[11,R[1260],E,E,308,[[["self"],["usename"]]]],[11,R[1261],E,E,308,[[["self"],["usepath"]]]],[11,R[1262],E,E,308,[[["self"],[R[1283]]]]],[11,R[1263],E,E,308,[[["self"],["usetree"]]]],[11,R[929],E,E,308,[[["self"],[R[999]]]]],[11,R[930],E,E,308,[[["self"],[R[953]]]]],[11,R[931],E,E,308,[[["self"],[R[932]]]]],[11,R[933],E,E,308,[[["self"],[R[934]]]]],[11,R[935],E,E,308,[[["self"],[R[936]]]]],[11,R[937],E,E,308,[[["self"],[R[792]]]]],[11,R[938],E,E,308,[[["self"],[R[939]]]]],[11,R[890],E,E,308,[[["self"],["span"]]]],[11,R[848],E,E,308,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[1269],R[1264],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[1331],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[0,"discouraged",E,"Extensions to the parsing API with niche applicability.",N,N],[8,R[1330],"syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",N,N],[10,"advance_to",E,"Advance this parse stream to the position of a forked…",309,[[["self"]]]],[6,"Result",R[1269],R[1268],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,310,[[[R[1133]]],[R[2]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,311,N],[10,"parse2",E,R[787],311,[[[R[203]]],[R[2]]]],[11,"parse",E,R[788],311,[[[R[203]]],[R[2]]]],[11,R[789],E,R[790],311,[[["str"]],[R[2]]]],[11,"error",E,R[1267],312,[[["display"]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",313,[[["self"]],[[R[2]],["parse"]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",313,[[["self"]],[R[2]]]],[11,"peek",E,R[1299],313,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",313,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",313,[[["self"],["peek"]],["bool"]]],[11,R[1265],E,R[1266],313,[[["self"]],[[R[2],[R[779]]],[R[779]]]]],[11,R[461],E,"Returns whether there are tokens remaining in this stream.",313,[[["self"]],["bool"]]],[11,"lookahead1",E,"Constructs a helper for peeking at the next token in this…",313,[[["self"]],["lookahead1"]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",313,[[["self"]],["self"]]],[11,"error",E,R[1267],313,[[["self"],["display"]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",313,[[["self"],["f"]],[R[2]]]],[11,"cursor",E,"Provides low-level access to the token representation…",313,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",314,[[["display"],["span"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",314,[[["totokens"],["display"]],["self"]]],[11,"span",E,"The source location of the error.",314,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",314,[[["self"]],[R[203]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[1268],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation",E,"Define a type that supports parsing and printing a…",N,N],[11,"peek",E,E,315,[[["cursor"]],["bool"]]],[11,"display",E,E,315,[[],["str"]]],[11,"span",E,E,315,[[["self"]],["span"]]],[11,"into",E,E,315,[[],[U]]],[11,R[82],E,E,315,[[["self"]],[R[81]]]],[11,R[83],E,E,315,[[["self"]],[T]]],[11,R[84],E,E,315,[[["self"],[T]]]],[11,"from",E,E,315,[[[T]],[T]]],[11,R[8],E,E,315,[[[U]],[R[2]]]],[11,R[9],E,E,315,[[],[R[2]]]],[11,R[10],E,E,315,[[["self"]],[T]]],[11,R[28],E,E,315,[[["self"]],[T]]],[11,R[11],E,E,315,[[["self"]],[R[29]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"into",E,E,2,[[],[U]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"into",E,E,7,[[],[U]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"into",E,E,10,[[],[U]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"into",E,E,11,[[],[U]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"into",E,E,12,[[],[U]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"into",E,E,13,[[],[U]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[[U]],[R[2]]]],[11,R[9],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"into",E,E,14,[[],[U]]],[11,R[83],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[[U]],[R[2]]]],[11,R[9],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"into",E,E,15,[[],[U]]],[11,R[83],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[[U]],[R[2]]]],[11,R[9],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"into",E,E,16,[[],[U]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[[U]],[R[2]]]],[11,R[9],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"into",E,E,17,[[],[U]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[[U]],[R[2]]]],[11,R[9],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"into",E,E,18,[[],[U]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[[U]],[R[2]]]],[11,R[9],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"into",E,E,19,[[],[U]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[[U]],[R[2]]]],[11,R[9],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"into",E,E,20,[[],[U]]],[11,R[83],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[[U]],[R[2]]]],[11,R[9],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"into",E,E,21,[[],[U]]],[11,R[83],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"],[T]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[[U]],[R[2]]]],[11,R[9],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"into",E,E,22,[[],[U]]],[11,R[83],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[[U]],[R[2]]]],[11,R[9],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"into",E,E,23,[[],[U]]],[11,R[83],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[[U]],[R[2]]]],[11,R[9],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"into",E,E,24,[[],[U]]],[11,R[83],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[[U]],[R[2]]]],[11,R[9],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"into",E,E,25,[[],[U]]],[11,R[83],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[[U]],[R[2]]]],[11,R[9],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"into",E,E,26,[[],[U]]],[11,R[83],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[[U]],[R[2]]]],[11,R[9],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"into",E,E,27,[[],[U]]],[11,R[83],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[[U]],[R[2]]]],[11,R[9],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"into",E,E,28,[[],[U]]],[11,R[83],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[[U]],[R[2]]]],[11,R[9],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"into",E,E,29,[[],[U]]],[11,R[83],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[[U]],[R[2]]]],[11,R[9],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"into",E,E,30,[[],[U]]],[11,R[83],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[[U]],[R[2]]]],[11,R[9],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,"into",E,E,31,[[],[U]]],[11,R[83],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"],[T]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[[U]],[R[2]]]],[11,R[9],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"into",E,E,32,[[],[U]]],[11,R[83],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[[U]],[R[2]]]],[11,R[9],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"into",E,E,33,[[],[U]]],[11,R[83],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[[U]],[R[2]]]],[11,R[9],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"into",E,E,34,[[],[U]]],[11,R[83],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[[U]],[R[2]]]],[11,R[9],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"span",E,E,35,[[["self"]],["span"]]],[11,"into",E,E,35,[[],[U]]],[11,R[83],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[[U]],[R[2]]]],[11,R[9],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"span",E,E,36,[[["self"]],["span"]]],[11,"into",E,E,36,[[],[U]]],[11,R[83],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"],[T]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[[U]],[R[2]]]],[11,R[9],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"span",E,E,37,[[["self"]],["span"]]],[11,"into",E,E,37,[[],[U]]],[11,R[83],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"],[T]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[[U]],[R[2]]]],[11,R[9],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"into",E,E,38,[[],[U]]],[11,R[83],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"],[T]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[[U]],[R[2]]]],[11,R[9],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"into",E,E,39,[[],[U]]],[11,R[83],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"],[T]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[[U]],[R[2]]]],[11,R[9],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"into",E,E,40,[[],[U]]],[11,R[83],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"],[T]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[[U]],[R[2]]]],[11,R[9],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"into",E,E,41,[[],[U]]],[11,R[83],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"],[T]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[[U]],[R[2]]]],[11,R[9],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"into",E,E,42,[[],[U]]],[11,R[83],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"],[T]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[[U]],[R[2]]]],[11,R[9],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"into",E,E,43,[[],[U]]],[11,R[83],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"],[T]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[[U]],[R[2]]]],[11,R[9],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"into",E,E,44,[[],[U]]],[11,R[83],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"],[T]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[[U]],[R[2]]]],[11,R[9],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"into",E,E,45,[[],[U]]],[11,R[83],E,E,45,[[["self"]],[T]]],[11,R[84],E,E,45,[[["self"],[T]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[[U]],[R[2]]]],[11,R[9],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"into",E,E,46,[[],[U]]],[11,R[83],E,E,46,[[["self"]],[T]]],[11,R[84],E,E,46,[[["self"],[T]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[[U]],[R[2]]]],[11,R[9],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"into",E,E,47,[[],[U]]],[11,R[83],E,E,47,[[["self"]],[T]]],[11,R[84],E,E,47,[[["self"],[T]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[[U]],[R[2]]]],[11,R[9],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"into",E,E,48,[[],[U]]],[11,R[83],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"],[T]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[[U]],[R[2]]]],[11,R[9],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"into",E,E,49,[[],[U]]],[11,R[83],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"],[T]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[[U]],[R[2]]]],[11,R[9],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"into",E,E,50,[[],[U]]],[11,R[83],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"],[T]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[[U]],[R[2]]]],[11,R[9],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"into",E,E,51,[[],[U]]],[11,R[83],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"],[T]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[[U]],[R[2]]]],[11,R[9],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"into",E,E,52,[[],[U]]],[11,R[83],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"],[T]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[[U]],[R[2]]]],[11,R[9],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"into",E,E,53,[[],[U]]],[11,R[83],E,E,53,[[["self"]],[T]]],[11,R[84],E,E,53,[[["self"],[T]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[[U]],[R[2]]]],[11,R[9],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"into",E,E,54,[[],[U]]],[11,R[83],E,E,54,[[["self"]],[T]]],[11,R[84],E,E,54,[[["self"],[T]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[[U]],[R[2]]]],[11,R[9],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"into",E,E,55,[[],[U]]],[11,R[83],E,E,55,[[["self"]],[T]]],[11,R[84],E,E,55,[[["self"],[T]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[[U]],[R[2]]]],[11,R[9],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"into",E,E,56,[[],[U]]],[11,R[83],E,E,56,[[["self"]],[T]]],[11,R[84],E,E,56,[[["self"],[T]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[[U]],[R[2]]]],[11,R[9],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"into",E,E,57,[[],[U]]],[11,R[83],E,E,57,[[["self"]],[T]]],[11,R[84],E,E,57,[[["self"],[T]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[[U]],[R[2]]]],[11,R[9],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"into",E,E,58,[[],[U]]],[11,R[83],E,E,58,[[["self"]],[T]]],[11,R[84],E,E,58,[[["self"],[T]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[[U]],[R[2]]]],[11,R[9],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"into",E,E,59,[[],[U]]],[11,R[83],E,E,59,[[["self"]],[T]]],[11,R[84],E,E,59,[[["self"],[T]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[[U]],[R[2]]]],[11,R[9],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"into",E,E,60,[[],[U]]],[11,R[83],E,E,60,[[["self"]],[T]]],[11,R[84],E,E,60,[[["self"],[T]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[[U]],[R[2]]]],[11,R[9],E,E,60,[[],[R[2]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"into",E,E,61,[[],[U]]],[11,R[83],E,E,61,[[["self"]],[T]]],[11,R[84],E,E,61,[[["self"],[T]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[[U]],[R[2]]]],[11,R[9],E,E,61,[[],[R[2]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,"span",E,E,62,[[["self"]],["span"]]],[11,"into",E,E,62,[[],[U]]],[11,R[83],E,E,62,[[["self"]],[T]]],[11,R[84],E,E,62,[[["self"],[T]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[[U]],[R[2]]]],[11,R[9],E,E,62,[[],[R[2]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,"span",E,E,63,[[["self"]],["span"]]],[11,"into",E,E,63,[[],[U]]],[11,R[83],E,E,63,[[["self"]],[T]]],[11,R[84],E,E,63,[[["self"],[T]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[[U]],[R[2]]]],[11,R[9],E,E,63,[[],[R[2]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"into",E,E,64,[[],[U]]],[11,R[83],E,E,64,[[["self"]],[T]]],[11,R[84],E,E,64,[[["self"],[T]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[[U]],[R[2]]]],[11,R[9],E,E,64,[[],[R[2]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"into",E,E,65,[[],[U]]],[11,R[83],E,E,65,[[["self"]],[T]]],[11,R[84],E,E,65,[[["self"],[T]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[[U]],[R[2]]]],[11,R[9],E,E,65,[[],[R[2]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"into",E,E,66,[[],[U]]],[11,R[83],E,E,66,[[["self"]],[T]]],[11,R[84],E,E,66,[[["self"],[T]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[[U]],[R[2]]]],[11,R[9],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"into",E,E,67,[[],[U]]],[11,R[83],E,E,67,[[["self"]],[T]]],[11,R[84],E,E,67,[[["self"],[T]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[[U]],[R[2]]]],[11,R[9],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"into",E,E,68,[[],[U]]],[11,R[83],E,E,68,[[["self"]],[T]]],[11,R[84],E,E,68,[[["self"],[T]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[[U]],[R[2]]]],[11,R[9],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"into",E,E,69,[[],[U]]],[11,R[83],E,E,69,[[["self"]],[T]]],[11,R[84],E,E,69,[[["self"],[T]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[[U]],[R[2]]]],[11,R[9],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"into",E,E,70,[[],[U]]],[11,R[83],E,E,70,[[["self"]],[T]]],[11,R[84],E,E,70,[[["self"],[T]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[[U]],[R[2]]]],[11,R[9],E,E,70,[[],[R[2]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"into",E,E,71,[[],[U]]],[11,R[83],E,E,71,[[["self"]],[T]]],[11,R[84],E,E,71,[[["self"],[T]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[8],E,E,71,[[[U]],[R[2]]]],[11,R[9],E,E,71,[[],[R[2]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"into",E,E,72,[[],[U]]],[11,R[83],E,E,72,[[["self"]],[T]]],[11,R[84],E,E,72,[[["self"],[T]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[8],E,E,72,[[[U]],[R[2]]]],[11,R[9],E,E,72,[[],[R[2]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"into",E,E,73,[[],[U]]],[11,R[83],E,E,73,[[["self"]],[T]]],[11,R[84],E,E,73,[[["self"],[T]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[8],E,E,73,[[[U]],[R[2]]]],[11,R[9],E,E,73,[[],[R[2]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,"span",E,E,74,[[["self"]],["span"]]],[11,"into",E,E,74,[[],[U]]],[11,R[83],E,E,74,[[["self"]],[T]]],[11,R[84],E,E,74,[[["self"],[T]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[8],E,E,74,[[[U]],[R[2]]]],[11,R[9],E,E,74,[[],[R[2]]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,"span",E,E,75,[[["self"]],["span"]]],[11,"into",E,E,75,[[],[U]]],[11,R[83],E,E,75,[[["self"]],[T]]],[11,R[84],E,E,75,[[["self"],[T]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[8],E,E,75,[[[U]],[R[2]]]],[11,R[9],E,E,75,[[],[R[2]]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[29]]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"into",E,E,76,[[],[U]]],[11,R[83],E,E,76,[[["self"]],[T]]],[11,R[84],E,E,76,[[["self"],[T]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[8],E,E,76,[[[U]],[R[2]]]],[11,R[9],E,E,76,[[],[R[2]]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[29]]]],[11,"span",E,E,77,[[["self"]],["span"]]],[11,"into",E,E,77,[[],[U]]],[11,R[83],E,E,77,[[["self"]],[T]]],[11,R[84],E,E,77,[[["self"],[T]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[8],E,E,77,[[[U]],[R[2]]]],[11,R[9],E,E,77,[[],[R[2]]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[29]]]],[11,"span",E,E,78,[[["self"]],["span"]]],[11,"into",E,E,78,[[],[U]]],[11,R[83],E,E,78,[[["self"]],[T]]],[11,R[84],E,E,78,[[["self"],[T]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[8],E,E,78,[[[U]],[R[2]]]],[11,R[9],E,E,78,[[],[R[2]]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[29]]]],[11,"span",E,E,79,[[["self"]],["span"]]],[11,"into",E,E,79,[[],[U]]],[11,R[83],E,E,79,[[["self"]],[T]]],[11,R[84],E,E,79,[[["self"],[T]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[8],E,E,79,[[[U]],[R[2]]]],[11,R[9],E,E,79,[[],[R[2]]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[29]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"into",E,E,80,[[],[U]]],[11,R[83],E,E,80,[[["self"]],[T]]],[11,R[84],E,E,80,[[["self"],[T]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[8],E,E,80,[[[U]],[R[2]]]],[11,R[9],E,E,80,[[],[R[2]]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[29]]]],[11,"span",E,E,316,[[["self"]],["span"]]],[11,"into",E,E,316,[[],[U]]],[11,R[83],E,E,316,[[["self"]],[T]]],[11,R[84],E,E,316,[[["self"],[T]]]],[11,"from",E,E,316,[[[T]],[T]]],[11,R[8],E,E,316,[[[U]],[R[2]]]],[11,R[9],E,E,316,[[],[R[2]]]],[11,R[10],E,E,316,[[["self"]],[T]]],[11,R[28],E,E,316,[[["self"]],[T]]],[11,R[11],E,E,316,[[["self"]],[R[29]]]],[11,"span",E,E,317,[[["self"]],["span"]]],[11,"into",E,E,317,[[],[U]]],[11,R[83],E,E,317,[[["self"]],[T]]],[11,R[84],E,E,317,[[["self"],[T]]]],[11,"from",E,E,317,[[[T]],[T]]],[11,R[8],E,E,317,[[[U]],[R[2]]]],[11,R[9],E,E,317,[[],[R[2]]]],[11,R[10],E,E,317,[[["self"]],[T]]],[11,R[28],E,E,317,[[["self"]],[T]]],[11,R[11],E,E,317,[[["self"]],[R[29]]]],[11,"span",E,E,295,[[["self"]],["span"]]],[11,"into",E,E,295,[[],[U]]],[11,R[83],E,E,295,[[["self"]],[T]]],[11,R[84],E,E,295,[[["self"],[T]]]],[11,"from",E,E,295,[[[T]],[T]]],[11,R[8],E,E,295,[[[U]],[R[2]]]],[11,R[9],E,E,295,[[],[R[2]]]],[11,R[10],E,E,295,[[["self"]],[T]]],[11,R[28],E,E,295,[[["self"]],[T]]],[11,R[11],E,E,295,[[["self"]],[R[29]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"into",E,E,81,[[],[U]]],[11,R[83],E,E,81,[[["self"]],[T]]],[11,R[84],E,E,81,[[["self"],[T]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[8],E,E,81,[[[U]],[R[2]]]],[11,R[9],E,E,81,[[],[R[2]]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[29]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"into",E,E,82,[[],[U]]],[11,R[83],E,E,82,[[["self"]],[T]]],[11,R[84],E,E,82,[[["self"],[T]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[8],E,E,82,[[[U]],[R[2]]]],[11,R[9],E,E,82,[[],[R[2]]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[29]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"into",E,E,83,[[],[U]]],[11,R[83],E,E,83,[[["self"]],[T]]],[11,R[84],E,E,83,[[["self"],[T]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[8],E,E,83,[[[U]],[R[2]]]],[11,R[9],E,E,83,[[],[R[2]]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[29]]]],[11,"into",E,E,84,[[],[U]]],[11,R[83],E,E,84,[[["self"]],[T]]],[11,R[84],E,E,84,[[["self"],[T]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[8],E,E,84,[[[U]],[R[2]]]],[11,R[9],E,E,84,[[],[R[2]]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[29]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"into",E,E,85,[[],[U]]],[11,R[83],E,E,85,[[["self"]],[T]]],[11,R[84],E,E,85,[[["self"],[T]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[8],E,E,85,[[[U]],[R[2]]]],[11,R[9],E,E,85,[[],[R[2]]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[29]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"into",E,E,86,[[],[U]]],[11,R[83],E,E,86,[[["self"]],[T]]],[11,R[84],E,E,86,[[["self"],[T]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[8],E,E,86,[[[U]],[R[2]]]],[11,R[9],E,E,86,[[],[R[2]]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[29]]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"into",E,E,87,[[],[U]]],[11,R[83],E,E,87,[[["self"]],[T]]],[11,R[84],E,E,87,[[["self"],[T]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[8],E,E,87,[[[U]],[R[2]]]],[11,R[9],E,E,87,[[],[R[2]]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[29]]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"into",E,E,88,[[],[U]]],[11,R[83],E,E,88,[[["self"]],[T]]],[11,R[84],E,E,88,[[["self"],[T]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[8],E,E,88,[[[U]],[R[2]]]],[11,R[9],E,E,88,[[],[R[2]]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[29]]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"into",E,E,89,[[],[U]]],[11,R[83],E,E,89,[[["self"]],[T]]],[11,R[84],E,E,89,[[["self"],[T]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[8],E,E,89,[[[U]],[R[2]]]],[11,R[9],E,E,89,[[],[R[2]]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[29]]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"into",E,E,90,[[],[U]]],[11,R[83],E,E,90,[[["self"]],[T]]],[11,R[84],E,E,90,[[["self"],[T]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[8],E,E,90,[[[U]],[R[2]]]],[11,R[9],E,E,90,[[],[R[2]]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[28],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[29]]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"into",E,E,91,[[],[U]]],[11,R[83],E,E,91,[[["self"]],[T]]],[11,R[84],E,E,91,[[["self"],[T]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[8],E,E,91,[[[U]],[R[2]]]],[11,R[9],E,E,91,[[],[R[2]]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[29]]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"into",E,E,92,[[],[U]]],[11,R[83],E,E,92,[[["self"]],[T]]],[11,R[84],E,E,92,[[["self"],[T]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[8],E,E,92,[[[U]],[R[2]]]],[11,R[9],E,E,92,[[],[R[2]]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[29]]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"into",E,E,93,[[],[U]]],[11,R[83],E,E,93,[[["self"]],[T]]],[11,R[84],E,E,93,[[["self"],[T]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[8],E,E,93,[[[U]],[R[2]]]],[11,R[9],E,E,93,[[],[R[2]]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[29]]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"into",E,E,94,[[],[U]]],[11,R[83],E,E,94,[[["self"]],[T]]],[11,R[84],E,E,94,[[["self"],[T]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[8],E,E,94,[[[U]],[R[2]]]],[11,R[9],E,E,94,[[],[R[2]]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[29]]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"into",E,E,95,[[],[U]]],[11,R[83],E,E,95,[[["self"]],[T]]],[11,R[84],E,E,95,[[["self"],[T]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[8],E,E,95,[[[U]],[R[2]]]],[11,R[9],E,E,95,[[],[R[2]]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[29]]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"into",E,E,96,[[],[U]]],[11,R[83],E,E,96,[[["self"]],[T]]],[11,R[84],E,E,96,[[["self"],[T]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[8],E,E,96,[[[U]],[R[2]]]],[11,R[9],E,E,96,[[],[R[2]]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[29]]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"into",E,E,97,[[],[U]]],[11,R[83],E,E,97,[[["self"]],[T]]],[11,R[84],E,E,97,[[["self"],[T]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[8],E,E,97,[[[U]],[R[2]]]],[11,R[9],E,E,97,[[],[R[2]]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[28],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[29]]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"into",E,E,98,[[],[U]]],[11,R[83],E,E,98,[[["self"]],[T]]],[11,R[84],E,E,98,[[["self"],[T]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[8],E,E,98,[[[U]],[R[2]]]],[11,R[9],E,E,98,[[],[R[2]]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[28],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[29]]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"into",E,E,99,[[],[U]]],[11,R[83],E,E,99,[[["self"]],[T]]],[11,R[84],E,E,99,[[["self"],[T]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[8],E,E,99,[[[U]],[R[2]]]],[11,R[9],E,E,99,[[],[R[2]]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[28],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[29]]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"into",E,E,100,[[],[U]]],[11,R[83],E,E,100,[[["self"]],[T]]],[11,R[84],E,E,100,[[["self"],[T]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[8],E,E,100,[[[U]],[R[2]]]],[11,R[9],E,E,100,[[],[R[2]]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[28],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[29]]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"into",E,E,101,[[],[U]]],[11,R[83],E,E,101,[[["self"]],[T]]],[11,R[84],E,E,101,[[["self"],[T]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[8],E,E,101,[[[U]],[R[2]]]],[11,R[9],E,E,101,[[],[R[2]]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[28],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[29]]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"into",E,E,102,[[],[U]]],[11,R[83],E,E,102,[[["self"]],[T]]],[11,R[84],E,E,102,[[["self"],[T]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[8],E,E,102,[[[U]],[R[2]]]],[11,R[9],E,E,102,[[],[R[2]]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[28],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[29]]]],[11,"span",E,E,103,[[["self"]],["span"]]],[11,"into",E,E,103,[[],[U]]],[11,R[83],E,E,103,[[["self"]],[T]]],[11,R[84],E,E,103,[[["self"],[T]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[8],E,E,103,[[[U]],[R[2]]]],[11,R[9],E,E,103,[[],[R[2]]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[28],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[29]]]],[11,"span",E,E,104,[[["self"]],["span"]]],[11,"into",E,E,104,[[],[U]]],[11,R[83],E,E,104,[[["self"]],[T]]],[11,R[84],E,E,104,[[["self"],[T]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[8],E,E,104,[[[U]],[R[2]]]],[11,R[9],E,E,104,[[],[R[2]]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[28],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[29]]]],[11,"span",E,E,105,[[["self"]],["span"]]],[11,"into",E,E,105,[[],[U]]],[11,R[83],E,E,105,[[["self"]],[T]]],[11,R[84],E,E,105,[[["self"],[T]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[8],E,E,105,[[[U]],[R[2]]]],[11,R[9],E,E,105,[[],[R[2]]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[28],E,E,105,[[["self"]],[T]]],[11,R[11],E,E,105,[[["self"]],[R[29]]]],[11,"span",E,E,106,[[["self"]],["span"]]],[11,"into",E,E,106,[[],[U]]],[11,R[83],E,E,106,[[["self"]],[T]]],[11,R[84],E,E,106,[[["self"],[T]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[8],E,E,106,[[[U]],[R[2]]]],[11,R[9],E,E,106,[[],[R[2]]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[28],E,E,106,[[["self"]],[T]]],[11,R[11],E,E,106,[[["self"]],[R[29]]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"into",E,E,107,[[],[U]]],[11,R[83],E,E,107,[[["self"]],[T]]],[11,R[84],E,E,107,[[["self"],[T]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[8],E,E,107,[[[U]],[R[2]]]],[11,R[9],E,E,107,[[],[R[2]]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[28],E,E,107,[[["self"]],[T]]],[11,R[11],E,E,107,[[["self"]],[R[29]]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"into",E,E,108,[[],[U]]],[11,R[83],E,E,108,[[["self"]],[T]]],[11,R[84],E,E,108,[[["self"],[T]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[8],E,E,108,[[[U]],[R[2]]]],[11,R[9],E,E,108,[[],[R[2]]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[28],E,E,108,[[["self"]],[T]]],[11,R[11],E,E,108,[[["self"]],[R[29]]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"into",E,E,109,[[],[U]]],[11,R[83],E,E,109,[[["self"]],[T]]],[11,R[84],E,E,109,[[["self"],[T]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[8],E,E,109,[[[U]],[R[2]]]],[11,R[9],E,E,109,[[],[R[2]]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[28],E,E,109,[[["self"]],[T]]],[11,R[11],E,E,109,[[["self"]],[R[29]]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"into",E,E,110,[[],[U]]],[11,R[83],E,E,110,[[["self"]],[T]]],[11,R[84],E,E,110,[[["self"],[T]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[8],E,E,110,[[[U]],[R[2]]]],[11,R[9],E,E,110,[[],[R[2]]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[28],E,E,110,[[["self"]],[T]]],[11,R[11],E,E,110,[[["self"]],[R[29]]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"into",E,E,111,[[],[U]]],[11,R[83],E,E,111,[[["self"]],[T]]],[11,R[84],E,E,111,[[["self"],[T]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[8],E,E,111,[[[U]],[R[2]]]],[11,R[9],E,E,111,[[],[R[2]]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[28],E,E,111,[[["self"]],[T]]],[11,R[11],E,E,111,[[["self"]],[R[29]]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"into",E,E,112,[[],[U]]],[11,R[83],E,E,112,[[["self"]],[T]]],[11,R[84],E,E,112,[[["self"],[T]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[8],E,E,112,[[[U]],[R[2]]]],[11,R[9],E,E,112,[[],[R[2]]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[28],E,E,112,[[["self"]],[T]]],[11,R[11],E,E,112,[[["self"]],[R[29]]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"into",E,E,113,[[],[U]]],[11,R[83],E,E,113,[[["self"]],[T]]],[11,R[84],E,E,113,[[["self"],[T]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[8],E,E,113,[[[U]],[R[2]]]],[11,R[9],E,E,113,[[],[R[2]]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[28],E,E,113,[[["self"]],[T]]],[11,R[11],E,E,113,[[["self"]],[R[29]]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"into",E,E,114,[[],[U]]],[11,R[83],E,E,114,[[["self"]],[T]]],[11,R[84],E,E,114,[[["self"],[T]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[8],E,E,114,[[[U]],[R[2]]]],[11,R[9],E,E,114,[[],[R[2]]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[28],E,E,114,[[["self"]],[T]]],[11,R[11],E,E,114,[[["self"]],[R[29]]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"into",E,E,115,[[],[U]]],[11,R[83],E,E,115,[[["self"]],[T]]],[11,R[84],E,E,115,[[["self"],[T]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[8],E,E,115,[[[U]],[R[2]]]],[11,R[9],E,E,115,[[],[R[2]]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[28],E,E,115,[[["self"]],[T]]],[11,R[11],E,E,115,[[["self"]],[R[29]]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"into",E,E,116,[[],[U]]],[11,R[83],E,E,116,[[["self"]],[T]]],[11,R[84],E,E,116,[[["self"],[T]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[8],E,E,116,[[[U]],[R[2]]]],[11,R[9],E,E,116,[[],[R[2]]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[28],E,E,116,[[["self"]],[T]]],[11,R[11],E,E,116,[[["self"]],[R[29]]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"into",E,E,117,[[],[U]]],[11,R[83],E,E,117,[[["self"]],[T]]],[11,R[84],E,E,117,[[["self"],[T]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[8],E,E,117,[[[U]],[R[2]]]],[11,R[9],E,E,117,[[],[R[2]]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[28],E,E,117,[[["self"]],[T]]],[11,R[11],E,E,117,[[["self"]],[R[29]]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"into",E,E,118,[[],[U]]],[11,R[83],E,E,118,[[["self"]],[T]]],[11,R[84],E,E,118,[[["self"],[T]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[8],E,E,118,[[[U]],[R[2]]]],[11,R[9],E,E,118,[[],[R[2]]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[28],E,E,118,[[["self"]],[T]]],[11,R[11],E,E,118,[[["self"]],[R[29]]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"into",E,E,119,[[],[U]]],[11,R[83],E,E,119,[[["self"]],[T]]],[11,R[84],E,E,119,[[["self"],[T]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[8],E,E,119,[[[U]],[R[2]]]],[11,R[9],E,E,119,[[],[R[2]]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[28],E,E,119,[[["self"]],[T]]],[11,R[11],E,E,119,[[["self"]],[R[29]]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"into",E,E,120,[[],[U]]],[11,R[83],E,E,120,[[["self"]],[T]]],[11,R[84],E,E,120,[[["self"],[T]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[8],E,E,120,[[[U]],[R[2]]]],[11,R[9],E,E,120,[[],[R[2]]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[28],E,E,120,[[["self"]],[T]]],[11,R[11],E,E,120,[[["self"]],[R[29]]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"into",E,E,121,[[],[U]]],[11,R[83],E,E,121,[[["self"]],[T]]],[11,R[84],E,E,121,[[["self"],[T]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[8],E,E,121,[[[U]],[R[2]]]],[11,R[9],E,E,121,[[],[R[2]]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[28],E,E,121,[[["self"]],[T]]],[11,R[11],E,E,121,[[["self"]],[R[29]]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"into",E,E,122,[[],[U]]],[11,R[83],E,E,122,[[["self"]],[T]]],[11,R[84],E,E,122,[[["self"],[T]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[8],E,E,122,[[[U]],[R[2]]]],[11,R[9],E,E,122,[[],[R[2]]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[28],E,E,122,[[["self"]],[T]]],[11,R[11],E,E,122,[[["self"]],[R[29]]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"into",E,E,123,[[],[U]]],[11,R[83],E,E,123,[[["self"]],[T]]],[11,R[84],E,E,123,[[["self"],[T]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[8],E,E,123,[[[U]],[R[2]]]],[11,R[9],E,E,123,[[],[R[2]]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[28],E,E,123,[[["self"]],[T]]],[11,R[11],E,E,123,[[["self"]],[R[29]]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"into",E,E,124,[[],[U]]],[11,R[83],E,E,124,[[["self"]],[T]]],[11,R[84],E,E,124,[[["self"],[T]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[8],E,E,124,[[[U]],[R[2]]]],[11,R[9],E,E,124,[[],[R[2]]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[28],E,E,124,[[["self"]],[T]]],[11,R[11],E,E,124,[[["self"]],[R[29]]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"into",E,E,125,[[],[U]]],[11,R[83],E,E,125,[[["self"]],[T]]],[11,R[84],E,E,125,[[["self"],[T]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[8],E,E,125,[[[U]],[R[2]]]],[11,R[9],E,E,125,[[],[R[2]]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[28],E,E,125,[[["self"]],[T]]],[11,R[11],E,E,125,[[["self"]],[R[29]]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"into",E,E,126,[[],[U]]],[11,R[82],E,E,126,[[["self"]],[R[81]]]],[11,R[83],E,E,126,[[["self"]],[T]]],[11,R[84],E,E,126,[[["self"],[T]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[8],E,E,126,[[[U]],[R[2]]]],[11,R[9],E,E,126,[[],[R[2]]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[28],E,E,126,[[["self"]],[T]]],[11,R[11],E,E,126,[[["self"]],[R[29]]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"into",E,E,127,[[],[U]]],[11,R[83],E,E,127,[[["self"]],[T]]],[11,R[84],E,E,127,[[["self"],[T]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[8],E,E,127,[[[U]],[R[2]]]],[11,R[9],E,E,127,[[],[R[2]]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[28],E,E,127,[[["self"]],[T]]],[11,R[11],E,E,127,[[["self"]],[R[29]]]],[11,"peek",E,E,298,[[["cursor"]],["bool"]]],[11,"display",E,E,298,[[],["str"]]],[11,"span",E,E,298,[[["self"]],["span"]]],[11,"into",E,E,298,[[],[U]]],[11,R[83],E,E,298,[[["self"]],[T]]],[11,R[84],E,E,298,[[["self"],[T]]]],[11,"from",E,E,298,[[[T]],[T]]],[11,R[8],E,E,298,[[[U]],[R[2]]]],[11,R[9],E,E,298,[[],[R[2]]]],[11,R[10],E,E,298,[[["self"]],[T]]],[11,R[28],E,E,298,[[["self"]],[T]]],[11,R[11],E,E,298,[[["self"]],[R[29]]]],[11,"peek",E,E,297,[[["cursor"]],["bool"]]],[11,"display",E,E,297,[[],["str"]]],[11,"span",E,E,297,[[["self"]],["span"]]],[11,"into",E,E,297,[[],[U]]],[11,R[83],E,E,297,[[["self"]],[T]]],[11,R[84],E,E,297,[[["self"],[T]]]],[11,"from",E,E,297,[[[T]],[T]]],[11,R[8],E,E,297,[[[U]],[R[2]]]],[11,R[9],E,E,297,[[],[R[2]]]],[11,R[10],E,E,297,[[["self"]],[T]]],[11,R[28],E,E,297,[[["self"]],[T]]],[11,R[11],E,E,297,[[["self"]],[R[29]]]],[11,"peek",E,E,299,[[["cursor"]],["bool"]]],[11,"display",E,E,299,[[],["str"]]],[11,"span",E,E,299,[[["self"]],["span"]]],[11,"into",E,E,299,[[],[U]]],[11,R[83],E,E,299,[[["self"]],[T]]],[11,R[84],E,E,299,[[["self"],[T]]]],[11,"from",E,E,299,[[[T]],[T]]],[11,R[8],E,E,299,[[[U]],[R[2]]]],[11,R[9],E,E,299,[[],[R[2]]]],[11,R[10],E,E,299,[[["self"]],[T]]],[11,R[28],E,E,299,[[["self"]],[T]]],[11,R[11],E,E,299,[[["self"]],[R[29]]]],[11,"peek",E,E,301,[[["cursor"]],["bool"]]],[11,"display",E,E,301,[[],["str"]]],[11,"span",E,E,301,[[["self"]],["span"]]],[11,"into",E,E,301,[[],[U]]],[11,R[83],E,E,301,[[["self"]],[T]]],[11,R[84],E,E,301,[[["self"],[T]]]],[11,"from",E,E,301,[[[T]],[T]]],[11,R[8],E,E,301,[[[U]],[R[2]]]],[11,R[9],E,E,301,[[],[R[2]]]],[11,R[10],E,E,301,[[["self"]],[T]]],[11,R[28],E,E,301,[[["self"]],[T]]],[11,R[11],E,E,301,[[["self"]],[R[29]]]],[11,"peek",E,E,300,[[["cursor"]],["bool"]]],[11,"display",E,E,300,[[],["str"]]],[11,"span",E,E,300,[[["self"]],["span"]]],[11,"into",E,E,300,[[],[U]]],[11,R[83],E,E,300,[[["self"]],[T]]],[11,R[84],E,E,300,[[["self"],[T]]]],[11,"from",E,E,300,[[[T]],[T]]],[11,R[8],E,E,300,[[[U]],[R[2]]]],[11,R[9],E,E,300,[[],[R[2]]]],[11,R[10],E,E,300,[[["self"]],[T]]],[11,R[28],E,E,300,[[["self"]],[T]]],[11,R[11],E,E,300,[[["self"]],[R[29]]]],[11,"peek",E,E,296,[[["cursor"]],["bool"]]],[11,"display",E,E,296,[[],["str"]]],[11,"span",E,E,296,[[["self"]],["span"]]],[11,"into",E,E,296,[[],[U]]],[11,R[83],E,E,296,[[["self"]],[T]]],[11,R[84],E,E,296,[[["self"],[T]]]],[11,"from",E,E,296,[[[T]],[T]]],[11,R[8],E,E,296,[[[U]],[R[2]]]],[11,R[9],E,E,296,[[],[R[2]]]],[11,R[10],E,E,296,[[["self"]],[T]]],[11,R[28],E,E,296,[[["self"]],[T]]],[11,R[11],E,E,296,[[["self"]],[R[29]]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"into",E,E,128,[[],[U]]],[11,R[83],E,E,128,[[["self"]],[T]]],[11,R[84],E,E,128,[[["self"],[T]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[8],E,E,128,[[[U]],[R[2]]]],[11,R[9],E,E,128,[[],[R[2]]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[28],E,E,128,[[["self"]],[T]]],[11,R[11],E,E,128,[[["self"]],[R[29]]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"into",E,E,129,[[],[U]]],[11,R[83],E,E,129,[[["self"]],[T]]],[11,R[84],E,E,129,[[["self"],[T]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[8],E,E,129,[[[U]],[R[2]]]],[11,R[9],E,E,129,[[],[R[2]]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[28],E,E,129,[[["self"]],[T]]],[11,R[11],E,E,129,[[["self"]],[R[29]]]],[11,"into",E,E,130,[[],[U]]],[11,R[83],E,E,130,[[["self"]],[T]]],[11,R[84],E,E,130,[[["self"],[T]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[8],E,E,130,[[[U]],[R[2]]]],[11,R[9],E,E,130,[[],[R[2]]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[28],E,E,130,[[["self"]],[T]]],[11,R[11],E,E,130,[[["self"]],[R[29]]]],[11,"into",E,E,131,[[],[U]]],[11,R[83],E,E,131,[[["self"]],[T]]],[11,R[84],E,E,131,[[["self"],[T]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[8],E,E,131,[[[U]],[R[2]]]],[11,R[9],E,E,131,[[],[R[2]]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[28],E,E,131,[[["self"]],[T]]],[11,R[11],E,E,131,[[["self"]],[R[29]]]],[11,"into",E,E,132,[[],[U]]],[11,R[83],E,E,132,[[["self"]],[T]]],[11,R[84],E,E,132,[[["self"],[T]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[8],E,E,132,[[[U]],[R[2]]]],[11,R[9],E,E,132,[[],[R[2]]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[28],E,E,132,[[["self"]],[T]]],[11,R[11],E,E,132,[[["self"]],[R[29]]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"into",E,E,133,[[],[U]]],[11,R[83],E,E,133,[[["self"]],[T]]],[11,R[84],E,E,133,[[["self"],[T]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[8],E,E,133,[[[U]],[R[2]]]],[11,R[9],E,E,133,[[],[R[2]]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[28],E,E,133,[[["self"]],[T]]],[11,R[11],E,E,133,[[["self"]],[R[29]]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"into",E,E,134,[[],[U]]],[11,R[83],E,E,134,[[["self"]],[T]]],[11,R[84],E,E,134,[[["self"],[T]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[8],E,E,134,[[[U]],[R[2]]]],[11,R[9],E,E,134,[[],[R[2]]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[28],E,E,134,[[["self"]],[T]]],[11,R[11],E,E,134,[[["self"]],[R[29]]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"into",E,E,135,[[],[U]]],[11,R[83],E,E,135,[[["self"]],[T]]],[11,R[84],E,E,135,[[["self"],[T]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[8],E,E,135,[[[U]],[R[2]]]],[11,R[9],E,E,135,[[],[R[2]]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[28],E,E,135,[[["self"]],[T]]],[11,R[11],E,E,135,[[["self"]],[R[29]]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"into",E,E,136,[[],[U]]],[11,R[83],E,E,136,[[["self"]],[T]]],[11,R[84],E,E,136,[[["self"],[T]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[8],E,E,136,[[[U]],[R[2]]]],[11,R[9],E,E,136,[[],[R[2]]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[28],E,E,136,[[["self"]],[T]]],[11,R[11],E,E,136,[[["self"]],[R[29]]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"into",E,E,137,[[],[U]]],[11,R[83],E,E,137,[[["self"]],[T]]],[11,R[84],E,E,137,[[["self"],[T]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[8],E,E,137,[[[U]],[R[2]]]],[11,R[9],E,E,137,[[],[R[2]]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[28],E,E,137,[[["self"]],[T]]],[11,R[11],E,E,137,[[["self"]],[R[29]]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"into",E,E,138,[[],[U]]],[11,R[83],E,E,138,[[["self"]],[T]]],[11,R[84],E,E,138,[[["self"],[T]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[8],E,E,138,[[[U]],[R[2]]]],[11,R[9],E,E,138,[[],[R[2]]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[28],E,E,138,[[["self"]],[T]]],[11,R[11],E,E,138,[[["self"]],[R[29]]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"into",E,E,139,[[],[U]]],[11,R[83],E,E,139,[[["self"]],[T]]],[11,R[84],E,E,139,[[["self"],[T]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[8],E,E,139,[[[U]],[R[2]]]],[11,R[9],E,E,139,[[],[R[2]]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[28],E,E,139,[[["self"]],[T]]],[11,R[11],E,E,139,[[["self"]],[R[29]]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"into",E,E,140,[[],[U]]],[11,R[83],E,E,140,[[["self"]],[T]]],[11,R[84],E,E,140,[[["self"],[T]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[8],E,E,140,[[[U]],[R[2]]]],[11,R[9],E,E,140,[[],[R[2]]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[28],E,E,140,[[["self"]],[T]]],[11,R[11],E,E,140,[[["self"]],[R[29]]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"into",E,E,141,[[],[U]]],[11,R[83],E,E,141,[[["self"]],[T]]],[11,R[84],E,E,141,[[["self"],[T]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[8],E,E,141,[[[U]],[R[2]]]],[11,R[9],E,E,141,[[],[R[2]]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[28],E,E,141,[[["self"]],[T]]],[11,R[11],E,E,141,[[["self"]],[R[29]]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"into",E,E,142,[[],[U]]],[11,R[83],E,E,142,[[["self"]],[T]]],[11,R[84],E,E,142,[[["self"],[T]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[8],E,E,142,[[[U]],[R[2]]]],[11,R[9],E,E,142,[[],[R[2]]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[28],E,E,142,[[["self"]],[T]]],[11,R[11],E,E,142,[[["self"]],[R[29]]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"into",E,E,143,[[],[U]]],[11,R[83],E,E,143,[[["self"]],[T]]],[11,R[84],E,E,143,[[["self"],[T]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[8],E,E,143,[[[U]],[R[2]]]],[11,R[9],E,E,143,[[],[R[2]]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[28],E,E,143,[[["self"]],[T]]],[11,R[11],E,E,143,[[["self"]],[R[29]]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"into",E,E,144,[[],[U]]],[11,R[83],E,E,144,[[["self"]],[T]]],[11,R[84],E,E,144,[[["self"],[T]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[8],E,E,144,[[[U]],[R[2]]]],[11,R[9],E,E,144,[[],[R[2]]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[28],E,E,144,[[["self"]],[T]]],[11,R[11],E,E,144,[[["self"]],[R[29]]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"into",E,E,145,[[],[U]]],[11,R[83],E,E,145,[[["self"]],[T]]],[11,R[84],E,E,145,[[["self"],[T]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[8],E,E,145,[[[U]],[R[2]]]],[11,R[9],E,E,145,[[],[R[2]]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[28],E,E,145,[[["self"]],[T]]],[11,R[11],E,E,145,[[["self"]],[R[29]]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"into",E,E,146,[[],[U]]],[11,R[83],E,E,146,[[["self"]],[T]]],[11,R[84],E,E,146,[[["self"],[T]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[8],E,E,146,[[[U]],[R[2]]]],[11,R[9],E,E,146,[[],[R[2]]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[28],E,E,146,[[["self"]],[T]]],[11,R[11],E,E,146,[[["self"]],[R[29]]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"into",E,E,147,[[],[U]]],[11,R[83],E,E,147,[[["self"]],[T]]],[11,R[84],E,E,147,[[["self"],[T]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[8],E,E,147,[[[U]],[R[2]]]],[11,R[9],E,E,147,[[],[R[2]]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[28],E,E,147,[[["self"]],[T]]],[11,R[11],E,E,147,[[["self"]],[R[29]]]],[11,"span",E,E,148,[[["self"]],["span"]]],[11,"into",E,E,148,[[],[U]]],[11,R[83],E,E,148,[[["self"]],[T]]],[11,R[84],E,E,148,[[["self"],[T]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[8],E,E,148,[[[U]],[R[2]]]],[11,R[9],E,E,148,[[],[R[2]]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[28],E,E,148,[[["self"]],[T]]],[11,R[11],E,E,148,[[["self"]],[R[29]]]],[11,"span",E,E,149,[[["self"]],["span"]]],[11,"into",E,E,149,[[],[U]]],[11,R[83],E,E,149,[[["self"]],[T]]],[11,R[84],E,E,149,[[["self"],[T]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[8],E,E,149,[[[U]],[R[2]]]],[11,R[9],E,E,149,[[],[R[2]]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[28],E,E,149,[[["self"]],[T]]],[11,R[11],E,E,149,[[["self"]],[R[29]]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"into",E,E,150,[[],[U]]],[11,R[83],E,E,150,[[["self"]],[T]]],[11,R[84],E,E,150,[[["self"],[T]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[8],E,E,150,[[[U]],[R[2]]]],[11,R[9],E,E,150,[[],[R[2]]]],[11,R[10],E,E,150,[[["self"]],[T]]],[11,R[28],E,E,150,[[["self"]],[T]]],[11,R[11],E,E,150,[[["self"]],[R[29]]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"into",E,E,151,[[],[U]]],[11,R[83],E,E,151,[[["self"]],[T]]],[11,R[84],E,E,151,[[["self"],[T]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[8],E,E,151,[[[U]],[R[2]]]],[11,R[9],E,E,151,[[],[R[2]]]],[11,R[10],E,E,151,[[["self"]],[T]]],[11,R[28],E,E,151,[[["self"]],[T]]],[11,R[11],E,E,151,[[["self"]],[R[29]]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"into",E,E,152,[[],[U]]],[11,R[83],E,E,152,[[["self"]],[T]]],[11,R[84],E,E,152,[[["self"],[T]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[8],E,E,152,[[[U]],[R[2]]]],[11,R[9],E,E,152,[[],[R[2]]]],[11,R[10],E,E,152,[[["self"]],[T]]],[11,R[28],E,E,152,[[["self"]],[T]]],[11,R[11],E,E,152,[[["self"]],[R[29]]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"into",E,E,153,[[],[U]]],[11,R[83],E,E,153,[[["self"]],[T]]],[11,R[84],E,E,153,[[["self"],[T]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[8],E,E,153,[[[U]],[R[2]]]],[11,R[9],E,E,153,[[],[R[2]]]],[11,R[10],E,E,153,[[["self"]],[T]]],[11,R[28],E,E,153,[[["self"]],[T]]],[11,R[11],E,E,153,[[["self"]],[R[29]]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"into",E,E,154,[[],[U]]],[11,R[83],E,E,154,[[["self"]],[T]]],[11,R[84],E,E,154,[[["self"],[T]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[8],E,E,154,[[[U]],[R[2]]]],[11,R[9],E,E,154,[[],[R[2]]]],[11,R[10],E,E,154,[[["self"]],[T]]],[11,R[28],E,E,154,[[["self"]],[T]]],[11,R[11],E,E,154,[[["self"]],[R[29]]]],[11,"span",E,E,155,[[["self"]],["span"]]],[11,"into",E,E,155,[[],[U]]],[11,R[83],E,E,155,[[["self"]],[T]]],[11,R[84],E,E,155,[[["self"],[T]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[8],E,E,155,[[[U]],[R[2]]]],[11,R[9],E,E,155,[[],[R[2]]]],[11,R[10],E,E,155,[[["self"]],[T]]],[11,R[28],E,E,155,[[["self"]],[T]]],[11,R[11],E,E,155,[[["self"]],[R[29]]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"into",E,E,156,[[],[U]]],[11,R[83],E,E,156,[[["self"]],[T]]],[11,R[84],E,E,156,[[["self"],[T]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[8],E,E,156,[[[U]],[R[2]]]],[11,R[9],E,E,156,[[],[R[2]]]],[11,R[10],E,E,156,[[["self"]],[T]]],[11,R[28],E,E,156,[[["self"]],[T]]],[11,R[11],E,E,156,[[["self"]],[R[29]]]],[11,"into",E,E,157,[[],[U]]],[11,R[83],E,E,157,[[["self"]],[T]]],[11,R[84],E,E,157,[[["self"],[T]]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[8],E,E,157,[[[U]],[R[2]]]],[11,R[9],E,E,157,[[],[R[2]]]],[11,R[10],E,E,157,[[["self"]],[T]]],[11,R[28],E,E,157,[[["self"]],[T]]],[11,R[11],E,E,157,[[["self"]],[R[29]]]],[11,"into",E,E,314,[[],[U]]],[11,R[82],E,E,314,[[["self"]],[R[81]]]],[11,R[83],E,E,314,[[["self"]],[T]]],[11,R[84],E,E,314,[[["self"],[T]]]],[11,"from",E,E,314,[[[T]],[T]]],[11,R[8],E,E,314,[[[U]],[R[2]]]],[11,R[9],E,E,314,[[],[R[2]]]],[11,R[10],E,E,314,[[["self"]],[T]]],[11,R[28],E,E,314,[[["self"]],[T]]],[11,R[11],E,E,314,[[["self"]],[R[29]]]],[11,"into",E,E,158,[[],[U]]],[11,R[83],E,E,158,[[["self"]],[T]]],[11,R[84],E,E,158,[[["self"],[T]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[8],E,E,158,[[[U]],[R[2]]]],[11,R[9],E,E,158,[[],[R[2]]]],[11,R[10],E,E,158,[[["self"]],[T]]],[11,R[28],E,E,158,[[["self"]],[T]]],[11,R[11],E,E,158,[[["self"]],[R[29]]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"into",E,E,159,[[],[U]]],[11,R[83],E,E,159,[[["self"]],[T]]],[11,R[84],E,E,159,[[["self"],[T]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[8],E,E,159,[[[U]],[R[2]]]],[11,R[9],E,E,159,[[],[R[2]]]],[11,R[10],E,E,159,[[["self"]],[T]]],[11,R[28],E,E,159,[[["self"]],[T]]],[11,R[11],E,E,159,[[["self"]],[R[29]]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"into",E,E,160,[[],[U]]],[11,R[83],E,E,160,[[["self"]],[T]]],[11,R[84],E,E,160,[[["self"],[T]]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[8],E,E,160,[[[U]],[R[2]]]],[11,R[9],E,E,160,[[],[R[2]]]],[11,R[10],E,E,160,[[["self"]],[T]]],[11,R[28],E,E,160,[[["self"]],[T]]],[11,R[11],E,E,160,[[["self"]],[R[29]]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"into",E,E,161,[[],[U]]],[11,R[83],E,E,161,[[["self"]],[T]]],[11,R[84],E,E,161,[[["self"],[T]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[8],E,E,161,[[[U]],[R[2]]]],[11,R[9],E,E,161,[[],[R[2]]]],[11,R[10],E,E,161,[[["self"]],[T]]],[11,R[28],E,E,161,[[["self"]],[T]]],[11,R[11],E,E,161,[[["self"]],[R[29]]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"into",E,E,162,[[],[U]]],[11,R[83],E,E,162,[[["self"]],[T]]],[11,R[84],E,E,162,[[["self"],[T]]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[8],E,E,162,[[[U]],[R[2]]]],[11,R[9],E,E,162,[[],[R[2]]]],[11,R[10],E,E,162,[[["self"]],[T]]],[11,R[28],E,E,162,[[["self"]],[T]]],[11,R[11],E,E,162,[[["self"]],[R[29]]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"into",E,E,163,[[],[U]]],[11,R[83],E,E,163,[[["self"]],[T]]],[11,R[84],E,E,163,[[["self"],[T]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[8],E,E,163,[[[U]],[R[2]]]],[11,R[9],E,E,163,[[],[R[2]]]],[11,R[10],E,E,163,[[["self"]],[T]]],[11,R[28],E,E,163,[[["self"]],[T]]],[11,R[11],E,E,163,[[["self"]],[R[29]]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"into",E,E,164,[[],[U]]],[11,R[83],E,E,164,[[["self"]],[T]]],[11,R[84],E,E,164,[[["self"],[T]]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[8],E,E,164,[[[U]],[R[2]]]],[11,R[9],E,E,164,[[],[R[2]]]],[11,R[10],E,E,164,[[["self"]],[T]]],[11,R[28],E,E,164,[[["self"]],[T]]],[11,R[11],E,E,164,[[["self"]],[R[29]]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"into",E,E,165,[[],[U]]],[11,R[83],E,E,165,[[["self"]],[T]]],[11,R[84],E,E,165,[[["self"],[T]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[8],E,E,165,[[[U]],[R[2]]]],[11,R[9],E,E,165,[[],[R[2]]]],[11,R[10],E,E,165,[[["self"]],[T]]],[11,R[28],E,E,165,[[["self"]],[T]]],[11,R[11],E,E,165,[[["self"]],[R[29]]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"into",E,E,166,[[],[U]]],[11,R[83],E,E,166,[[["self"]],[T]]],[11,R[84],E,E,166,[[["self"],[T]]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[8],E,E,166,[[[U]],[R[2]]]],[11,R[9],E,E,166,[[],[R[2]]]],[11,R[10],E,E,166,[[["self"]],[T]]],[11,R[28],E,E,166,[[["self"]],[T]]],[11,R[11],E,E,166,[[["self"]],[R[29]]]],[11,"into",E,E,167,[[],[U]]],[11,R[83],E,E,167,[[["self"]],[T]]],[11,R[84],E,E,167,[[["self"],[T]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[8],E,E,167,[[[U]],[R[2]]]],[11,R[9],E,E,167,[[],[R[2]]]],[11,R[10],E,E,167,[[["self"]],[T]]],[11,R[28],E,E,167,[[["self"]],[T]]],[11,R[11],E,E,167,[[["self"]],[R[29]]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"into",E,E,168,[[],[U]]],[11,R[83],E,E,168,[[["self"]],[T]]],[11,R[84],E,E,168,[[["self"],[T]]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[8],E,E,168,[[[U]],[R[2]]]],[11,R[9],E,E,168,[[],[R[2]]]],[11,R[10],E,E,168,[[["self"]],[T]]],[11,R[28],E,E,168,[[["self"]],[T]]],[11,R[11],E,E,168,[[["self"]],[R[29]]]],[11,"span",E,E,169,[[["self"]],["span"]]],[11,"into",E,E,169,[[],[U]]],[11,R[83],E,E,169,[[["self"]],[T]]],[11,R[84],E,E,169,[[["self"],[T]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[8],E,E,169,[[[U]],[R[2]]]],[11,R[9],E,E,169,[[],[R[2]]]],[11,R[10],E,E,169,[[["self"]],[T]]],[11,R[28],E,E,169,[[["self"]],[T]]],[11,R[11],E,E,169,[[["self"]],[R[29]]]],[11,"span",E,E,170,[[["self"]],["span"]]],[11,"into",E,E,170,[[],[U]]],[11,R[83],E,E,170,[[["self"]],[T]]],[11,R[84],E,E,170,[[["self"],[T]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[8],E,E,170,[[[U]],[R[2]]]],[11,R[9],E,E,170,[[],[R[2]]]],[11,R[10],E,E,170,[[["self"]],[T]]],[11,R[28],E,E,170,[[["self"]],[T]]],[11,R[11],E,E,170,[[["self"]],[R[29]]]],[11,"span",E,E,171,[[["self"]],["span"]]],[11,"into",E,E,171,[[],[U]]],[11,R[83],E,E,171,[[["self"]],[T]]],[11,R[84],E,E,171,[[["self"],[T]]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[8],E,E,171,[[[U]],[R[2]]]],[11,R[9],E,E,171,[[],[R[2]]]],[11,R[10],E,E,171,[[["self"]],[T]]],[11,R[28],E,E,171,[[["self"]],[T]]],[11,R[11],E,E,171,[[["self"]],[R[29]]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"into",E,E,172,[[],[U]]],[11,R[83],E,E,172,[[["self"]],[T]]],[11,R[84],E,E,172,[[["self"],[T]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[8],E,E,172,[[[U]],[R[2]]]],[11,R[9],E,E,172,[[],[R[2]]]],[11,R[10],E,E,172,[[["self"]],[T]]],[11,R[28],E,E,172,[[["self"]],[T]]],[11,R[11],E,E,172,[[["self"]],[R[29]]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"into",E,E,173,[[],[U]]],[11,R[83],E,E,173,[[["self"]],[T]]],[11,R[84],E,E,173,[[["self"],[T]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[8],E,E,173,[[[U]],[R[2]]]],[11,R[9],E,E,173,[[],[R[2]]]],[11,R[10],E,E,173,[[["self"]],[T]]],[11,R[28],E,E,173,[[["self"]],[T]]],[11,R[11],E,E,173,[[["self"]],[R[29]]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"into",E,E,174,[[],[U]]],[11,R[83],E,E,174,[[["self"]],[T]]],[11,R[84],E,E,174,[[["self"],[T]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[8],E,E,174,[[[U]],[R[2]]]],[11,R[9],E,E,174,[[],[R[2]]]],[11,R[10],E,E,174,[[["self"]],[T]]],[11,R[28],E,E,174,[[["self"]],[T]]],[11,R[11],E,E,174,[[["self"]],[R[29]]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"into",E,E,175,[[],[U]]],[11,R[83],E,E,175,[[["self"]],[T]]],[11,R[84],E,E,175,[[["self"],[T]]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[8],E,E,175,[[[U]],[R[2]]]],[11,R[9],E,E,175,[[],[R[2]]]],[11,R[10],E,E,175,[[["self"]],[T]]],[11,R[28],E,E,175,[[["self"]],[T]]],[11,R[11],E,E,175,[[["self"]],[R[29]]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"into",E,E,176,[[],[U]]],[11,R[83],E,E,176,[[["self"]],[T]]],[11,R[84],E,E,176,[[["self"],[T]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[8],E,E,176,[[[U]],[R[2]]]],[11,R[9],E,E,176,[[],[R[2]]]],[11,R[10],E,E,176,[[["self"]],[T]]],[11,R[28],E,E,176,[[["self"]],[T]]],[11,R[11],E,E,176,[[["self"]],[R[29]]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"into",E,E,177,[[],[U]]],[11,R[83],E,E,177,[[["self"]],[T]]],[11,R[84],E,E,177,[[["self"],[T]]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[8],E,E,177,[[[U]],[R[2]]]],[11,R[9],E,E,177,[[],[R[2]]]],[11,R[10],E,E,177,[[["self"]],[T]]],[11,R[28],E,E,177,[[["self"]],[T]]],[11,R[11],E,E,177,[[["self"]],[R[29]]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"into",E,E,178,[[],[U]]],[11,R[83],E,E,178,[[["self"]],[T]]],[11,R[84],E,E,178,[[["self"],[T]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[8],E,E,178,[[[U]],[R[2]]]],[11,R[9],E,E,178,[[],[R[2]]]],[11,R[10],E,E,178,[[["self"]],[T]]],[11,R[28],E,E,178,[[["self"]],[T]]],[11,R[11],E,E,178,[[["self"]],[R[29]]]],[11,"into",E,E,179,[[],[U]]],[11,R[83],E,E,179,[[["self"]],[T]]],[11,R[84],E,E,179,[[["self"],[T]]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[8],E,E,179,[[[U]],[R[2]]]],[11,R[9],E,E,179,[[],[R[2]]]],[11,R[10],E,E,179,[[["self"]],[T]]],[11,R[28],E,E,179,[[["self"]],[T]]],[11,R[11],E,E,179,[[["self"]],[R[29]]]],[11,"into",E,E,180,[[],[U]]],[11,R[83],E,E,180,[[["self"]],[T]]],[11,R[84],E,E,180,[[["self"],[T]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[8],E,E,180,[[[U]],[R[2]]]],[11,R[9],E,E,180,[[],[R[2]]]],[11,R[10],E,E,180,[[["self"]],[T]]],[11,R[28],E,E,180,[[["self"]],[T]]],[11,R[11],E,E,180,[[["self"]],[R[29]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"into",E,E,181,[[],[U]]],[11,R[83],E,E,181,[[["self"]],[T]]],[11,R[84],E,E,181,[[["self"],[T]]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[8],E,E,181,[[[U]],[R[2]]]],[11,R[9],E,E,181,[[],[R[2]]]],[11,R[10],E,E,181,[[["self"]],[T]]],[11,R[28],E,E,181,[[["self"]],[T]]],[11,R[11],E,E,181,[[["self"]],[R[29]]]],[11,"into",E,E,182,[[],[U]]],[11,R[83],E,E,182,[[["self"]],[T]]],[11,R[84],E,E,182,[[["self"],[T]]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[8],E,E,182,[[[U]],[R[2]]]],[11,R[9],E,E,182,[[],[R[2]]]],[11,R[10],E,E,182,[[["self"]],[T]]],[11,R[28],E,E,182,[[["self"]],[T]]],[11,R[11],E,E,182,[[["self"]],[R[29]]]],[11,"into",E,E,183,[[],[U]]],[11,R[83],E,E,183,[[["self"]],[T]]],[11,R[84],E,E,183,[[["self"],[T]]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[8],E,E,183,[[[U]],[R[2]]]],[11,R[9],E,E,183,[[],[R[2]]]],[11,R[10],E,E,183,[[["self"]],[T]]],[11,R[28],E,E,183,[[["self"]],[T]]],[11,R[11],E,E,183,[[["self"]],[R[29]]]],[11,"into",E,E,184,[[],[U]]],[11,R[83],E,E,184,[[["self"]],[T]]],[11,R[84],E,E,184,[[["self"],[T]]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[8],E,E,184,[[[U]],[R[2]]]],[11,R[9],E,E,184,[[],[R[2]]]],[11,R[10],E,E,184,[[["self"]],[T]]],[11,R[28],E,E,184,[[["self"]],[T]]],[11,R[11],E,E,184,[[["self"]],[R[29]]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"into",E,E,185,[[],[U]]],[11,R[83],E,E,185,[[["self"]],[T]]],[11,R[84],E,E,185,[[["self"],[T]]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[8],E,E,185,[[[U]],[R[2]]]],[11,R[9],E,E,185,[[],[R[2]]]],[11,R[10],E,E,185,[[["self"]],[T]]],[11,R[28],E,E,185,[[["self"]],[T]]],[11,R[11],E,E,185,[[["self"]],[R[29]]]],[11,"span",E,E,186,[[["self"]],["span"]]],[11,"into",E,E,186,[[],[U]]],[11,R[83],E,E,186,[[["self"]],[T]]],[11,R[84],E,E,186,[[["self"],[T]]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[8],E,E,186,[[[U]],[R[2]]]],[11,R[9],E,E,186,[[],[R[2]]]],[11,R[10],E,E,186,[[["self"]],[T]]],[11,R[28],E,E,186,[[["self"]],[T]]],[11,R[11],E,E,186,[[["self"]],[R[29]]]],[11,"span",E,E,187,[[["self"]],["span"]]],[11,"into",E,E,187,[[],[U]]],[11,R[83],E,E,187,[[["self"]],[T]]],[11,R[84],E,E,187,[[["self"],[T]]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[8],E,E,187,[[[U]],[R[2]]]],[11,R[9],E,E,187,[[],[R[2]]]],[11,R[10],E,E,187,[[["self"]],[T]]],[11,R[28],E,E,187,[[["self"]],[T]]],[11,R[11],E,E,187,[[["self"]],[R[29]]]],[11,"span",E,E,188,[[["self"]],["span"]]],[11,"into",E,E,188,[[],[U]]],[11,R[83],E,E,188,[[["self"]],[T]]],[11,R[84],E,E,188,[[["self"],[T]]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[8],E,E,188,[[[U]],[R[2]]]],[11,R[9],E,E,188,[[],[R[2]]]],[11,R[10],E,E,188,[[["self"]],[T]]],[11,R[28],E,E,188,[[["self"]],[T]]],[11,R[11],E,E,188,[[["self"]],[R[29]]]],[11,"span",E,E,189,[[["self"]],["span"]]],[11,"into",E,E,189,[[],[U]]],[11,R[83],E,E,189,[[["self"]],[T]]],[11,R[84],E,E,189,[[["self"],[T]]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[8],E,E,189,[[[U]],[R[2]]]],[11,R[9],E,E,189,[[],[R[2]]]],[11,R[10],E,E,189,[[["self"]],[T]]],[11,R[28],E,E,189,[[["self"]],[T]]],[11,R[11],E,E,189,[[["self"]],[R[29]]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"into",E,E,190,[[],[U]]],[11,R[83],E,E,190,[[["self"]],[T]]],[11,R[84],E,E,190,[[["self"],[T]]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[8],E,E,190,[[[U]],[R[2]]]],[11,R[9],E,E,190,[[],[R[2]]]],[11,R[10],E,E,190,[[["self"]],[T]]],[11,R[28],E,E,190,[[["self"]],[T]]],[11,R[11],E,E,190,[[["self"]],[R[29]]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"into",E,E,191,[[],[U]]],[11,R[83],E,E,191,[[["self"]],[T]]],[11,R[84],E,E,191,[[["self"],[T]]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[8],E,E,191,[[[U]],[R[2]]]],[11,R[9],E,E,191,[[],[R[2]]]],[11,R[10],E,E,191,[[["self"]],[T]]],[11,R[28],E,E,191,[[["self"]],[T]]],[11,R[11],E,E,191,[[["self"]],[R[29]]]],[11,"peek",R[941],E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"into",E,E,192,[[],[U]]],[11,R[83],E,E,192,[[["self"]],[T]]],[11,R[84],E,E,192,[[["self"],[T]]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[8],E,E,192,[[[U]],[R[2]]]],[11,R[9],E,E,192,[[],[R[2]]]],[11,R[10],E,E,192,[[["self"]],[T]]],[11,R[28],E,E,192,[[["self"]],[T]]],[11,R[11],E,E,192,[[["self"]],[R[29]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"into",E,E,193,[[],[U]]],[11,R[83],E,E,193,[[["self"]],[T]]],[11,R[84],E,E,193,[[["self"],[T]]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[8],E,E,193,[[[U]],[R[2]]]],[11,R[9],E,E,193,[[],[R[2]]]],[11,R[10],E,E,193,[[["self"]],[T]]],[11,R[28],E,E,193,[[["self"]],[T]]],[11,R[11],E,E,193,[[["self"]],[R[29]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"into",E,E,194,[[],[U]]],[11,R[83],E,E,194,[[["self"]],[T]]],[11,R[84],E,E,194,[[["self"],[T]]]],[11,"from",E,E,194,[[[T]],[T]]],[11,R[8],E,E,194,[[[U]],[R[2]]]],[11,R[9],E,E,194,[[],[R[2]]]],[11,R[10],E,E,194,[[["self"]],[T]]],[11,R[28],E,E,194,[[["self"]],[T]]],[11,R[11],E,E,194,[[["self"]],[R[29]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"into",E,E,195,[[],[U]]],[11,R[83],E,E,195,[[["self"]],[T]]],[11,R[84],E,E,195,[[["self"],[T]]]],[11,"from",E,E,195,[[[T]],[T]]],[11,R[8],E,E,195,[[[U]],[R[2]]]],[11,R[9],E,E,195,[[],[R[2]]]],[11,R[10],E,E,195,[[["self"]],[T]]],[11,R[28],E,E,195,[[["self"]],[T]]],[11,R[11],E,E,195,[[["self"]],[R[29]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"into",E,E,196,[[],[U]]],[11,R[83],E,E,196,[[["self"]],[T]]],[11,R[84],E,E,196,[[["self"],[T]]]],[11,"from",E,E,196,[[[T]],[T]]],[11,R[8],E,E,196,[[[U]],[R[2]]]],[11,R[9],E,E,196,[[],[R[2]]]],[11,R[10],E,E,196,[[["self"]],[T]]],[11,R[28],E,E,196,[[["self"]],[T]]],[11,R[11],E,E,196,[[["self"]],[R[29]]]],[11,"peek",E,E,197,[[["cursor"]],["bool"]]],[11,"display",E,E,197,[[],["str"]]],[11,"span",E,E,197,[[["self"]],["span"]]],[11,"into",E,E,197,[[],[U]]],[11,R[83],E,E,197,[[["self"]],[T]]],[11,R[84],E,E,197,[[["self"],[T]]]],[11,"from",E,E,197,[[[T]],[T]]],[11,R[8],E,E,197,[[[U]],[R[2]]]],[11,R[9],E,E,197,[[],[R[2]]]],[11,R[10],E,E,197,[[["self"]],[T]]],[11,R[28],E,E,197,[[["self"]],[T]]],[11,R[11],E,E,197,[[["self"]],[R[29]]]],[11,"peek",E,E,198,[[["cursor"]],["bool"]]],[11,"display",E,E,198,[[],["str"]]],[11,"span",E,E,198,[[["self"]],["span"]]],[11,"into",E,E,198,[[],[U]]],[11,R[83],E,E,198,[[["self"]],[T]]],[11,R[84],E,E,198,[[["self"],[T]]]],[11,"from",E,E,198,[[[T]],[T]]],[11,R[8],E,E,198,[[[U]],[R[2]]]],[11,R[9],E,E,198,[[],[R[2]]]],[11,R[10],E,E,198,[[["self"]],[T]]],[11,R[28],E,E,198,[[["self"]],[T]]],[11,R[11],E,E,198,[[["self"]],[R[29]]]],[11,"peek",E,E,199,[[["cursor"]],["bool"]]],[11,"display",E,E,199,[[],["str"]]],[11,"span",E,E,199,[[["self"]],["span"]]],[11,"into",E,E,199,[[],[U]]],[11,R[83],E,E,199,[[["self"]],[T]]],[11,R[84],E,E,199,[[["self"],[T]]]],[11,"from",E,E,199,[[[T]],[T]]],[11,R[8],E,E,199,[[[U]],[R[2]]]],[11,R[9],E,E,199,[[],[R[2]]]],[11,R[10],E,E,199,[[["self"]],[T]]],[11,R[28],E,E,199,[[["self"]],[T]]],[11,R[11],E,E,199,[[["self"]],[R[29]]]],[11,"peek",E,E,200,[[["cursor"]],["bool"]]],[11,"display",E,E,200,[[],["str"]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"into",E,E,200,[[],[U]]],[11,R[83],E,E,200,[[["self"]],[T]]],[11,R[84],E,E,200,[[["self"],[T]]]],[11,"from",E,E,200,[[[T]],[T]]],[11,R[8],E,E,200,[[[U]],[R[2]]]],[11,R[9],E,E,200,[[],[R[2]]]],[11,R[10],E,E,200,[[["self"]],[T]]],[11,R[28],E,E,200,[[["self"]],[T]]],[11,R[11],E,E,200,[[["self"]],[R[29]]]],[11,"peek",E,E,201,[[["cursor"]],["bool"]]],[11,"display",E,E,201,[[],["str"]]],[11,"span",E,E,201,[[["self"]],["span"]]],[11,"into",E,E,201,[[],[U]]],[11,R[83],E,E,201,[[["self"]],[T]]],[11,R[84],E,E,201,[[["self"],[T]]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[8],E,E,201,[[[U]],[R[2]]]],[11,R[9],E,E,201,[[],[R[2]]]],[11,R[10],E,E,201,[[["self"]],[T]]],[11,R[28],E,E,201,[[["self"]],[T]]],[11,R[11],E,E,201,[[["self"]],[R[29]]]],[11,"peek",E,E,202,[[["cursor"]],["bool"]]],[11,"display",E,E,202,[[],["str"]]],[11,"span",E,E,202,[[["self"]],["span"]]],[11,"into",E,E,202,[[],[U]]],[11,R[83],E,E,202,[[["self"]],[T]]],[11,R[84],E,E,202,[[["self"],[T]]]],[11,"from",E,E,202,[[[T]],[T]]],[11,R[8],E,E,202,[[[U]],[R[2]]]],[11,R[9],E,E,202,[[],[R[2]]]],[11,R[10],E,E,202,[[["self"]],[T]]],[11,R[28],E,E,202,[[["self"]],[T]]],[11,R[11],E,E,202,[[["self"]],[R[29]]]],[11,"peek",E,E,203,[[["cursor"]],["bool"]]],[11,"display",E,E,203,[[],["str"]]],[11,"span",E,E,203,[[["self"]],["span"]]],[11,"into",E,E,203,[[],[U]]],[11,R[83],E,E,203,[[["self"]],[T]]],[11,R[84],E,E,203,[[["self"],[T]]]],[11,"from",E,E,203,[[[T]],[T]]],[11,R[8],E,E,203,[[[U]],[R[2]]]],[11,R[9],E,E,203,[[],[R[2]]]],[11,R[10],E,E,203,[[["self"]],[T]]],[11,R[28],E,E,203,[[["self"]],[T]]],[11,R[11],E,E,203,[[["self"]],[R[29]]]],[11,"peek",E,E,204,[[["cursor"]],["bool"]]],[11,"display",E,E,204,[[],["str"]]],[11,"span",E,E,204,[[["self"]],["span"]]],[11,"into",E,E,204,[[],[U]]],[11,R[83],E,E,204,[[["self"]],[T]]],[11,R[84],E,E,204,[[["self"],[T]]]],[11,"from",E,E,204,[[[T]],[T]]],[11,R[8],E,E,204,[[[U]],[R[2]]]],[11,R[9],E,E,204,[[],[R[2]]]],[11,R[10],E,E,204,[[["self"]],[T]]],[11,R[28],E,E,204,[[["self"]],[T]]],[11,R[11],E,E,204,[[["self"]],[R[29]]]],[11,"peek",E,E,205,[[["cursor"]],["bool"]]],[11,"display",E,E,205,[[],["str"]]],[11,"span",E,E,205,[[["self"]],["span"]]],[11,"into",E,E,205,[[],[U]]],[11,R[83],E,E,205,[[["self"]],[T]]],[11,R[84],E,E,205,[[["self"],[T]]]],[11,"from",E,E,205,[[[T]],[T]]],[11,R[8],E,E,205,[[[U]],[R[2]]]],[11,R[9],E,E,205,[[],[R[2]]]],[11,R[10],E,E,205,[[["self"]],[T]]],[11,R[28],E,E,205,[[["self"]],[T]]],[11,R[11],E,E,205,[[["self"]],[R[29]]]],[11,"peek",E,E,206,[[["cursor"]],["bool"]]],[11,"display",E,E,206,[[],["str"]]],[11,"span",E,E,206,[[["self"]],["span"]]],[11,"into",E,E,206,[[],[U]]],[11,R[83],E,E,206,[[["self"]],[T]]],[11,R[84],E,E,206,[[["self"],[T]]]],[11,"from",E,E,206,[[[T]],[T]]],[11,R[8],E,E,206,[[[U]],[R[2]]]],[11,R[9],E,E,206,[[],[R[2]]]],[11,R[10],E,E,206,[[["self"]],[T]]],[11,R[28],E,E,206,[[["self"]],[T]]],[11,R[11],E,E,206,[[["self"]],[R[29]]]],[11,"peek",E,E,207,[[["cursor"]],["bool"]]],[11,"display",E,E,207,[[],["str"]]],[11,"span",E,E,207,[[["self"]],["span"]]],[11,"into",E,E,207,[[],[U]]],[11,R[83],E,E,207,[[["self"]],[T]]],[11,R[84],E,E,207,[[["self"],[T]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,R[8],E,E,207,[[[U]],[R[2]]]],[11,R[9],E,E,207,[[],[R[2]]]],[11,R[10],E,E,207,[[["self"]],[T]]],[11,R[28],E,E,207,[[["self"]],[T]]],[11,R[11],E,E,207,[[["self"]],[R[29]]]],[11,"peek",E,E,208,[[["cursor"]],["bool"]]],[11,"display",E,E,208,[[],["str"]]],[11,"span",E,E,208,[[["self"]],["span"]]],[11,"into",E,E,208,[[],[U]]],[11,R[83],E,E,208,[[["self"]],[T]]],[11,R[84],E,E,208,[[["self"],[T]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,R[8],E,E,208,[[[U]],[R[2]]]],[11,R[9],E,E,208,[[],[R[2]]]],[11,R[10],E,E,208,[[["self"]],[T]]],[11,R[28],E,E,208,[[["self"]],[T]]],[11,R[11],E,E,208,[[["self"]],[R[29]]]],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"span",E,E,209,[[["self"]],["span"]]],[11,"into",E,E,209,[[],[U]]],[11,R[83],E,E,209,[[["self"]],[T]]],[11,R[84],E,E,209,[[["self"],[T]]]],[11,"from",E,E,209,[[[T]],[T]]],[11,R[8],E,E,209,[[[U]],[R[2]]]],[11,R[9],E,E,209,[[],[R[2]]]],[11,R[10],E,E,209,[[["self"]],[T]]],[11,R[28],E,E,209,[[["self"]],[T]]],[11,R[11],E,E,209,[[["self"]],[R[29]]]],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"span",E,E,210,[[["self"]],["span"]]],[11,"into",E,E,210,[[],[U]]],[11,R[83],E,E,210,[[["self"]],[T]]],[11,R[84],E,E,210,[[["self"],[T]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,R[8],E,E,210,[[[U]],[R[2]]]],[11,R[9],E,E,210,[[],[R[2]]]],[11,R[10],E,E,210,[[["self"]],[T]]],[11,R[28],E,E,210,[[["self"]],[T]]],[11,R[11],E,E,210,[[["self"]],[R[29]]]],[11,"peek",E,E,211,[[["cursor"]],["bool"]]],[11,"display",E,E,211,[[],["str"]]],[11,"span",E,E,211,[[["self"]],["span"]]],[11,"into",E,E,211,[[],[U]]],[11,R[83],E,E,211,[[["self"]],[T]]],[11,R[84],E,E,211,[[["self"],[T]]]],[11,"from",E,E,211,[[[T]],[T]]],[11,R[8],E,E,211,[[[U]],[R[2]]]],[11,R[9],E,E,211,[[],[R[2]]]],[11,R[10],E,E,211,[[["self"]],[T]]],[11,R[28],E,E,211,[[["self"]],[T]]],[11,R[11],E,E,211,[[["self"]],[R[29]]]],[11,"peek",E,E,212,[[["cursor"]],["bool"]]],[11,"display",E,E,212,[[],["str"]]],[11,"span",E,E,212,[[["self"]],["span"]]],[11,"into",E,E,212,[[],[U]]],[11,R[83],E,E,212,[[["self"]],[T]]],[11,R[84],E,E,212,[[["self"],[T]]]],[11,"from",E,E,212,[[[T]],[T]]],[11,R[8],E,E,212,[[[U]],[R[2]]]],[11,R[9],E,E,212,[[],[R[2]]]],[11,R[10],E,E,212,[[["self"]],[T]]],[11,R[28],E,E,212,[[["self"]],[T]]],[11,R[11],E,E,212,[[["self"]],[R[29]]]],[11,"peek",E,E,213,[[["cursor"]],["bool"]]],[11,"display",E,E,213,[[],["str"]]],[11,"span",E,E,213,[[["self"]],["span"]]],[11,"into",E,E,213,[[],[U]]],[11,R[83],E,E,213,[[["self"]],[T]]],[11,R[84],E,E,213,[[["self"],[T]]]],[11,"from",E,E,213,[[[T]],[T]]],[11,R[8],E,E,213,[[[U]],[R[2]]]],[11,R[9],E,E,213,[[],[R[2]]]],[11,R[10],E,E,213,[[["self"]],[T]]],[11,R[28],E,E,213,[[["self"]],[T]]],[11,R[11],E,E,213,[[["self"]],[R[29]]]],[11,"peek",E,E,214,[[["cursor"]],["bool"]]],[11,"display",E,E,214,[[],["str"]]],[11,"span",E,E,214,[[["self"]],["span"]]],[11,"into",E,E,214,[[],[U]]],[11,R[83],E,E,214,[[["self"]],[T]]],[11,R[84],E,E,214,[[["self"],[T]]]],[11,"from",E,E,214,[[[T]],[T]]],[11,R[8],E,E,214,[[[U]],[R[2]]]],[11,R[9],E,E,214,[[],[R[2]]]],[11,R[10],E,E,214,[[["self"]],[T]]],[11,R[28],E,E,214,[[["self"]],[T]]],[11,R[11],E,E,214,[[["self"]],[R[29]]]],[11,"peek",E,E,215,[[["cursor"]],["bool"]]],[11,"display",E,E,215,[[],["str"]]],[11,"span",E,E,215,[[["self"]],["span"]]],[11,"into",E,E,215,[[],[U]]],[11,R[83],E,E,215,[[["self"]],[T]]],[11,R[84],E,E,215,[[["self"],[T]]]],[11,"from",E,E,215,[[[T]],[T]]],[11,R[8],E,E,215,[[[U]],[R[2]]]],[11,R[9],E,E,215,[[],[R[2]]]],[11,R[10],E,E,215,[[["self"]],[T]]],[11,R[28],E,E,215,[[["self"]],[T]]],[11,R[11],E,E,215,[[["self"]],[R[29]]]],[11,"peek",E,E,216,[[["cursor"]],["bool"]]],[11,"display",E,E,216,[[],["str"]]],[11,"span",E,E,216,[[["self"]],["span"]]],[11,"into",E,E,216,[[],[U]]],[11,R[83],E,E,216,[[["self"]],[T]]],[11,R[84],E,E,216,[[["self"],[T]]]],[11,"from",E,E,216,[[[T]],[T]]],[11,R[8],E,E,216,[[[U]],[R[2]]]],[11,R[9],E,E,216,[[],[R[2]]]],[11,R[10],E,E,216,[[["self"]],[T]]],[11,R[28],E,E,216,[[["self"]],[T]]],[11,R[11],E,E,216,[[["self"]],[R[29]]]],[11,"peek",E,E,217,[[["cursor"]],["bool"]]],[11,"display",E,E,217,[[],["str"]]],[11,"span",E,E,217,[[["self"]],["span"]]],[11,"into",E,E,217,[[],[U]]],[11,R[83],E,E,217,[[["self"]],[T]]],[11,R[84],E,E,217,[[["self"],[T]]]],[11,"from",E,E,217,[[[T]],[T]]],[11,R[8],E,E,217,[[[U]],[R[2]]]],[11,R[9],E,E,217,[[],[R[2]]]],[11,R[10],E,E,217,[[["self"]],[T]]],[11,R[28],E,E,217,[[["self"]],[T]]],[11,R[11],E,E,217,[[["self"]],[R[29]]]],[11,"peek",E,E,218,[[["cursor"]],["bool"]]],[11,"display",E,E,218,[[],["str"]]],[11,"span",E,E,218,[[["self"]],["span"]]],[11,"into",E,E,218,[[],[U]]],[11,R[83],E,E,218,[[["self"]],[T]]],[11,R[84],E,E,218,[[["self"],[T]]]],[11,"from",E,E,218,[[[T]],[T]]],[11,R[8],E,E,218,[[[U]],[R[2]]]],[11,R[9],E,E,218,[[],[R[2]]]],[11,R[10],E,E,218,[[["self"]],[T]]],[11,R[28],E,E,218,[[["self"]],[T]]],[11,R[11],E,E,218,[[["self"]],[R[29]]]],[11,"peek",E,E,219,[[["cursor"]],["bool"]]],[11,"display",E,E,219,[[],["str"]]],[11,"span",E,E,219,[[["self"]],["span"]]],[11,"into",E,E,219,[[],[U]]],[11,R[83],E,E,219,[[["self"]],[T]]],[11,R[84],E,E,219,[[["self"],[T]]]],[11,"from",E,E,219,[[[T]],[T]]],[11,R[8],E,E,219,[[[U]],[R[2]]]],[11,R[9],E,E,219,[[],[R[2]]]],[11,R[10],E,E,219,[[["self"]],[T]]],[11,R[28],E,E,219,[[["self"]],[T]]],[11,R[11],E,E,219,[[["self"]],[R[29]]]],[11,"peek",E,E,220,[[["cursor"]],["bool"]]],[11,"display",E,E,220,[[],["str"]]],[11,"span",E,E,220,[[["self"]],["span"]]],[11,"into",E,E,220,[[],[U]]],[11,R[83],E,E,220,[[["self"]],[T]]],[11,R[84],E,E,220,[[["self"],[T]]]],[11,"from",E,E,220,[[[T]],[T]]],[11,R[8],E,E,220,[[[U]],[R[2]]]],[11,R[9],E,E,220,[[],[R[2]]]],[11,R[10],E,E,220,[[["self"]],[T]]],[11,R[28],E,E,220,[[["self"]],[T]]],[11,R[11],E,E,220,[[["self"]],[R[29]]]],[11,"peek",E,E,221,[[["cursor"]],["bool"]]],[11,"display",E,E,221,[[],["str"]]],[11,"span",E,E,221,[[["self"]],["span"]]],[11,"into",E,E,221,[[],[U]]],[11,R[83],E,E,221,[[["self"]],[T]]],[11,R[84],E,E,221,[[["self"],[T]]]],[11,"from",E,E,221,[[[T]],[T]]],[11,R[8],E,E,221,[[[U]],[R[2]]]],[11,R[9],E,E,221,[[],[R[2]]]],[11,R[10],E,E,221,[[["self"]],[T]]],[11,R[28],E,E,221,[[["self"]],[T]]],[11,R[11],E,E,221,[[["self"]],[R[29]]]],[11,"peek",E,E,222,[[["cursor"]],["bool"]]],[11,"display",E,E,222,[[],["str"]]],[11,"span",E,E,222,[[["self"]],["span"]]],[11,"into",E,E,222,[[],[U]]],[11,R[83],E,E,222,[[["self"]],[T]]],[11,R[84],E,E,222,[[["self"],[T]]]],[11,"from",E,E,222,[[[T]],[T]]],[11,R[8],E,E,222,[[[U]],[R[2]]]],[11,R[9],E,E,222,[[],[R[2]]]],[11,R[10],E,E,222,[[["self"]],[T]]],[11,R[28],E,E,222,[[["self"]],[T]]],[11,R[11],E,E,222,[[["self"]],[R[29]]]],[11,"peek",E,E,223,[[["cursor"]],["bool"]]],[11,"display",E,E,223,[[],["str"]]],[11,"span",E,E,223,[[["self"]],["span"]]],[11,"into",E,E,223,[[],[U]]],[11,R[83],E,E,223,[[["self"]],[T]]],[11,R[84],E,E,223,[[["self"],[T]]]],[11,"from",E,E,223,[[[T]],[T]]],[11,R[8],E,E,223,[[[U]],[R[2]]]],[11,R[9],E,E,223,[[],[R[2]]]],[11,R[10],E,E,223,[[["self"]],[T]]],[11,R[28],E,E,223,[[["self"]],[T]]],[11,R[11],E,E,223,[[["self"]],[R[29]]]],[11,"peek",E,E,224,[[["cursor"]],["bool"]]],[11,"display",E,E,224,[[],["str"]]],[11,"span",E,E,224,[[["self"]],["span"]]],[11,"into",E,E,224,[[],[U]]],[11,R[83],E,E,224,[[["self"]],[T]]],[11,R[84],E,E,224,[[["self"],[T]]]],[11,"from",E,E,224,[[[T]],[T]]],[11,R[8],E,E,224,[[[U]],[R[2]]]],[11,R[9],E,E,224,[[],[R[2]]]],[11,R[10],E,E,224,[[["self"]],[T]]],[11,R[28],E,E,224,[[["self"]],[T]]],[11,R[11],E,E,224,[[["self"]],[R[29]]]],[11,"peek",E,E,225,[[["cursor"]],["bool"]]],[11,"display",E,E,225,[[],["str"]]],[11,"span",E,E,225,[[["self"]],["span"]]],[11,"into",E,E,225,[[],[U]]],[11,R[83],E,E,225,[[["self"]],[T]]],[11,R[84],E,E,225,[[["self"],[T]]]],[11,"from",E,E,225,[[[T]],[T]]],[11,R[8],E,E,225,[[[U]],[R[2]]]],[11,R[9],E,E,225,[[],[R[2]]]],[11,R[10],E,E,225,[[["self"]],[T]]],[11,R[28],E,E,225,[[["self"]],[T]]],[11,R[11],E,E,225,[[["self"]],[R[29]]]],[11,"peek",E,E,226,[[["cursor"]],["bool"]]],[11,"display",E,E,226,[[],["str"]]],[11,"span",E,E,226,[[["self"]],["span"]]],[11,"into",E,E,226,[[],[U]]],[11,R[83],E,E,226,[[["self"]],[T]]],[11,R[84],E,E,226,[[["self"],[T]]]],[11,"from",E,E,226,[[[T]],[T]]],[11,R[8],E,E,226,[[[U]],[R[2]]]],[11,R[9],E,E,226,[[],[R[2]]]],[11,R[10],E,E,226,[[["self"]],[T]]],[11,R[28],E,E,226,[[["self"]],[T]]],[11,R[11],E,E,226,[[["self"]],[R[29]]]],[11,"peek",E,E,227,[[["cursor"]],["bool"]]],[11,"display",E,E,227,[[],["str"]]],[11,"span",E,E,227,[[["self"]],["span"]]],[11,"into",E,E,227,[[],[U]]],[11,R[83],E,E,227,[[["self"]],[T]]],[11,R[84],E,E,227,[[["self"],[T]]]],[11,"from",E,E,227,[[[T]],[T]]],[11,R[8],E,E,227,[[[U]],[R[2]]]],[11,R[9],E,E,227,[[],[R[2]]]],[11,R[10],E,E,227,[[["self"]],[T]]],[11,R[28],E,E,227,[[["self"]],[T]]],[11,R[11],E,E,227,[[["self"]],[R[29]]]],[11,"peek",E,E,228,[[["cursor"]],["bool"]]],[11,"display",E,E,228,[[],["str"]]],[11,"span",E,E,228,[[["self"]],["span"]]],[11,"into",E,E,228,[[],[U]]],[11,R[83],E,E,228,[[["self"]],[T]]],[11,R[84],E,E,228,[[["self"],[T]]]],[11,"from",E,E,228,[[[T]],[T]]],[11,R[8],E,E,228,[[[U]],[R[2]]]],[11,R[9],E,E,228,[[],[R[2]]]],[11,R[10],E,E,228,[[["self"]],[T]]],[11,R[28],E,E,228,[[["self"]],[T]]],[11,R[11],E,E,228,[[["self"]],[R[29]]]],[11,"peek",E,E,229,[[["cursor"]],["bool"]]],[11,"display",E,E,229,[[],["str"]]],[11,"span",E,E,229,[[["self"]],["span"]]],[11,"into",E,E,229,[[],[U]]],[11,R[83],E,E,229,[[["self"]],[T]]],[11,R[84],E,E,229,[[["self"],[T]]]],[11,"from",E,E,229,[[[T]],[T]]],[11,R[8],E,E,229,[[[U]],[R[2]]]],[11,R[9],E,E,229,[[],[R[2]]]],[11,R[10],E,E,229,[[["self"]],[T]]],[11,R[28],E,E,229,[[["self"]],[T]]],[11,R[11],E,E,229,[[["self"]],[R[29]]]],[11,"peek",E,E,230,[[["cursor"]],["bool"]]],[11,"display",E,E,230,[[],["str"]]],[11,"span",E,E,230,[[["self"]],["span"]]],[11,"into",E,E,230,[[],[U]]],[11,R[83],E,E,230,[[["self"]],[T]]],[11,R[84],E,E,230,[[["self"],[T]]]],[11,"from",E,E,230,[[[T]],[T]]],[11,R[8],E,E,230,[[[U]],[R[2]]]],[11,R[9],E,E,230,[[],[R[2]]]],[11,R[10],E,E,230,[[["self"]],[T]]],[11,R[28],E,E,230,[[["self"]],[T]]],[11,R[11],E,E,230,[[["self"]],[R[29]]]],[11,"peek",E,E,231,[[["cursor"]],["bool"]]],[11,"display",E,E,231,[[],["str"]]],[11,"span",E,E,231,[[["self"]],["span"]]],[11,"into",E,E,231,[[],[U]]],[11,R[83],E,E,231,[[["self"]],[T]]],[11,R[84],E,E,231,[[["self"],[T]]]],[11,"from",E,E,231,[[[T]],[T]]],[11,R[8],E,E,231,[[[U]],[R[2]]]],[11,R[9],E,E,231,[[],[R[2]]]],[11,R[10],E,E,231,[[["self"]],[T]]],[11,R[28],E,E,231,[[["self"]],[T]]],[11,R[11],E,E,231,[[["self"]],[R[29]]]],[11,"peek",E,E,232,[[["cursor"]],["bool"]]],[11,"display",E,E,232,[[],["str"]]],[11,"span",E,E,232,[[["self"]],["span"]]],[11,"into",E,E,232,[[],[U]]],[11,R[83],E,E,232,[[["self"]],[T]]],[11,R[84],E,E,232,[[["self"],[T]]]],[11,"from",E,E,232,[[[T]],[T]]],[11,R[8],E,E,232,[[[U]],[R[2]]]],[11,R[9],E,E,232,[[],[R[2]]]],[11,R[10],E,E,232,[[["self"]],[T]]],[11,R[28],E,E,232,[[["self"]],[T]]],[11,R[11],E,E,232,[[["self"]],[R[29]]]],[11,"peek",E,E,233,[[["cursor"]],["bool"]]],[11,"display",E,E,233,[[],["str"]]],[11,"span",E,E,233,[[["self"]],["span"]]],[11,"into",E,E,233,[[],[U]]],[11,R[83],E,E,233,[[["self"]],[T]]],[11,R[84],E,E,233,[[["self"],[T]]]],[11,"from",E,E,233,[[[T]],[T]]],[11,R[8],E,E,233,[[[U]],[R[2]]]],[11,R[9],E,E,233,[[],[R[2]]]],[11,R[10],E,E,233,[[["self"]],[T]]],[11,R[28],E,E,233,[[["self"]],[T]]],[11,R[11],E,E,233,[[["self"]],[R[29]]]],[11,"peek",E,E,234,[[["cursor"]],["bool"]]],[11,"display",E,E,234,[[],["str"]]],[11,"span",E,E,234,[[["self"]],["span"]]],[11,"into",E,E,234,[[],[U]]],[11,R[83],E,E,234,[[["self"]],[T]]],[11,R[84],E,E,234,[[["self"],[T]]]],[11,"from",E,E,234,[[[T]],[T]]],[11,R[8],E,E,234,[[[U]],[R[2]]]],[11,R[9],E,E,234,[[],[R[2]]]],[11,R[10],E,E,234,[[["self"]],[T]]],[11,R[28],E,E,234,[[["self"]],[T]]],[11,R[11],E,E,234,[[["self"]],[R[29]]]],[11,"peek",E,E,235,[[["cursor"]],["bool"]]],[11,"display",E,E,235,[[],["str"]]],[11,"span",E,E,235,[[["self"]],["span"]]],[11,"into",E,E,235,[[],[U]]],[11,R[83],E,E,235,[[["self"]],[T]]],[11,R[84],E,E,235,[[["self"],[T]]]],[11,"from",E,E,235,[[[T]],[T]]],[11,R[8],E,E,235,[[[U]],[R[2]]]],[11,R[9],E,E,235,[[],[R[2]]]],[11,R[10],E,E,235,[[["self"]],[T]]],[11,R[28],E,E,235,[[["self"]],[T]]],[11,R[11],E,E,235,[[["self"]],[R[29]]]],[11,"peek",E,E,236,[[["cursor"]],["bool"]]],[11,"display",E,E,236,[[],["str"]]],[11,"span",E,E,236,[[["self"]],["span"]]],[11,"into",E,E,236,[[],[U]]],[11,R[83],E,E,236,[[["self"]],[T]]],[11,R[84],E,E,236,[[["self"],[T]]]],[11,"from",E,E,236,[[[T]],[T]]],[11,R[8],E,E,236,[[[U]],[R[2]]]],[11,R[9],E,E,236,[[],[R[2]]]],[11,R[10],E,E,236,[[["self"]],[T]]],[11,R[28],E,E,236,[[["self"]],[T]]],[11,R[11],E,E,236,[[["self"]],[R[29]]]],[11,"peek",E,E,237,[[["cursor"]],["bool"]]],[11,"display",E,E,237,[[],["str"]]],[11,"span",E,E,237,[[["self"]],["span"]]],[11,"into",E,E,237,[[],[U]]],[11,R[83],E,E,237,[[["self"]],[T]]],[11,R[84],E,E,237,[[["self"],[T]]]],[11,"from",E,E,237,[[[T]],[T]]],[11,R[8],E,E,237,[[[U]],[R[2]]]],[11,R[9],E,E,237,[[],[R[2]]]],[11,R[10],E,E,237,[[["self"]],[T]]],[11,R[28],E,E,237,[[["self"]],[T]]],[11,R[11],E,E,237,[[["self"]],[R[29]]]],[11,"peek",E,E,238,[[["cursor"]],["bool"]]],[11,"display",E,E,238,[[],["str"]]],[11,"span",E,E,238,[[["self"]],["span"]]],[11,"into",E,E,238,[[],[U]]],[11,R[83],E,E,238,[[["self"]],[T]]],[11,R[84],E,E,238,[[["self"],[T]]]],[11,"from",E,E,238,[[[T]],[T]]],[11,R[8],E,E,238,[[[U]],[R[2]]]],[11,R[9],E,E,238,[[],[R[2]]]],[11,R[10],E,E,238,[[["self"]],[T]]],[11,R[28],E,E,238,[[["self"]],[T]]],[11,R[11],E,E,238,[[["self"]],[R[29]]]],[11,"peek",E,E,239,[[["cursor"]],["bool"]]],[11,"display",E,E,239,[[],["str"]]],[11,"span",E,E,239,[[["self"]],["span"]]],[11,"into",E,E,239,[[],[U]]],[11,R[83],E,E,239,[[["self"]],[T]]],[11,R[84],E,E,239,[[["self"],[T]]]],[11,"from",E,E,239,[[[T]],[T]]],[11,R[8],E,E,239,[[[U]],[R[2]]]],[11,R[9],E,E,239,[[],[R[2]]]],[11,R[10],E,E,239,[[["self"]],[T]]],[11,R[28],E,E,239,[[["self"]],[T]]],[11,R[11],E,E,239,[[["self"]],[R[29]]]],[11,"peek",E,E,240,[[["cursor"]],["bool"]]],[11,"display",E,E,240,[[],["str"]]],[11,"span",E,E,240,[[["self"]],["span"]]],[11,"into",E,E,240,[[],[U]]],[11,R[83],E,E,240,[[["self"]],[T]]],[11,R[84],E,E,240,[[["self"],[T]]]],[11,"from",E,E,240,[[[T]],[T]]],[11,R[8],E,E,240,[[[U]],[R[2]]]],[11,R[9],E,E,240,[[],[R[2]]]],[11,R[10],E,E,240,[[["self"]],[T]]],[11,R[28],E,E,240,[[["self"]],[T]]],[11,R[11],E,E,240,[[["self"]],[R[29]]]],[11,"peek",E,E,241,[[["cursor"]],["bool"]]],[11,"display",E,E,241,[[],["str"]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"into",E,E,241,[[],[U]]],[11,R[83],E,E,241,[[["self"]],[T]]],[11,R[84],E,E,241,[[["self"],[T]]]],[11,"from",E,E,241,[[[T]],[T]]],[11,R[8],E,E,241,[[[U]],[R[2]]]],[11,R[9],E,E,241,[[],[R[2]]]],[11,R[10],E,E,241,[[["self"]],[T]]],[11,R[28],E,E,241,[[["self"]],[T]]],[11,R[11],E,E,241,[[["self"]],[R[29]]]],[11,"peek",E,E,242,[[["cursor"]],["bool"]]],[11,"display",E,E,242,[[],["str"]]],[11,"span",E,E,242,[[["self"]],["span"]]],[11,"into",E,E,242,[[],[U]]],[11,R[83],E,E,242,[[["self"]],[T]]],[11,R[84],E,E,242,[[["self"],[T]]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[8],E,E,242,[[[U]],[R[2]]]],[11,R[9],E,E,242,[[],[R[2]]]],[11,R[10],E,E,242,[[["self"]],[T]]],[11,R[28],E,E,242,[[["self"]],[T]]],[11,R[11],E,E,242,[[["self"]],[R[29]]]],[11,"peek",E,E,243,[[["cursor"]],["bool"]]],[11,"display",E,E,243,[[],["str"]]],[11,"span",E,E,243,[[["self"]],["span"]]],[11,"into",E,E,243,[[],[U]]],[11,R[83],E,E,243,[[["self"]],[T]]],[11,R[84],E,E,243,[[["self"],[T]]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[8],E,E,243,[[[U]],[R[2]]]],[11,R[9],E,E,243,[[],[R[2]]]],[11,R[10],E,E,243,[[["self"]],[T]]],[11,R[28],E,E,243,[[["self"]],[T]]],[11,R[11],E,E,243,[[["self"]],[R[29]]]],[11,"peek",E,E,244,[[["cursor"]],["bool"]]],[11,"display",E,E,244,[[],["str"]]],[11,"span",E,E,244,[[["self"]],["span"]]],[11,"into",E,E,244,[[],[U]]],[11,R[83],E,E,244,[[["self"]],[T]]],[11,R[84],E,E,244,[[["self"],[T]]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[8],E,E,244,[[[U]],[R[2]]]],[11,R[9],E,E,244,[[],[R[2]]]],[11,R[10],E,E,244,[[["self"]],[T]]],[11,R[28],E,E,244,[[["self"]],[T]]],[11,R[11],E,E,244,[[["self"]],[R[29]]]],[11,"peek",E,E,245,[[["cursor"]],["bool"]]],[11,"display",E,E,245,[[],["str"]]],[11,"span",E,E,245,[[["self"]],["span"]]],[11,"into",E,E,245,[[],[U]]],[11,R[83],E,E,245,[[["self"]],[T]]],[11,R[84],E,E,245,[[["self"],[T]]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[8],E,E,245,[[[U]],[R[2]]]],[11,R[9],E,E,245,[[],[R[2]]]],[11,R[10],E,E,245,[[["self"]],[T]]],[11,R[28],E,E,245,[[["self"]],[T]]],[11,R[11],E,E,245,[[["self"]],[R[29]]]],[11,"peek",E,E,246,[[["cursor"]],["bool"]]],[11,"display",E,E,246,[[],["str"]]],[11,"span",E,E,246,[[["self"]],["span"]]],[11,"into",E,E,246,[[],[U]]],[11,R[83],E,E,246,[[["self"]],[T]]],[11,R[84],E,E,246,[[["self"],[T]]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[8],E,E,246,[[[U]],[R[2]]]],[11,R[9],E,E,246,[[],[R[2]]]],[11,R[10],E,E,246,[[["self"]],[T]]],[11,R[28],E,E,246,[[["self"]],[T]]],[11,R[11],E,E,246,[[["self"]],[R[29]]]],[11,"peek",E,E,247,[[["cursor"]],["bool"]]],[11,"display",E,E,247,[[],["str"]]],[11,"span",E,E,247,[[["self"]],["span"]]],[11,"into",E,E,247,[[],[U]]],[11,R[83],E,E,247,[[["self"]],[T]]],[11,R[84],E,E,247,[[["self"],[T]]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[8],E,E,247,[[[U]],[R[2]]]],[11,R[9],E,E,247,[[],[R[2]]]],[11,R[10],E,E,247,[[["self"]],[T]]],[11,R[28],E,E,247,[[["self"]],[T]]],[11,R[11],E,E,247,[[["self"]],[R[29]]]],[11,"peek",E,E,248,[[["cursor"]],["bool"]]],[11,"display",E,E,248,[[],["str"]]],[11,"span",E,E,248,[[["self"]],["span"]]],[11,"into",E,E,248,[[],[U]]],[11,R[83],E,E,248,[[["self"]],[T]]],[11,R[84],E,E,248,[[["self"],[T]]]],[11,"from",E,E,248,[[[T]],[T]]],[11,R[8],E,E,248,[[[U]],[R[2]]]],[11,R[9],E,E,248,[[],[R[2]]]],[11,R[10],E,E,248,[[["self"]],[T]]],[11,R[28],E,E,248,[[["self"]],[T]]],[11,R[11],E,E,248,[[["self"]],[R[29]]]],[11,"peek",E,E,249,[[["cursor"]],["bool"]]],[11,"display",E,E,249,[[],["str"]]],[11,"span",E,E,249,[[["self"]],["span"]]],[11,"into",E,E,249,[[],[U]]],[11,R[83],E,E,249,[[["self"]],[T]]],[11,R[84],E,E,249,[[["self"],[T]]]],[11,"from",E,E,249,[[[T]],[T]]],[11,R[8],E,E,249,[[[U]],[R[2]]]],[11,R[9],E,E,249,[[],[R[2]]]],[11,R[10],E,E,249,[[["self"]],[T]]],[11,R[28],E,E,249,[[["self"]],[T]]],[11,R[11],E,E,249,[[["self"]],[R[29]]]],[11,"peek",E,E,250,[[["cursor"]],["bool"]]],[11,"display",E,E,250,[[],["str"]]],[11,"span",E,E,250,[[["self"]],["span"]]],[11,"into",E,E,250,[[],[U]]],[11,R[83],E,E,250,[[["self"]],[T]]],[11,R[84],E,E,250,[[["self"],[T]]]],[11,"from",E,E,250,[[[T]],[T]]],[11,R[8],E,E,250,[[[U]],[R[2]]]],[11,R[9],E,E,250,[[],[R[2]]]],[11,R[10],E,E,250,[[["self"]],[T]]],[11,R[28],E,E,250,[[["self"]],[T]]],[11,R[11],E,E,250,[[["self"]],[R[29]]]],[11,"peek",E,E,251,[[["cursor"]],["bool"]]],[11,"display",E,E,251,[[],["str"]]],[11,"span",E,E,251,[[["self"]],["span"]]],[11,"into",E,E,251,[[],[U]]],[11,R[83],E,E,251,[[["self"]],[T]]],[11,R[84],E,E,251,[[["self"],[T]]]],[11,"from",E,E,251,[[[T]],[T]]],[11,R[8],E,E,251,[[[U]],[R[2]]]],[11,R[9],E,E,251,[[],[R[2]]]],[11,R[10],E,E,251,[[["self"]],[T]]],[11,R[28],E,E,251,[[["self"]],[T]]],[11,R[11],E,E,251,[[["self"]],[R[29]]]],[11,"peek",E,E,252,[[["cursor"]],["bool"]]],[11,"display",E,E,252,[[],["str"]]],[11,"span",E,E,252,[[["self"]],["span"]]],[11,"into",E,E,252,[[],[U]]],[11,R[83],E,E,252,[[["self"]],[T]]],[11,R[84],E,E,252,[[["self"],[T]]]],[11,"from",E,E,252,[[[T]],[T]]],[11,R[8],E,E,252,[[[U]],[R[2]]]],[11,R[9],E,E,252,[[],[R[2]]]],[11,R[10],E,E,252,[[["self"]],[T]]],[11,R[28],E,E,252,[[["self"]],[T]]],[11,R[11],E,E,252,[[["self"]],[R[29]]]],[11,"peek",E,E,253,[[["cursor"]],["bool"]]],[11,"display",E,E,253,[[],["str"]]],[11,"span",E,E,253,[[["self"]],["span"]]],[11,"into",E,E,253,[[],[U]]],[11,R[83],E,E,253,[[["self"]],[T]]],[11,R[84],E,E,253,[[["self"],[T]]]],[11,"from",E,E,253,[[[T]],[T]]],[11,R[8],E,E,253,[[[U]],[R[2]]]],[11,R[9],E,E,253,[[],[R[2]]]],[11,R[10],E,E,253,[[["self"]],[T]]],[11,R[28],E,E,253,[[["self"]],[T]]],[11,R[11],E,E,253,[[["self"]],[R[29]]]],[11,"peek",E,E,254,[[["cursor"]],["bool"]]],[11,"display",E,E,254,[[],["str"]]],[11,"span",E,E,254,[[["self"]],["span"]]],[11,"into",E,E,254,[[],[U]]],[11,R[83],E,E,254,[[["self"]],[T]]],[11,R[84],E,E,254,[[["self"],[T]]]],[11,"from",E,E,254,[[[T]],[T]]],[11,R[8],E,E,254,[[[U]],[R[2]]]],[11,R[9],E,E,254,[[],[R[2]]]],[11,R[10],E,E,254,[[["self"]],[T]]],[11,R[28],E,E,254,[[["self"]],[T]]],[11,R[11],E,E,254,[[["self"]],[R[29]]]],[11,"peek",E,E,255,[[["cursor"]],["bool"]]],[11,"display",E,E,255,[[],["str"]]],[11,"span",E,E,255,[[["self"]],["span"]]],[11,"into",E,E,255,[[],[U]]],[11,R[83],E,E,255,[[["self"]],[T]]],[11,R[84],E,E,255,[[["self"],[T]]]],[11,"from",E,E,255,[[[T]],[T]]],[11,R[8],E,E,255,[[[U]],[R[2]]]],[11,R[9],E,E,255,[[],[R[2]]]],[11,R[10],E,E,255,[[["self"]],[T]]],[11,R[28],E,E,255,[[["self"]],[T]]],[11,R[11],E,E,255,[[["self"]],[R[29]]]],[11,"peek",E,E,256,[[["cursor"]],["bool"]]],[11,"display",E,E,256,[[],["str"]]],[11,"span",E,E,256,[[["self"]],["span"]]],[11,"into",E,E,256,[[],[U]]],[11,R[83],E,E,256,[[["self"]],[T]]],[11,R[84],E,E,256,[[["self"],[T]]]],[11,"from",E,E,256,[[[T]],[T]]],[11,R[8],E,E,256,[[[U]],[R[2]]]],[11,R[9],E,E,256,[[],[R[2]]]],[11,R[10],E,E,256,[[["self"]],[T]]],[11,R[28],E,E,256,[[["self"]],[T]]],[11,R[11],E,E,256,[[["self"]],[R[29]]]],[11,"peek",E,E,257,[[["cursor"]],["bool"]]],[11,"display",E,E,257,[[],["str"]]],[11,"span",E,E,257,[[["self"]],["span"]]],[11,"into",E,E,257,[[],[U]]],[11,R[83],E,E,257,[[["self"]],[T]]],[11,R[84],E,E,257,[[["self"],[T]]]],[11,"from",E,E,257,[[[T]],[T]]],[11,R[8],E,E,257,[[[U]],[R[2]]]],[11,R[9],E,E,257,[[],[R[2]]]],[11,R[10],E,E,257,[[["self"]],[T]]],[11,R[28],E,E,257,[[["self"]],[T]]],[11,R[11],E,E,257,[[["self"]],[R[29]]]],[11,"peek",E,E,258,[[["cursor"]],["bool"]]],[11,"display",E,E,258,[[],["str"]]],[11,"span",E,E,258,[[["self"]],["span"]]],[11,"into",E,E,258,[[],[U]]],[11,R[83],E,E,258,[[["self"]],[T]]],[11,R[84],E,E,258,[[["self"],[T]]]],[11,"from",E,E,258,[[[T]],[T]]],[11,R[8],E,E,258,[[[U]],[R[2]]]],[11,R[9],E,E,258,[[],[R[2]]]],[11,R[10],E,E,258,[[["self"]],[T]]],[11,R[28],E,E,258,[[["self"]],[T]]],[11,R[11],E,E,258,[[["self"]],[R[29]]]],[11,"peek",E,E,259,[[["cursor"]],["bool"]]],[11,"display",E,E,259,[[],["str"]]],[11,"span",E,E,259,[[["self"]],["span"]]],[11,"into",E,E,259,[[],[U]]],[11,R[83],E,E,259,[[["self"]],[T]]],[11,R[84],E,E,259,[[["self"],[T]]]],[11,"from",E,E,259,[[[T]],[T]]],[11,R[8],E,E,259,[[[U]],[R[2]]]],[11,R[9],E,E,259,[[],[R[2]]]],[11,R[10],E,E,259,[[["self"]],[T]]],[11,R[28],E,E,259,[[["self"]],[T]]],[11,R[11],E,E,259,[[["self"]],[R[29]]]],[11,"peek",E,E,260,[[["cursor"]],["bool"]]],[11,"display",E,E,260,[[],["str"]]],[11,"span",E,E,260,[[["self"]],["span"]]],[11,"into",E,E,260,[[],[U]]],[11,R[83],E,E,260,[[["self"]],[T]]],[11,R[84],E,E,260,[[["self"],[T]]]],[11,"from",E,E,260,[[[T]],[T]]],[11,R[8],E,E,260,[[[U]],[R[2]]]],[11,R[9],E,E,260,[[],[R[2]]]],[11,R[10],E,E,260,[[["self"]],[T]]],[11,R[28],E,E,260,[[["self"]],[T]]],[11,R[11],E,E,260,[[["self"]],[R[29]]]],[11,"peek",E,E,261,[[["cursor"]],["bool"]]],[11,"display",E,E,261,[[],["str"]]],[11,"span",E,E,261,[[["self"]],["span"]]],[11,"into",E,E,261,[[],[U]]],[11,R[83],E,E,261,[[["self"]],[T]]],[11,R[84],E,E,261,[[["self"],[T]]]],[11,"from",E,E,261,[[[T]],[T]]],[11,R[8],E,E,261,[[[U]],[R[2]]]],[11,R[9],E,E,261,[[],[R[2]]]],[11,R[10],E,E,261,[[["self"]],[T]]],[11,R[28],E,E,261,[[["self"]],[T]]],[11,R[11],E,E,261,[[["self"]],[R[29]]]],[11,"peek",E,E,262,[[["cursor"]],["bool"]]],[11,"display",E,E,262,[[],["str"]]],[11,"span",E,E,262,[[["self"]],["span"]]],[11,"into",E,E,262,[[],[U]]],[11,R[83],E,E,262,[[["self"]],[T]]],[11,R[84],E,E,262,[[["self"],[T]]]],[11,"from",E,E,262,[[[T]],[T]]],[11,R[8],E,E,262,[[[U]],[R[2]]]],[11,R[9],E,E,262,[[],[R[2]]]],[11,R[10],E,E,262,[[["self"]],[T]]],[11,R[28],E,E,262,[[["self"]],[T]]],[11,R[11],E,E,262,[[["self"]],[R[29]]]],[11,"peek",E,E,263,[[["cursor"]],["bool"]]],[11,"display",E,E,263,[[],["str"]]],[11,"span",E,E,263,[[["self"]],["span"]]],[11,"into",E,E,263,[[],[U]]],[11,R[83],E,E,263,[[["self"]],[T]]],[11,R[84],E,E,263,[[["self"],[T]]]],[11,"from",E,E,263,[[[T]],[T]]],[11,R[8],E,E,263,[[[U]],[R[2]]]],[11,R[9],E,E,263,[[],[R[2]]]],[11,R[10],E,E,263,[[["self"]],[T]]],[11,R[28],E,E,263,[[["self"]],[T]]],[11,R[11],E,E,263,[[["self"]],[R[29]]]],[11,"peek",E,E,264,[[["cursor"]],["bool"]]],[11,"display",E,E,264,[[],["str"]]],[11,"span",E,E,264,[[["self"]],["span"]]],[11,"into",E,E,264,[[],[U]]],[11,R[83],E,E,264,[[["self"]],[T]]],[11,R[84],E,E,264,[[["self"],[T]]]],[11,"from",E,E,264,[[[T]],[T]]],[11,R[8],E,E,264,[[[U]],[R[2]]]],[11,R[9],E,E,264,[[],[R[2]]]],[11,R[10],E,E,264,[[["self"]],[T]]],[11,R[28],E,E,264,[[["self"]],[T]]],[11,R[11],E,E,264,[[["self"]],[R[29]]]],[11,"peek",E,E,265,[[["cursor"]],["bool"]]],[11,"display",E,E,265,[[],["str"]]],[11,"span",E,E,265,[[["self"]],["span"]]],[11,"into",E,E,265,[[],[U]]],[11,R[83],E,E,265,[[["self"]],[T]]],[11,R[84],E,E,265,[[["self"],[T]]]],[11,"from",E,E,265,[[[T]],[T]]],[11,R[8],E,E,265,[[[U]],[R[2]]]],[11,R[9],E,E,265,[[],[R[2]]]],[11,R[10],E,E,265,[[["self"]],[T]]],[11,R[28],E,E,265,[[["self"]],[T]]],[11,R[11],E,E,265,[[["self"]],[R[29]]]],[11,"peek",E,E,266,[[["cursor"]],["bool"]]],[11,"display",E,E,266,[[],["str"]]],[11,"span",E,E,266,[[["self"]],["span"]]],[11,"into",E,E,266,[[],[U]]],[11,R[83],E,E,266,[[["self"]],[T]]],[11,R[84],E,E,266,[[["self"],[T]]]],[11,"from",E,E,266,[[[T]],[T]]],[11,R[8],E,E,266,[[[U]],[R[2]]]],[11,R[9],E,E,266,[[],[R[2]]]],[11,R[10],E,E,266,[[["self"]],[T]]],[11,R[28],E,E,266,[[["self"]],[T]]],[11,R[11],E,E,266,[[["self"]],[R[29]]]],[11,"peek",E,E,267,[[["cursor"]],["bool"]]],[11,"display",E,E,267,[[],["str"]]],[11,"span",E,E,267,[[["self"]],["span"]]],[11,"into",E,E,267,[[],[U]]],[11,R[83],E,E,267,[[["self"]],[T]]],[11,R[84],E,E,267,[[["self"],[T]]]],[11,"from",E,E,267,[[[T]],[T]]],[11,R[8],E,E,267,[[[U]],[R[2]]]],[11,R[9],E,E,267,[[],[R[2]]]],[11,R[10],E,E,267,[[["self"]],[T]]],[11,R[28],E,E,267,[[["self"]],[T]]],[11,R[11],E,E,267,[[["self"]],[R[29]]]],[11,"peek",E,E,268,[[["cursor"]],["bool"]]],[11,"display",E,E,268,[[],["str"]]],[11,"span",E,E,268,[[["self"]],["span"]]],[11,"into",E,E,268,[[],[U]]],[11,R[83],E,E,268,[[["self"]],[T]]],[11,R[84],E,E,268,[[["self"],[T]]]],[11,"from",E,E,268,[[[T]],[T]]],[11,R[8],E,E,268,[[[U]],[R[2]]]],[11,R[9],E,E,268,[[],[R[2]]]],[11,R[10],E,E,268,[[["self"]],[T]]],[11,R[28],E,E,268,[[["self"]],[T]]],[11,R[11],E,E,268,[[["self"]],[R[29]]]],[11,"peek",E,E,269,[[["cursor"]],["bool"]]],[11,"display",E,E,269,[[],["str"]]],[11,"span",E,E,269,[[["self"]],["span"]]],[11,"into",E,E,269,[[],[U]]],[11,R[83],E,E,269,[[["self"]],[T]]],[11,R[84],E,E,269,[[["self"],[T]]]],[11,"from",E,E,269,[[[T]],[T]]],[11,R[8],E,E,269,[[[U]],[R[2]]]],[11,R[9],E,E,269,[[],[R[2]]]],[11,R[10],E,E,269,[[["self"]],[T]]],[11,R[28],E,E,269,[[["self"]],[T]]],[11,R[11],E,E,269,[[["self"]],[R[29]]]],[11,"peek",E,E,270,[[["cursor"]],["bool"]]],[11,"display",E,E,270,[[],["str"]]],[11,"span",E,E,270,[[["self"]],["span"]]],[11,"into",E,E,270,[[],[U]]],[11,R[83],E,E,270,[[["self"]],[T]]],[11,R[84],E,E,270,[[["self"],[T]]]],[11,"from",E,E,270,[[[T]],[T]]],[11,R[8],E,E,270,[[[U]],[R[2]]]],[11,R[9],E,E,270,[[],[R[2]]]],[11,R[10],E,E,270,[[["self"]],[T]]],[11,R[28],E,E,270,[[["self"]],[T]]],[11,R[11],E,E,270,[[["self"]],[R[29]]]],[11,"peek",E,E,271,[[["cursor"]],["bool"]]],[11,"display",E,E,271,[[],["str"]]],[11,"span",E,E,271,[[["self"]],["span"]]],[11,"into",E,E,271,[[],[U]]],[11,R[83],E,E,271,[[["self"]],[T]]],[11,R[84],E,E,271,[[["self"],[T]]]],[11,"from",E,E,271,[[[T]],[T]]],[11,R[8],E,E,271,[[[U]],[R[2]]]],[11,R[9],E,E,271,[[],[R[2]]]],[11,R[10],E,E,271,[[["self"]],[T]]],[11,R[28],E,E,271,[[["self"]],[T]]],[11,R[11],E,E,271,[[["self"]],[R[29]]]],[11,"peek",E,E,272,[[["cursor"]],["bool"]]],[11,"display",E,E,272,[[],["str"]]],[11,"span",E,E,272,[[["self"]],["span"]]],[11,"into",E,E,272,[[],[U]]],[11,R[83],E,E,272,[[["self"]],[T]]],[11,R[84],E,E,272,[[["self"],[T]]]],[11,"from",E,E,272,[[[T]],[T]]],[11,R[8],E,E,272,[[[U]],[R[2]]]],[11,R[9],E,E,272,[[],[R[2]]]],[11,R[10],E,E,272,[[["self"]],[T]]],[11,R[28],E,E,272,[[["self"]],[T]]],[11,R[11],E,E,272,[[["self"]],[R[29]]]],[11,"peek",E,E,273,[[["cursor"]],["bool"]]],[11,"display",E,E,273,[[],["str"]]],[11,"span",E,E,273,[[["self"]],["span"]]],[11,"into",E,E,273,[[],[U]]],[11,R[83],E,E,273,[[["self"]],[T]]],[11,R[84],E,E,273,[[["self"],[T]]]],[11,"from",E,E,273,[[[T]],[T]]],[11,R[8],E,E,273,[[[U]],[R[2]]]],[11,R[9],E,E,273,[[],[R[2]]]],[11,R[10],E,E,273,[[["self"]],[T]]],[11,R[28],E,E,273,[[["self"]],[T]]],[11,R[11],E,E,273,[[["self"]],[R[29]]]],[11,"peek",E,E,274,[[["cursor"]],["bool"]]],[11,"display",E,E,274,[[],["str"]]],[11,"span",E,E,274,[[["self"]],["span"]]],[11,"into",E,E,274,[[],[U]]],[11,R[83],E,E,274,[[["self"]],[T]]],[11,R[84],E,E,274,[[["self"],[T]]]],[11,"from",E,E,274,[[[T]],[T]]],[11,R[8],E,E,274,[[[U]],[R[2]]]],[11,R[9],E,E,274,[[],[R[2]]]],[11,R[10],E,E,274,[[["self"]],[T]]],[11,R[28],E,E,274,[[["self"]],[T]]],[11,R[11],E,E,274,[[["self"]],[R[29]]]],[11,"peek",E,E,275,[[["cursor"]],["bool"]]],[11,"display",E,E,275,[[],["str"]]],[11,"span",E,E,275,[[["self"]],["span"]]],[11,"into",E,E,275,[[],[U]]],[11,R[83],E,E,275,[[["self"]],[T]]],[11,R[84],E,E,275,[[["self"],[T]]]],[11,"from",E,E,275,[[[T]],[T]]],[11,R[8],E,E,275,[[[U]],[R[2]]]],[11,R[9],E,E,275,[[],[R[2]]]],[11,R[10],E,E,275,[[["self"]],[T]]],[11,R[28],E,E,275,[[["self"]],[T]]],[11,R[11],E,E,275,[[["self"]],[R[29]]]],[11,"peek",E,E,276,[[["cursor"]],["bool"]]],[11,"display",E,E,276,[[],["str"]]],[11,"span",E,E,276,[[["self"]],["span"]]],[11,"into",E,E,276,[[],[U]]],[11,R[83],E,E,276,[[["self"]],[T]]],[11,R[84],E,E,276,[[["self"],[T]]]],[11,"from",E,E,276,[[[T]],[T]]],[11,R[8],E,E,276,[[[U]],[R[2]]]],[11,R[9],E,E,276,[[],[R[2]]]],[11,R[10],E,E,276,[[["self"]],[T]]],[11,R[28],E,E,276,[[["self"]],[T]]],[11,R[11],E,E,276,[[["self"]],[R[29]]]],[11,"peek",E,E,277,[[["cursor"]],["bool"]]],[11,"display",E,E,277,[[],["str"]]],[11,"span",E,E,277,[[["self"]],["span"]]],[11,"into",E,E,277,[[],[U]]],[11,R[83],E,E,277,[[["self"]],[T]]],[11,R[84],E,E,277,[[["self"],[T]]]],[11,"from",E,E,277,[[[T]],[T]]],[11,R[8],E,E,277,[[[U]],[R[2]]]],[11,R[9],E,E,277,[[],[R[2]]]],[11,R[10],E,E,277,[[["self"]],[T]]],[11,R[28],E,E,277,[[["self"]],[T]]],[11,R[11],E,E,277,[[["self"]],[R[29]]]],[11,"peek",E,E,278,[[["cursor"]],["bool"]]],[11,"display",E,E,278,[[],["str"]]],[11,"span",E,E,278,[[["self"]],["span"]]],[11,"into",E,E,278,[[],[U]]],[11,R[83],E,E,278,[[["self"]],[T]]],[11,R[84],E,E,278,[[["self"],[T]]]],[11,"from",E,E,278,[[[T]],[T]]],[11,R[8],E,E,278,[[[U]],[R[2]]]],[11,R[9],E,E,278,[[],[R[2]]]],[11,R[10],E,E,278,[[["self"]],[T]]],[11,R[28],E,E,278,[[["self"]],[T]]],[11,R[11],E,E,278,[[["self"]],[R[29]]]],[11,"peek",E,E,279,[[["cursor"]],["bool"]]],[11,"display",E,E,279,[[],["str"]]],[11,"span",E,E,279,[[["self"]],["span"]]],[11,"into",E,E,279,[[],[U]]],[11,R[83],E,E,279,[[["self"]],[T]]],[11,R[84],E,E,279,[[["self"],[T]]]],[11,"from",E,E,279,[[[T]],[T]]],[11,R[8],E,E,279,[[[U]],[R[2]]]],[11,R[9],E,E,279,[[],[R[2]]]],[11,R[10],E,E,279,[[["self"]],[T]]],[11,R[28],E,E,279,[[["self"]],[T]]],[11,R[11],E,E,279,[[["self"]],[R[29]]]],[11,"peek",E,E,280,[[["cursor"]],["bool"]]],[11,"display",E,E,280,[[],["str"]]],[11,"span",E,E,280,[[["self"]],["span"]]],[11,"into",E,E,280,[[],[U]]],[11,R[83],E,E,280,[[["self"]],[T]]],[11,R[84],E,E,280,[[["self"],[T]]]],[11,"from",E,E,280,[[[T]],[T]]],[11,R[8],E,E,280,[[[U]],[R[2]]]],[11,R[9],E,E,280,[[],[R[2]]]],[11,R[10],E,E,280,[[["self"]],[T]]],[11,R[28],E,E,280,[[["self"]],[T]]],[11,R[11],E,E,280,[[["self"]],[R[29]]]],[11,"peek",E,E,281,[[["cursor"]],["bool"]]],[11,"display",E,E,281,[[],["str"]]],[11,"span",E,E,281,[[["self"]],["span"]]],[11,"into",E,E,281,[[],[U]]],[11,R[83],E,E,281,[[["self"]],[T]]],[11,R[84],E,E,281,[[["self"],[T]]]],[11,"from",E,E,281,[[[T]],[T]]],[11,R[8],E,E,281,[[[U]],[R[2]]]],[11,R[9],E,E,281,[[],[R[2]]]],[11,R[10],E,E,281,[[["self"]],[T]]],[11,R[28],E,E,281,[[["self"]],[T]]],[11,R[11],E,E,281,[[["self"]],[R[29]]]],[11,"peek",E,E,282,[[["cursor"]],["bool"]]],[11,"display",E,E,282,[[],["str"]]],[11,"span",E,E,282,[[["self"]],["span"]]],[11,"into",E,E,282,[[],[U]]],[11,R[83],E,E,282,[[["self"]],[T]]],[11,R[84],E,E,282,[[["self"],[T]]]],[11,"from",E,E,282,[[[T]],[T]]],[11,R[8],E,E,282,[[[U]],[R[2]]]],[11,R[9],E,E,282,[[],[R[2]]]],[11,R[10],E,E,282,[[["self"]],[T]]],[11,R[28],E,E,282,[[["self"]],[T]]],[11,R[11],E,E,282,[[["self"]],[R[29]]]],[11,"peek",E,E,283,[[["cursor"]],["bool"]]],[11,"display",E,E,283,[[],["str"]]],[11,"span",E,E,283,[[["self"]],["span"]]],[11,"into",E,E,283,[[],[U]]],[11,R[83],E,E,283,[[["self"]],[T]]],[11,R[84],E,E,283,[[["self"],[T]]]],[11,"from",E,E,283,[[[T]],[T]]],[11,R[8],E,E,283,[[[U]],[R[2]]]],[11,R[9],E,E,283,[[],[R[2]]]],[11,R[10],E,E,283,[[["self"]],[T]]],[11,R[28],E,E,283,[[["self"]],[T]]],[11,R[11],E,E,283,[[["self"]],[R[29]]]],[11,"peek",E,E,284,[[["cursor"]],["bool"]]],[11,"display",E,E,284,[[],["str"]]],[11,"span",E,E,284,[[["self"]],["span"]]],[11,"into",E,E,284,[[],[U]]],[11,R[83],E,E,284,[[["self"]],[T]]],[11,R[84],E,E,284,[[["self"],[T]]]],[11,"from",E,E,284,[[[T]],[T]]],[11,R[8],E,E,284,[[[U]],[R[2]]]],[11,R[9],E,E,284,[[],[R[2]]]],[11,R[10],E,E,284,[[["self"]],[T]]],[11,R[28],E,E,284,[[["self"]],[T]]],[11,R[11],E,E,284,[[["self"]],[R[29]]]],[11,"peek",E,E,285,[[["cursor"]],["bool"]]],[11,"display",E,E,285,[[],["str"]]],[11,"span",E,E,285,[[["self"]],["span"]]],[11,"into",E,E,285,[[],[U]]],[11,R[83],E,E,285,[[["self"]],[T]]],[11,R[84],E,E,285,[[["self"],[T]]]],[11,"from",E,E,285,[[[T]],[T]]],[11,R[8],E,E,285,[[[U]],[R[2]]]],[11,R[9],E,E,285,[[],[R[2]]]],[11,R[10],E,E,285,[[["self"]],[T]]],[11,R[28],E,E,285,[[["self"]],[T]]],[11,R[11],E,E,285,[[["self"]],[R[29]]]],[11,"peek",E,E,286,[[["cursor"]],["bool"]]],[11,"display",E,E,286,[[],["str"]]],[11,"span",E,E,286,[[["self"]],["span"]]],[11,"into",E,E,286,[[],[U]]],[11,R[83],E,E,286,[[["self"]],[T]]],[11,R[84],E,E,286,[[["self"],[T]]]],[11,"from",E,E,286,[[[T]],[T]]],[11,R[8],E,E,286,[[[U]],[R[2]]]],[11,R[9],E,E,286,[[],[R[2]]]],[11,R[10],E,E,286,[[["self"]],[T]]],[11,R[28],E,E,286,[[["self"]],[T]]],[11,R[11],E,E,286,[[["self"]],[R[29]]]],[11,"peek",E,E,287,[[["cursor"]],["bool"]]],[11,"display",E,E,287,[[],["str"]]],[11,"span",E,E,287,[[["self"]],["span"]]],[11,"into",E,E,287,[[],[U]]],[11,R[83],E,E,287,[[["self"]],[T]]],[11,R[84],E,E,287,[[["self"],[T]]]],[11,"from",E,E,287,[[[T]],[T]]],[11,R[8],E,E,287,[[[U]],[R[2]]]],[11,R[9],E,E,287,[[],[R[2]]]],[11,R[10],E,E,287,[[["self"]],[T]]],[11,R[28],E,E,287,[[["self"]],[T]]],[11,R[11],E,E,287,[[["self"]],[R[29]]]],[11,"peek",E,E,288,[[["cursor"]],["bool"]]],[11,"display",E,E,288,[[],["str"]]],[11,"span",E,E,288,[[["self"]],["span"]]],[11,"into",E,E,288,[[],[U]]],[11,R[83],E,E,288,[[["self"]],[T]]],[11,R[84],E,E,288,[[["self"],[T]]]],[11,"from",E,E,288,[[[T]],[T]]],[11,R[8],E,E,288,[[[U]],[R[2]]]],[11,R[9],E,E,288,[[],[R[2]]]],[11,R[10],E,E,288,[[["self"]],[T]]],[11,R[28],E,E,288,[[["self"]],[T]]],[11,R[11],E,E,288,[[["self"]],[R[29]]]],[11,"peek",E,E,289,[[["cursor"]],["bool"]]],[11,"display",E,E,289,[[],["str"]]],[11,"span",E,E,289,[[["self"]],["span"]]],[11,"into",E,E,289,[[],[U]]],[11,R[83],E,E,289,[[["self"]],[T]]],[11,R[84],E,E,289,[[["self"],[T]]]],[11,"from",E,E,289,[[[T]],[T]]],[11,R[8],E,E,289,[[[U]],[R[2]]]],[11,R[9],E,E,289,[[],[R[2]]]],[11,R[10],E,E,289,[[["self"]],[T]]],[11,R[28],E,E,289,[[["self"]],[T]]],[11,R[11],E,E,289,[[["self"]],[R[29]]]],[11,"peek",E,E,290,[[["cursor"]],["bool"]]],[11,"display",E,E,290,[[],["str"]]],[11,"span",E,E,290,[[["self"]],["span"]]],[11,"into",E,E,290,[[],[U]]],[11,R[83],E,E,290,[[["self"]],[T]]],[11,R[84],E,E,290,[[["self"],[T]]]],[11,"from",E,E,290,[[[T]],[T]]],[11,R[8],E,E,290,[[[U]],[R[2]]]],[11,R[9],E,E,290,[[],[R[2]]]],[11,R[10],E,E,290,[[["self"]],[T]]],[11,R[28],E,E,290,[[["self"]],[T]]],[11,R[11],E,E,290,[[["self"]],[R[29]]]],[11,"peek",E,E,291,[[["cursor"]],["bool"]]],[11,"display",E,E,291,[[],["str"]]],[11,"into",E,E,291,[[],[U]]],[11,R[83],E,E,291,[[["self"]],[T]]],[11,R[84],E,E,291,[[["self"],[T]]]],[11,"from",E,E,291,[[[T]],[T]]],[11,R[8],E,E,291,[[[U]],[R[2]]]],[11,R[9],E,E,291,[[],[R[2]]]],[11,R[10],E,E,291,[[["self"]],[T]]],[11,R[28],E,E,291,[[["self"]],[T]]],[11,R[11],E,E,291,[[["self"]],[R[29]]]],[11,"peek",E,E,292,[[["cursor"]],["bool"]]],[11,"display",E,E,292,[[],["str"]]],[11,"into",E,E,292,[[],[U]]],[11,R[83],E,E,292,[[["self"]],[T]]],[11,R[84],E,E,292,[[["self"],[T]]]],[11,"from",E,E,292,[[[T]],[T]]],[11,R[8],E,E,292,[[[U]],[R[2]]]],[11,R[9],E,E,292,[[],[R[2]]]],[11,R[10],E,E,292,[[["self"]],[T]]],[11,R[28],E,E,292,[[["self"]],[T]]],[11,R[11],E,E,292,[[["self"]],[R[29]]]],[11,"peek",E,E,293,[[["cursor"]],["bool"]]],[11,"display",E,E,293,[[],["str"]]],[11,"into",E,E,293,[[],[U]]],[11,R[83],E,E,293,[[["self"]],[T]]],[11,R[84],E,E,293,[[["self"],[T]]]],[11,"from",E,E,293,[[[T]],[T]]],[11,R[8],E,E,293,[[[U]],[R[2]]]],[11,R[9],E,E,293,[[],[R[2]]]],[11,R[10],E,E,293,[[["self"]],[T]]],[11,R[28],E,E,293,[[["self"]],[T]]],[11,R[11],E,E,293,[[["self"]],[R[29]]]],[11,"peek",E,E,294,[[["cursor"]],["bool"]]],[11,"display",E,E,294,[[],["str"]]],[11,"into",E,E,294,[[],[U]]],[11,R[83],E,E,294,[[["self"]],[T]]],[11,R[84],E,E,294,[[["self"],[T]]]],[11,"from",E,E,294,[[[T]],[T]]],[11,R[8],E,E,294,[[[U]],[R[2]]]],[11,R[9],E,E,294,[[],[R[2]]]],[11,R[10],E,E,294,[[["self"]],[T]]],[11,R[28],E,E,294,[[["self"]],[T]]],[11,R[11],E,E,294,[[["self"]],[R[29]]]],[11,"into",R[942],E,302,[[],[U]]],[11,"from",E,E,302,[[[T]],[T]]],[11,R[8],E,E,302,[[[U]],[R[2]]]],[11,R[9],E,E,302,[[],[R[2]]]],[11,R[10],E,E,302,[[["self"]],[T]]],[11,R[28],E,E,302,[[["self"]],[T]]],[11,R[11],E,E,302,[[["self"]],[R[29]]]],[11,"into",E,E,303,[[],[U]]],[11,R[83],E,E,303,[[["self"]],[T]]],[11,R[84],E,E,303,[[["self"],[T]]]],[11,"from",E,E,303,[[[T]],[T]]],[11,R[8],E,E,303,[[[U]],[R[2]]]],[11,R[9],E,E,303,[[],[R[2]]]],[11,R[10],E,E,303,[[["self"]],[T]]],[11,R[28],E,E,303,[[["self"]],[T]]],[11,R[11],E,E,303,[[["self"]],[R[29]]]],[11,"span",R[943],E,306,[[["self"]],["span"]]],[11,"into",E,E,306,[[],[U]]],[11,R[22],E,E,306,[[],["i"]]],[11,R[83],E,E,306,[[["self"]],[T]]],[11,R[84],E,E,306,[[["self"],[T]]]],[11,"from",E,E,306,[[[T]],[T]]],[11,R[8],E,E,306,[[[U]],[R[2]]]],[11,R[9],E,E,306,[[],[R[2]]]],[11,R[10],E,E,306,[[["self"]],[T]]],[11,R[28],E,E,306,[[["self"]],[T]]],[11,R[11],E,E,306,[[["self"]],[R[29]]]],[11,"into",E,E,318,[[],[U]]],[11,R[22],E,E,318,[[],["i"]]],[11,R[83],E,E,318,[[["self"]],[T]]],[11,R[84],E,E,318,[[["self"],[T]]]],[11,"from",E,E,318,[[[T]],[T]]],[11,R[8],E,E,318,[[[U]],[R[2]]]],[11,R[9],E,E,318,[[],[R[2]]]],[11,R[10],E,E,318,[[["self"]],[T]]],[11,R[28],E,E,318,[[["self"]],[T]]],[11,R[11],E,E,318,[[["self"]],[R[29]]]],[11,"into",E,E,319,[[],[U]]],[11,R[22],E,E,319,[[],["i"]]],[11,"from",E,E,319,[[[T]],[T]]],[11,R[8],E,E,319,[[[U]],[R[2]]]],[11,R[9],E,E,319,[[],[R[2]]]],[11,R[10],E,E,319,[[["self"]],[T]]],[11,R[28],E,E,319,[[["self"]],[T]]],[11,R[11],E,E,319,[[["self"]],[R[29]]]],[11,"into",E,E,320,[[],[U]]],[11,R[22],E,E,320,[[],["i"]]],[11,R[83],E,E,320,[[["self"]],[T]]],[11,R[84],E,E,320,[[["self"],[T]]]],[11,"from",E,E,320,[[[T]],[T]]],[11,R[8],E,E,320,[[[U]],[R[2]]]],[11,R[9],E,E,320,[[],[R[2]]]],[11,R[10],E,E,320,[[["self"]],[T]]],[11,R[28],E,E,320,[[["self"]],[T]]],[11,R[11],E,E,320,[[["self"]],[R[29]]]],[11,"into",E,E,321,[[],[U]]],[11,R[22],E,E,321,[[],["i"]]],[11,R[83],E,E,321,[[["self"]],[T]]],[11,R[84],E,E,321,[[["self"],[T]]]],[11,"from",E,E,321,[[[T]],[T]]],[11,R[8],E,E,321,[[[U]],[R[2]]]],[11,R[9],E,E,321,[[],[R[2]]]],[11,R[10],E,E,321,[[["self"]],[T]]],[11,R[28],E,E,321,[[["self"]],[T]]],[11,R[11],E,E,321,[[["self"]],[R[29]]]],[11,"into",E,E,322,[[],[U]]],[11,R[22],E,E,322,[[],["i"]]],[11,R[83],E,E,322,[[["self"]],[T]]],[11,R[84],E,E,322,[[["self"],[T]]]],[11,"from",E,E,322,[[[T]],[T]]],[11,R[8],E,E,322,[[[U]],[R[2]]]],[11,R[9],E,E,322,[[],[R[2]]]],[11,R[10],E,E,322,[[["self"]],[T]]],[11,R[28],E,E,322,[[["self"]],[T]]],[11,R[11],E,E,322,[[["self"]],[R[29]]]],[11,"into",E,E,323,[[],[U]]],[11,R[22],E,E,323,[[],["i"]]],[11,"from",E,E,323,[[[T]],[T]]],[11,R[8],E,E,323,[[[U]],[R[2]]]],[11,R[9],E,E,323,[[],[R[2]]]],[11,R[10],E,E,323,[[["self"]],[T]]],[11,R[28],E,E,323,[[["self"]],[T]]],[11,R[11],E,E,323,[[["self"]],[R[29]]]],[11,"span",E,E,305,[[["self"]],["span"]]],[11,"into",E,E,305,[[],[U]]],[11,R[83],E,E,305,[[["self"]],[T]]],[11,R[84],E,E,305,[[["self"],[T]]]],[11,"from",E,E,305,[[[T]],[T]]],[11,R[8],E,E,305,[[[U]],[R[2]]]],[11,R[9],E,E,305,[[],[R[2]]]],[11,R[10],E,E,305,[[["self"]],[T]]],[11,R[28],E,E,305,[[["self"]],[T]]],[11,R[11],E,E,305,[[["self"]],[R[29]]]],[11,"into",R[1269],E,324,[[],[U]]],[11,"from",E,E,324,[[[T]],[T]]],[11,R[8],E,E,324,[[[U]],[R[2]]]],[11,R[9],E,E,324,[[],[R[2]]]],[11,R[10],E,E,324,[[["self"]],[T]]],[11,R[28],E,E,324,[[["self"]],[T]]],[11,R[11],E,E,324,[[["self"]],[R[29]]]],[11,"into",E,E,313,[[],[U]]],[11,R[82],E,E,313,[[["self"]],[R[81]]]],[11,"from",E,E,313,[[[T]],[T]]],[11,R[8],E,E,313,[[[U]],[R[2]]]],[11,R[9],E,E,313,[[],[R[2]]]],[11,R[10],E,E,313,[[["self"]],[T]]],[11,R[28],E,E,313,[[["self"]],[T]]],[11,R[11],E,E,313,[[["self"]],[R[29]]]],[11,"into",E,E,312,[[],[U]]],[11,R[83],E,E,312,[[["self"]],[T]]],[11,R[84],E,E,312,[[["self"],[T]]]],[11,"from",E,E,312,[[[T]],[T]]],[11,R[8],E,E,312,[[[U]],[R[2]]]],[11,R[9],E,E,312,[[],[R[2]]]],[11,R[10],E,E,312,[[["self"]],[T]]],[11,R[28],E,E,312,[[["self"]],[T]]],[11,R[11],E,E,312,[[["self"]],[R[29]]]],[11,"fmt","syn",E,315,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,R[153],E,E,315,[[["self"],["ident"]],[[R[23]],[R[24],[R[23]]]]]],[11,"cmp",E,E,315,[[["self"],["ident"]],[R[23]]]],[11,"fmt",E,E,315,[[["self"],[R[14]]],[["error"],[R[2],["error"]]]]],[11,"clone",E,E,315,[[["self"]],["ident"]]],[11,"hash",E,E,315,[[["self"],["h"]]]],[11,"eq",E,E,315,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,315,[[["self"],[T]],["bool"]]],[11,R[944],E,E,315,[[["self"],[R[203]]]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"peek",E,E,296,[[["cursor"]],["bool"]]],[11,"display",E,E,296,[[],["str"]]],[11,"peek",E,E,297,[[["cursor"]],["bool"]]],[11,"display",E,E,297,[[],["str"]]],[11,"peek",E,E,298,[[["cursor"]],["bool"]]],[11,"display",E,E,298,[[],["str"]]],[11,"peek",E,E,299,[[["cursor"]],["bool"]]],[11,"display",E,E,299,[[],["str"]]],[11,"peek",E,E,300,[[["cursor"]],["bool"]]],[11,"display",E,E,300,[[],["str"]]],[11,"peek",E,E,301,[[["cursor"]],["bool"]]],[11,"display",E,E,301,[[],["str"]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"peek",R[941],E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"peek",E,E,293,[[["cursor"]],["bool"]]],[11,"display",E,E,293,[[],["str"]]],[11,"peek",E,E,291,[[["cursor"]],["bool"]]],[11,"display",E,E,291,[[],["str"]]],[11,"peek",E,E,292,[[["cursor"]],["bool"]]],[11,"display",E,E,292,[[],["str"]]],[11,"peek",E,E,294,[[["cursor"]],["bool"]]],[11,"display",E,E,294,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"peek",E,E,197,[[["cursor"]],["bool"]]],[11,"display",E,E,197,[[],["str"]]],[11,"peek",E,E,198,[[["cursor"]],["bool"]]],[11,"display",E,E,198,[[],["str"]]],[11,"peek",E,E,199,[[["cursor"]],["bool"]]],[11,"display",E,E,199,[[],["str"]]],[11,"peek",E,E,200,[[["cursor"]],["bool"]]],[11,"display",E,E,200,[[],["str"]]],[11,"peek",E,E,201,[[["cursor"]],["bool"]]],[11,"display",E,E,201,[[],["str"]]],[11,"peek",E,E,202,[[["cursor"]],["bool"]]],[11,"display",E,E,202,[[],["str"]]],[11,"peek",E,E,203,[[["cursor"]],["bool"]]],[11,"display",E,E,203,[[],["str"]]],[11,"peek",E,E,204,[[["cursor"]],["bool"]]],[11,"display",E,E,204,[[],["str"]]],[11,"peek",E,E,205,[[["cursor"]],["bool"]]],[11,"display",E,E,205,[[],["str"]]],[11,"peek",E,E,206,[[["cursor"]],["bool"]]],[11,"display",E,E,206,[[],["str"]]],[11,"peek",E,E,207,[[["cursor"]],["bool"]]],[11,"display",E,E,207,[[],["str"]]],[11,"peek",E,E,208,[[["cursor"]],["bool"]]],[11,"display",E,E,208,[[],["str"]]],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"peek",E,E,211,[[["cursor"]],["bool"]]],[11,"display",E,E,211,[[],["str"]]],[11,"peek",E,E,212,[[["cursor"]],["bool"]]],[11,"display",E,E,212,[[],["str"]]],[11,"peek",E,E,213,[[["cursor"]],["bool"]]],[11,"display",E,E,213,[[],["str"]]],[11,"peek",E,E,214,[[["cursor"]],["bool"]]],[11,"display",E,E,214,[[],["str"]]],[11,"peek",E,E,215,[[["cursor"]],["bool"]]],[11,"display",E,E,215,[[],["str"]]],[11,"peek",E,E,216,[[["cursor"]],["bool"]]],[11,"display",E,E,216,[[],["str"]]],[11,"peek",E,E,217,[[["cursor"]],["bool"]]],[11,"display",E,E,217,[[],["str"]]],[11,"peek",E,E,218,[[["cursor"]],["bool"]]],[11,"display",E,E,218,[[],["str"]]],[11,"peek",E,E,219,[[["cursor"]],["bool"]]],[11,"display",E,E,219,[[],["str"]]],[11,"peek",E,E,220,[[["cursor"]],["bool"]]],[11,"display",E,E,220,[[],["str"]]],[11,"peek",E,E,221,[[["cursor"]],["bool"]]],[11,"display",E,E,221,[[],["str"]]],[11,"peek",E,E,222,[[["cursor"]],["bool"]]],[11,"display",E,E,222,[[],["str"]]],[11,"peek",E,E,223,[[["cursor"]],["bool"]]],[11,"display",E,E,223,[[],["str"]]],[11,"peek",E,E,224,[[["cursor"]],["bool"]]],[11,"display",E,E,224,[[],["str"]]],[11,"peek",E,E,225,[[["cursor"]],["bool"]]],[11,"display",E,E,225,[[],["str"]]],[11,"peek",E,E,226,[[["cursor"]],["bool"]]],[11,"display",E,E,226,[[],["str"]]],[11,"peek",E,E,227,[[["cursor"]],["bool"]]],[11,"display",E,E,227,[[],["str"]]],[11,"peek",E,E,228,[[["cursor"]],["bool"]]],[11,"display",E,E,228,[[],["str"]]],[11,"peek",E,E,229,[[["cursor"]],["bool"]]],[11,"display",E,E,229,[[],["str"]]],[11,"peek",E,E,230,[[["cursor"]],["bool"]]],[11,"display",E,E,230,[[],["str"]]],[11,"peek",E,E,231,[[["cursor"]],["bool"]]],[11,"display",E,E,231,[[],["str"]]],[11,"peek",E,E,232,[[["cursor"]],["bool"]]],[11,"display",E,E,232,[[],["str"]]],[11,"peek",E,E,233,[[["cursor"]],["bool"]]],[11,"display",E,E,233,[[],["str"]]],[11,"peek",E,E,234,[[["cursor"]],["bool"]]],[11,"display",E,E,234,[[],["str"]]],[11,"peek",E,E,235,[[["cursor"]],["bool"]]],[11,"display",E,E,235,[[],["str"]]],[11,"peek",E,E,236,[[["cursor"]],["bool"]]],[11,"display",E,E,236,[[],["str"]]],[11,"peek",E,E,237,[[["cursor"]],["bool"]]],[11,"display",E,E,237,[[],["str"]]],[11,"peek",E,E,238,[[["cursor"]],["bool"]]],[11,"display",E,E,238,[[],["str"]]],[11,"peek",E,E,239,[[["cursor"]],["bool"]]],[11,"display",E,E,239,[[],["str"]]],[11,"peek",E,E,240,[[["cursor"]],["bool"]]],[11,"display",E,E,240,[[],["str"]]],[11,"peek",E,E,241,[[["cursor"]],["bool"]]],[11,"display",E,E,241,[[],["str"]]],[11,"peek",E,E,242,[[["cursor"]],["bool"]]],[11,"display",E,E,242,[[],["str"]]],[11,"peek",E,E,243,[[["cursor"]],["bool"]]],[11,"display",E,E,243,[[],["str"]]],[11,"peek",E,E,244,[[["cursor"]],["bool"]]],[11,"display",E,E,244,[[],["str"]]],[11,"peek",E,E,245,[[["cursor"]],["bool"]]],[11,"display",E,E,245,[[],["str"]]],[11,"peek",E,E,246,[[["cursor"]],["bool"]]],[11,"display",E,E,246,[[],["str"]]],[11,"peek",E,E,247,[[["cursor"]],["bool"]]],[11,"display",E,E,247,[[],["str"]]],[11,"peek",E,E,248,[[["cursor"]],["bool"]]],[11,"display",E,E,248,[[],["str"]]],[11,"peek",E,E,249,[[["cursor"]],["bool"]]],[11,"display",E,E,249,[[],["str"]]],[11,"peek",E,E,250,[[["cursor"]],["bool"]]],[11,"display",E,E,250,[[],["str"]]],[11,"peek",E,E,251,[[["cursor"]],["bool"]]],[11,"display",E,E,251,[[],["str"]]],[11,"peek",E,E,252,[[["cursor"]],["bool"]]],[11,"display",E,E,252,[[],["str"]]],[11,"peek",E,E,253,[[["cursor"]],["bool"]]],[11,"display",E,E,253,[[],["str"]]],[11,"peek",E,E,254,[[["cursor"]],["bool"]]],[11,"display",E,E,254,[[],["str"]]],[11,"peek",E,E,255,[[["cursor"]],["bool"]]],[11,"display",E,E,255,[[],["str"]]],[11,"peek",E,E,256,[[["cursor"]],["bool"]]],[11,"display",E,E,256,[[],["str"]]],[11,"peek",E,E,257,[[["cursor"]],["bool"]]],[11,"display",E,E,257,[[],["str"]]],[11,"peek",E,E,258,[[["cursor"]],["bool"]]],[11,"display",E,E,258,[[],["str"]]],[11,"peek",E,E,259,[[["cursor"]],["bool"]]],[11,"display",E,E,259,[[],["str"]]],[11,"peek",E,E,260,[[["cursor"]],["bool"]]],[11,"display",E,E,260,[[],["str"]]],[11,"peek",E,E,261,[[["cursor"]],["bool"]]],[11,"display",E,E,261,[[],["str"]]],[11,"peek",E,E,262,[[["cursor"]],["bool"]]],[11,"display",E,E,262,[[],["str"]]],[11,"peek",E,E,263,[[["cursor"]],["bool"]]],[11,"display",E,E,263,[[],["str"]]],[11,"peek",E,E,264,[[["cursor"]],["bool"]]],[11,"display",E,E,264,[[],["str"]]],[11,"peek",E,E,265,[[["cursor"]],["bool"]]],[11,"display",E,E,265,[[],["str"]]],[11,"peek",E,E,266,[[["cursor"]],["bool"]]],[11,"display",E,E,266,[[],["str"]]],[11,"peek",E,E,267,[[["cursor"]],["bool"]]],[11,"display",E,E,267,[[],["str"]]],[11,"peek",E,E,268,[[["cursor"]],["bool"]]],[11,"display",E,E,268,[[],["str"]]],[11,"peek",E,E,269,[[["cursor"]],["bool"]]],[11,"display",E,E,269,[[],["str"]]],[11,"peek",E,E,270,[[["cursor"]],["bool"]]],[11,"display",E,E,270,[[],["str"]]],[11,"peek",E,E,271,[[["cursor"]],["bool"]]],[11,"display",E,E,271,[[],["str"]]],[11,"peek",E,E,272,[[["cursor"]],["bool"]]],[11,"display",E,E,272,[[],["str"]]],[11,"peek",E,E,273,[[["cursor"]],["bool"]]],[11,"display",E,E,273,[[],["str"]]],[11,"peek",E,E,274,[[["cursor"]],["bool"]]],[11,"display",E,E,274,[[],["str"]]],[11,"peek",E,E,275,[[["cursor"]],["bool"]]],[11,"display",E,E,275,[[],["str"]]],[11,"peek",E,E,276,[[["cursor"]],["bool"]]],[11,"display",E,E,276,[[],["str"]]],[11,"peek",E,E,277,[[["cursor"]],["bool"]]],[11,"display",E,E,277,[[],["str"]]],[11,"peek",E,E,278,[[["cursor"]],["bool"]]],[11,"display",E,E,278,[[],["str"]]],[11,"peek",E,E,279,[[["cursor"]],["bool"]]],[11,"display",E,E,279,[[],["str"]]],[11,"peek",E,E,280,[[["cursor"]],["bool"]]],[11,"display",E,E,280,[[],["str"]]],[11,"peek",E,E,281,[[["cursor"]],["bool"]]],[11,"display",E,E,281,[[],["str"]]],[11,"peek",E,E,282,[[["cursor"]],["bool"]]],[11,"display",E,E,282,[[],["str"]]],[11,"peek",E,E,283,[[["cursor"]],["bool"]]],[11,"display",E,E,283,[[],["str"]]],[11,"peek",E,E,284,[[["cursor"]],["bool"]]],[11,"display",E,E,284,[[],["str"]]],[11,"peek",E,E,285,[[["cursor"]],["bool"]]],[11,"display",E,E,285,[[],["str"]]],[11,"peek",E,E,286,[[["cursor"]],["bool"]]],[11,"display",E,E,286,[[],["str"]]],[11,"peek",E,E,287,[[["cursor"]],["bool"]]],[11,"display",E,E,287,[[],["str"]]],[11,"peek",E,E,288,[[["cursor"]],["bool"]]],[11,"display",E,E,288,[[],["str"]]],[11,"peek",E,E,289,[[["cursor"]],["bool"]]],[11,"display",E,E,289,[[],["str"]]],[11,"peek",E,E,290,[[["cursor"]],["bool"]]],[11,"display",E,E,290,[[],["str"]]],[11,"peek","syn",E,315,[[["cursor"]],["bool"]]],[11,"display",E,E,315,[[],["str"]]],[11,R[947],E,E,315,[[[R[1133]]],[R[2]]]],[11,"unraw",E,E,315,[[["self"]],["ident"]]],[11,"advance_to",R[1269],E,313,[[["self"]]]],[11,"parse",R[941],E,192,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,193,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,194,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,195,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,196,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,197,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,198,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,199,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,200,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,201,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,202,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,203,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,204,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,205,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,206,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,207,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,208,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,209,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,210,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,211,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,212,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,213,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,214,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,215,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,216,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,217,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,218,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,219,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,220,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,221,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,222,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,223,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,224,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,225,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,226,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,227,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,228,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,229,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,230,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,231,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,232,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,233,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,234,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,235,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,236,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,237,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,238,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,239,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,240,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,241,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,242,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,243,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,244,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,245,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,246,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,247,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,248,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,249,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,250,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,251,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,252,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,253,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,254,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,255,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,256,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,257,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,258,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,259,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,260,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,261,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,262,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,263,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,264,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,265,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,266,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,267,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,268,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,269,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,270,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,271,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,272,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,273,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,274,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,275,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,276,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,277,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,278,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,279,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,280,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,281,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,282,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,283,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,284,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,285,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,286,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,287,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,288,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,289,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,290,[[[R[1133]]],[R[2]]]],[11,"parse","syn",E,315,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,159,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,1,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,2,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,160,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,6,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,4,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,5,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,162,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,163,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,29,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,25,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,23,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,30,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,32,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,26,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,16,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,10,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,18,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,33,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,43,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,14,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,45,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,19,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,44,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,28,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,20,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,46,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,15,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,11,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,12,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,22,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,27,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,36,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,37,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,17,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,21,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,39,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,31,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,40,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,38,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,34,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,41,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,13,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,42,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,49,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,48,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,55,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,54,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,167,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,35,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,52,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,168,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,166,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,164,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,51,[[[R[1133]]],[[R[2],["arm"]],["arm"]]]],[11,"parse",E,E,50,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,73,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,169,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,74,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,71,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,79,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,171,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,78,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,170,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,72,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,80,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,172,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,176,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,103,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,104,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,99,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,112,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,178,[[[R[1133]]],[[R[2],["usetree"]],["usetree"]]]],[11,"parse",E,E,106,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,96,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,100,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,173,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,105,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,101,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,174,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,85,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,87,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,88,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,86,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,110,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,98,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,107,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,97,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,111,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,108,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,109,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,177,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,115,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,117,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,118,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,116,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,102,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,175,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,90,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,93,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,94,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,91,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,92,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,125,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,126,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,181,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,296,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,297,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,298,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,299,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,300,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,301,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,127,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,129,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,133,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,185,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,186,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,189,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,147,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,136,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,145,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,146,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,137,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,142,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,140,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,149,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,141,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,144,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,188,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,148,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,139,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,138,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,143,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,135,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,187,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,134,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,155,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,190,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,151,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,154,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,156,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,152,[[[R[1133]]],[R[2]]]],[11,"parse",E,E,153,[[[R[1133]]],[R[2]]]],[11,"extend",R[943],E,306,[[["self"],[R[156]]]]],[11,"extend",E,E,306,[[["self"],[R[156]]]]],[11,"drop",R[1269],E,313,[[["self"]]]],[11,R[188],R[941],E,192,[[],["self"]]],[11,R[188],E,E,193,[[],["self"]]],[11,R[188],E,E,194,[[],["self"]]],[11,R[188],E,E,195,[[],["self"]]],[11,R[188],E,E,196,[[],["self"]]],[11,R[188],E,E,197,[[],["self"]]],[11,R[188],E,E,198,[[],["self"]]],[11,R[188],E,E,199,[[],["self"]]],[11,R[188],E,E,200,[[],["self"]]],[11,R[188],E,E,201,[[],["self"]]],[11,R[188],E,E,202,[[],["self"]]],[11,R[188],E,E,203,[[],["self"]]],[11,R[188],E,E,204,[[],["self"]]],[11,R[188],E,E,205,[[],["self"]]],[11,R[188],E,E,206,[[],["self"]]],[11,R[188],E,E,207,[[],["self"]]],[11,R[188],E,E,208,[[],["self"]]],[11,R[188],E,E,209,[[],["self"]]],[11,R[188],E,E,210,[[],["self"]]],[11,R[188],E,E,211,[[],["self"]]],[11,R[188],E,E,212,[[],["self"]]],[11,R[188],E,E,213,[[],["self"]]],[11,R[188],E,E,214,[[],["self"]]],[11,R[188],E,E,215,[[],["self"]]],[11,R[188],E,E,216,[[],["self"]]],[11,R[188],E,E,217,[[],["self"]]],[11,R[188],E,E,218,[[],["self"]]],[11,R[188],E,E,219,[[],["self"]]],[11,R[188],E,E,220,[[],["self"]]],[11,R[188],E,E,221,[[],["self"]]],[11,R[188],E,E,222,[[],["self"]]],[11,R[188],E,E,223,[[],["self"]]],[11,R[188],E,E,224,[[],["self"]]],[11,R[188],E,E,225,[[],["self"]]],[11,R[188],E,E,226,[[],["self"]]],[11,R[188],E,E,227,[[],["self"]]],[11,R[188],E,E,228,[[],["self"]]],[11,R[188],E,E,229,[[],["self"]]],[11,R[188],E,E,230,[[],["self"]]],[11,R[188],E,E,231,[[],["self"]]],[11,R[188],E,E,232,[[],["self"]]],[11,R[188],E,E,233,[[],["self"]]],[11,R[188],E,E,234,[[],["self"]]],[11,R[188],E,E,235,[[],["self"]]],[11,R[188],E,E,236,[[],["self"]]],[11,R[188],E,E,237,[[],["self"]]],[11,R[188],E,E,238,[[],["self"]]],[11,R[188],E,E,239,[[],["self"]]],[11,R[188],E,E,240,[[],["self"]]],[11,R[188],E,E,241,[[],["self"]]],[11,R[188],E,E,242,[[],["self"]]],[11,R[188],E,E,243,[[],["self"]]],[11,R[188],E,E,244,[[],["self"]]],[11,R[188],E,E,245,[[],["self"]]],[11,R[188],E,E,246,[[],["self"]]],[11,R[188],E,E,247,[[],["self"]]],[11,R[188],E,E,248,[[],["self"]]],[11,R[188],E,E,249,[[],["self"]]],[11,R[188],E,E,250,[[],["self"]]],[11,R[188],E,E,251,[[],["self"]]],[11,R[188],E,E,252,[[],["self"]]],[11,R[188],E,E,253,[[],["self"]]],[11,R[188],E,E,254,[[],["self"]]],[11,R[188],E,E,255,[[],["self"]]],[11,R[188],E,E,256,[[],["self"]]],[11,R[188],E,E,257,[[],["self"]]],[11,R[188],E,E,258,[[],["self"]]],[11,R[188],E,E,259,[[],["self"]]],[11,R[188],E,E,260,[[],["self"]]],[11,R[188],E,E,261,[[],["self"]]],[11,R[188],E,E,262,[[],["self"]]],[11,R[188],E,E,263,[[],["self"]]],[11,R[188],E,E,264,[[],["self"]]],[11,R[188],E,E,265,[[],["self"]]],[11,R[188],E,E,266,[[],["self"]]],[11,R[188],E,E,267,[[],["self"]]],[11,R[188],E,E,268,[[],["self"]]],[11,R[188],E,E,269,[[],["self"]]],[11,R[188],E,E,270,[[],["self"]]],[11,R[188],E,E,271,[[],["self"]]],[11,R[188],E,E,272,[[],["self"]]],[11,R[188],E,E,273,[[],["self"]]],[11,R[188],E,E,274,[[],["self"]]],[11,R[188],E,E,275,[[],["self"]]],[11,R[188],E,E,276,[[],["self"]]],[11,R[188],E,E,277,[[],["self"]]],[11,R[188],E,E,278,[[],["self"]]],[11,R[188],E,E,279,[[],["self"]]],[11,R[188],E,E,280,[[],["self"]]],[11,R[188],E,E,281,[[],["self"]]],[11,R[188],E,E,282,[[],["self"]]],[11,R[188],E,E,283,[[],["self"]]],[11,R[188],E,E,284,[[],["self"]]],[11,R[188],E,E,285,[[],["self"]]],[11,R[188],E,E,286,[[],["self"]]],[11,R[188],E,E,287,[[],["self"]]],[11,R[188],E,E,288,[[],["self"]]],[11,R[188],E,E,289,[[],["self"]]],[11,R[188],E,E,290,[[],["self"]]],[11,R[188],E,E,291,[[],["self"]]],[11,R[188],E,E,292,[[],["self"]]],[11,R[188],E,E,293,[[],["self"]]],[11,R[188],E,E,294,[[],["self"]]],[11,R[188],"syn",E,73,[[],[R[847]]]],[11,R[188],E,E,71,[[],[R[808]]]],[11,R[188],E,E,191,[[],["self"]]],[11,R[188],R[943],E,306,[[],["self"]]],[11,"len",E,E,318,[[["self"]],["usize"]]],[11,"len",E,E,319,[[["self"]],["usize"]]],[11,"len",E,E,320,[[["self"]],["usize"]]],[11,"len",E,E,321,[[["self"]],["usize"]]],[11,"len",E,E,322,[[["self"]],["usize"]]],[11,"len",E,E,323,[[["self"]],["usize"]]],[11,"clone",R[941],E,192,[[["self"]],[R[945]]]],[11,"clone",E,E,193,[[["self"]],["abstract"]]],[11,"clone",E,E,194,[[["self"]],["as"]]],[11,"clone",E,E,195,[[["self"]],["async"]]],[11,"clone",E,E,196,[[["self"]],["auto"]]],[11,"clone",E,E,197,[[["self"]],["become"]]],[11,"clone",E,E,198,[[["self"]],["box"]]],[11,"clone",E,E,199,[[["self"]],["break"]]],[11,"clone",E,E,200,[[["self"]],["const"]]],[11,"clone",E,E,201,[[["self"]],[R[951]]]],[11,"clone",E,E,202,[[["self"]],["crate"]]],[11,"clone",E,E,203,[[["self"]],[R[188]]]],[11,"clone",E,E,204,[[["self"]],["do"]]],[11,"clone",E,E,205,[[["self"]],["dyn"]]],[11,"clone",E,E,206,[[["self"]],["else"]]],[11,"clone",E,E,207,[[["self"]],["enum"]]],[11,"clone",E,E,208,[[["self"]],[R[1276]]]],[11,"clone",E,E,209,[[["self"]],["extern"]]],[11,"clone",E,E,210,[[["self"]],["final"]]],[11,"clone",E,E,211,[[["self"]],["fn"]]],[11,"clone",E,E,212,[[["self"]],["for"]]],[11,"clone",E,E,213,[[["self"]],["if"]]],[11,"clone",E,E,214,[[["self"]],["impl"]]],[11,"clone",E,E,215,[[["self"]],["in"]]],[11,"clone",E,E,216,[[["self"]],["let"]]],[11,"clone",E,E,217,[[["self"]],["loop"]]],[11,"clone",E,E,218,[[["self"]],["macro"]]],[11,"clone",E,E,219,[[["self"]],["match"]]],[11,"clone",E,E,220,[[["self"]],["mod"]]],[11,"clone",E,E,221,[[["self"]],["move"]]],[11,"clone",E,E,222,[[["self"]],["mut"]]],[11,"clone",E,E,223,[[["self"]],["override"]]],[11,"clone",E,E,224,[[["self"]],["priv"]]],[11,"clone",E,E,225,[[["self"]],["pub"]]],[11,"clone",E,E,226,[[["self"]],["ref"]]],[11,"clone",E,E,227,[[["self"]],["return"]]],[11,"clone",E,E,228,[[["self"]],["selftype"]]],[11,"clone",E,E,229,[[["self"]],["selfvalue"]]],[11,"clone",E,E,230,[[["self"]],["static"]]],[11,"clone",E,E,231,[[["self"]],["struct"]]],[11,"clone",E,E,232,[[["self"]],["super"]]],[11,"clone",E,E,233,[[["self"]],["trait"]]],[11,"clone",E,E,234,[[["self"]],["try"]]],[11,"clone",E,E,235,[[["self"]],["type"]]],[11,"clone",E,E,236,[[["self"]],["typeof"]]],[11,"clone",E,E,237,[[["self"]],["union"]]],[11,"clone",E,E,238,[[["self"]],["unsafe"]]],[11,"clone",E,E,239,[[["self"]],["unsized"]]],[11,"clone",E,E,240,[[["self"]],["use"]]],[11,"clone",E,E,241,[[["self"]],["virtual"]]],[11,"clone",E,E,242,[[["self"]],["where"]]],[11,"clone",E,E,243,[[["self"]],["while"]]],[11,"clone",E,E,244,[[["self"]],["yield"]]],[11,"clone",E,E,245,[[["self"]],["add"]]],[11,"clone",E,E,246,[[["self"]],["addeq"]]],[11,"clone",E,E,247,[[["self"]],["and"]]],[11,"clone",E,E,248,[[["self"]],["andand"]]],[11,"clone",E,E,249,[[["self"]],["andeq"]]],[11,"clone",E,E,250,[[["self"]],["at"]]],[11,"clone",E,E,251,[[["self"]],["bang"]]],[11,"clone",E,E,252,[[["self"]],["caret"]]],[11,"clone",E,E,253,[[["self"]],["careteq"]]],[11,"clone",E,E,254,[[["self"]],["colon"]]],[11,"clone",E,E,255,[[["self"]],["colon2"]]],[11,"clone",E,E,256,[[["self"]],["comma"]]],[11,"clone",E,E,257,[[["self"]],["div"]]],[11,"clone",E,E,258,[[["self"]],["diveq"]]],[11,"clone",E,E,259,[[["self"]],["dollar"]]],[11,"clone",E,E,260,[[["self"]],["dot"]]],[11,"clone",E,E,261,[[["self"]],["dot2"]]],[11,"clone",E,E,262,[[["self"]],["dot3"]]],[11,"clone",E,E,263,[[["self"]],[R[948]]]],[11,"clone",E,E,264,[[["self"]],["eq"]]],[11,"clone",E,E,265,[[["self"]],["eqeq"]]],[11,"clone",E,E,266,[[["self"]],["ge"]]],[11,"clone",E,E,267,[[["self"]],["gt"]]],[11,"clone",E,E,268,[[["self"]],["le"]]],[11,"clone",E,E,269,[[["self"]],["lt"]]],[11,"clone",E,E,270,[[["self"]],["muleq"]]],[11,"clone",E,E,271,[[["self"]],["ne"]]],[11,"clone",E,E,272,[[["self"]],["or"]]],[11,"clone",E,E,273,[[["self"]],["oreq"]]],[11,"clone",E,E,274,[[["self"]],["oror"]]],[11,"clone",E,E,275,[[["self"]],["pound"]]],[11,"clone",E,E,276,[[["self"]],[R[949]]]],[11,"clone",E,E,277,[[["self"]],["rarrow"]]],[11,"clone",E,E,278,[[["self"]],["larrow"]]],[11,"clone",E,E,279,[[["self"]],["rem"]]],[11,"clone",E,E,280,[[["self"]],["remeq"]]],[11,"clone",E,E,281,[[["self"]],[R[950]]]],[11,"clone",E,E,282,[[["self"]],["semi"]]],[11,"clone",E,E,283,[[["self"]],["shl"]]],[11,"clone",E,E,284,[[["self"]],["shleq"]]],[11,"clone",E,E,285,[[["self"]],["shr"]]],[11,"clone",E,E,286,[[["self"]],["shreq"]]],[11,"clone",E,E,287,[[["self"]],["star"]]],[11,"clone",E,E,288,[[["self"]],["sub"]]],[11,"clone",E,E,289,[[["self"]],["subeq"]]],[11,"clone",E,E,290,[[["self"]],["tilde"]]],[11,"clone",E,E,291,[[["self"]],["brace"]]],[11,"clone",E,E,292,[[["self"]],["bracket"]]],[11,"clone",E,E,293,[[["self"]],["paren"]]],[11,"clone",E,E,294,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],[R[800]]]],[11,"clone",E,E,158,[[["self"]],[R[798]]]],[11,"clone",E,E,159,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],[R[952]]]],[11,"clone",E,E,2,[[["self"]],[R[871]]]],[11,"clone",E,E,160,[[["self"]],[R[873]]]],[11,"clone",E,E,6,[[["self"]],[R[999]]]],[11,"clone",E,E,161,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[839]]]],[11,"clone",E,E,5,[[["self"]],[R[841]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,162,[[["self"]],[R[936]]]],[11,"clone",E,E,8,[[["self"]],[R[932]]]],[11,"clone",E,E,7,[[["self"]],[R[953]]]],[11,"clone",E,E,9,[[["self"]],[R[934]]]],[11,"clone",E,E,163,[[["self"]],["expr"]]],[11,"clone",E,E,16,[[["self"]],["exprbox"]]],[11,"clone",E,E,26,[[["self"]],[R[961]]]],[11,"clone",E,E,10,[[["self"]],[R[962]]]],[11,"clone",E,E,18,[[["self"]],[R[954]]]],[11,"clone",E,E,33,[[["self"]],[R[963]]]],[11,"clone",E,E,43,[[["self"]],[R[964]]]],[11,"clone",E,E,14,[[["self"]],[R[821]]]],[11,"clone",E,E,45,[[["self"]],[R[833]]]],[11,"clone",E,E,29,[[["self"]],[R[992]]]],[11,"clone",E,E,19,[[["self"]],[R[955]]]],[11,"clone",E,E,44,[[["self"]],[R[965]]]],[11,"clone",E,E,28,[[["self"]],["exprlet"]]],[11,"clone",E,E,25,[[["self"]],["exprif"]]],[11,"clone",E,E,48,[[["self"]],[R[967]]]],[11,"clone",E,E,23,[[["self"]],[R[969]]]],[11,"clone",E,E,30,[[["self"]],[R[970]]]],[11,"clone",E,E,32,[[["self"]],[R[971]]]],[11,"clone",E,E,20,[[["self"]],[R[972]]]],[11,"clone",E,E,46,[[["self"]],[R[973]]]],[11,"clone",E,E,15,[[["self"]],[R[974]]]],[11,"clone",E,E,11,[[["self"]],[R[975]]]],[11,"clone",E,E,12,[[["self"]],[R[976]]]],[11,"clone",E,E,22,[[["self"]],[R[825]]]],[11,"clone",E,E,27,[[["self"]],[R[827]]]],[11,"clone",E,E,36,[[["self"]],[R[977]]]],[11,"clone",E,E,35,[[["self"]],[R[956]]]],[11,"clone",E,E,37,[[["self"]],[R[978]]]],[11,"clone",E,E,17,[[["self"]],[R[979]]]],[11,"clone",E,E,21,[[["self"]],[R[980]]]],[11,"clone",E,E,39,[[["self"]],[R[981]]]],[11,"clone",E,E,31,[[["self"]],[R[982]]]],[11,"clone",E,E,40,[[["self"]],[R[983]]]],[11,"clone",E,E,38,[[["self"]],[R[984]]]],[11,"clone",E,E,34,[[["self"]],[R[830]]]],[11,"clone",E,E,24,[[["self"]],[R[985]]]],[11,"clone",E,E,41,[[["self"]],["exprtry"]]],[11,"clone",E,E,13,[[["self"]],[R[1277]]]],[11,"clone",E,E,42,[[["self"]],[R[1165]]]],[11,"clone",E,E,49,[[["self"]],[R[987]]]],[11,"clone",E,E,47,[[["self"]],[R[835]]]],[11,"clone",E,E,164,[[["self"]],["member"]]],[11,"clone",E,E,50,[[["self"]],["index"]]],[11,"clone",E,E,57,[[["self"]],[R[1229]]]],[11,"clone",E,E,165,[[["self"]],[R[1188]]]],[11,"clone",E,E,54,[[["self"]],[R[1270]]]],[11,"clone",E,E,55,[[["self"]],["label"]]],[11,"clone",E,E,52,[[["self"]],["block"]]],[11,"clone",E,E,168,[[["self"]],["stmt"]]],[11,"clone",E,E,56,[[["self"]],["local"]]],[11,"clone",E,E,166,[[["self"]],["pat"]]],[11,"clone",E,E,70,[[["self"]],["patwild"]]],[11,"clone",E,E,59,[[["self"]],[R[1292]]]],[11,"clone",E,E,66,[[["self"]],[R[1278]]]],[11,"clone",E,E,68,[[["self"]],[R[1241]]]],[11,"clone",E,E,62,[[["self"]],["patpath"]]],[11,"clone",E,E,67,[[["self"]],[R[1296]]]],[11,"clone",E,E,58,[[["self"]],["patbox"]]],[11,"clone",E,E,64,[[["self"]],["patref"]]],[11,"clone",E,E,60,[[["self"]],["patlit"]]],[11,"clone",E,E,63,[[["self"]],[R[1294]]]],[11,"clone",E,E,65,[[["self"]],[R[1295]]]],[11,"clone",E,E,61,[[["self"]],[R[1293]]]],[11,"clone",E,E,69,[[["self"]],[R[1243]]]],[11,"clone",E,E,51,[[["self"]],["arm"]]],[11,"clone",E,E,167,[[["self"]],[R[1246]]]],[11,"clone",E,E,53,[[["self"]],["fieldpat"]]],[11,"clone",E,E,73,[[["self"]],[R[847]]]],[11,"clone",E,E,169,[[["self"]],[R[845]]]],[11,"clone",E,E,79,[[["self"]],[R[911]]]],[11,"clone",E,E,74,[[["self"]],[R[852]]]],[11,"clone",E,E,72,[[["self"]],[R[810]]]],[11,"clone",E,E,316,[[["self"]],[R[988]]]],[11,"clone",E,E,295,[[["self"]],[R[989]]]],[11,"clone",E,E,317,[[["self"]],[R[957]]]],[11,"clone",E,E,71,[[["self"]],[R[808]]]],[11,"clone",E,E,171,[[["self"]],[R[913]]]],[11,"clone",E,E,78,[[["self"]],[R[892]]]],[11,"clone",E,E,170,[[["self"]],[R[894]]]],[11,"clone",E,E,80,[[["self"]],[R[792]]]],[11,"clone",E,E,172,[[["self"]],[R[939]]]],[11,"clone",E,E,77,[[["self"]],[R[886]]]],[11,"clone",E,E,76,[[["self"]],[R[884]]]],[11,"clone",E,E,75,[[["self"]],[R[882]]]],[11,"clone",E,E,176,[[["self"]],["item"]]],[11,"clone",E,E,99,[[["self"]],[R[1207]]]],[11,"clone",E,E,112,[[["self"]],["itemuse"]]],[11,"clone",E,E,106,[[["self"]],[R[1271]]]],[11,"clone",E,E,96,[[["self"]],[R[1279]]]],[11,"clone",E,E,100,[[["self"]],["itemfn"]]],[11,"clone",E,E,105,[[["self"]],["itemmod"]]],[11,"clone",E,E,101,[[["self"]],[R[1210]]]],[11,"clone",E,E,110,[[["self"]],[R[1291]]]],[11,"clone",E,E,98,[[["self"]],[R[1205]]]],[11,"clone",E,E,107,[[["self"]],[R[1272]]]],[11,"clone",E,E,97,[[["self"]],[R[1289]]]],[11,"clone",E,E,111,[[["self"]],[R[1280]]]],[11,"clone",E,E,108,[[["self"]],[R[1281]]]],[11,"clone",E,E,109,[[["self"]],[R[1219]]]],[11,"clone",E,E,102,[[["self"]],[R[1290]]]],[11,"clone",E,E,103,[[["self"]],[R[1282]]]],[11,"clone",E,E,104,[[["self"]],[R[1273]]]],[11,"clone",E,E,113,[[["self"]],[R[1224]]]],[11,"clone",E,E,178,[[["self"]],["usetree"]]],[11,"clone",E,E,123,[[["self"]],["usepath"]]],[11,"clone",E,E,122,[[["self"]],["usename"]]],[11,"clone",E,E,124,[[["self"]],[R[1283]]]],[11,"clone",E,E,120,[[["self"]],["useglob"]]],[11,"clone",E,E,121,[[["self"]],[R[1298]]]],[11,"clone",E,E,174,[[["self"]],[R[1176]]]],[11,"clone",E,E,85,[[["self"]],[R[1178]]]],[11,"clone",E,E,87,[[["self"]],[R[1182]]]],[11,"clone",E,E,88,[[["self"]],[R[1184]]]],[11,"clone",E,E,86,[[["self"]],[R[1180]]]],[11,"clone",E,E,89,[[["self"]],[R[1186]]]],[11,"clone",E,E,177,[[["self"]],[R[1284]]]],[11,"clone",E,E,115,[[["self"]],[R[1249]]]],[11,"clone",E,E,117,[[["self"]],[R[1253]]]],[11,"clone",E,E,118,[[["self"]],[R[1255]]]],[11,"clone",E,E,116,[[["self"]],[R[1251]]]],[11,"clone",E,E,119,[[["self"]],[R[1257]]]],[11,"clone",E,E,175,[[["self"]],[R[1286]]]],[11,"clone",E,E,90,[[["self"]],[R[1191]]]],[11,"clone",E,E,93,[[["self"]],[R[1197]]]],[11,"clone",E,E,94,[[["self"]],[R[1199]]]],[11,"clone",E,E,91,[[["self"]],[R[1193]]]],[11,"clone",E,E,92,[[["self"]],[R[1195]]]],[11,"clone",E,E,95,[[["self"]],[R[1201]]]],[11,"clone",E,E,114,[[["self"]],[R[1285]]]],[11,"clone",E,E,84,[[["self"]],["fndecl"]]],[11,"clone",E,E,173,[[["self"]],["fnarg"]]],[11,"clone",E,E,83,[[["self"]],[R[1274]]]],[11,"clone",E,E,82,[[["self"]],["argself"]]],[11,"clone",E,E,81,[[["self"]],[R[1135]]]],[11,"clone",E,E,125,[[["self"]],["file"]]],[11,"clone",E,E,126,[[["self"]],[R[684]]]],[11,"clone",E,E,181,[[["self"]],["lit"]]],[11,"clone",E,E,296,[[["self"]],["litstr"]]],[11,"clone",E,E,297,[[["self"]],[R[857]]]],[11,"clone",E,E,298,[[["self"]],["litbyte"]]],[11,"clone",E,E,299,[[["self"]],["litchar"]]],[11,"clone",E,E,300,[[["self"]],["litint"]]],[11,"clone",E,E,301,[[["self"]],[R[958]]]],[11,"clone",E,E,127,[[["self"]],["litbool"]]],[11,"clone",E,E,128,[[["self"]],[R[863]]]],[11,"clone",E,E,182,[[["self"]],[R[990]]]],[11,"clone",E,E,180,[[["self"]],[R[772]]]],[11,"clone",E,E,179,[[["self"]],[R[773]]]],[11,"clone",E,E,129,[[["self"]],["macro"]]],[11,"clone",E,E,183,[[["self"]],[R[866]]]],[11,"clone",E,E,133,[[["self"]],[R[818]]]],[11,"clone",E,E,184,[[["self"]],["data"]]],[11,"clone",E,E,131,[[["self"]],[R[814]]]],[11,"clone",E,E,130,[[["self"]],[R[959]]]],[11,"clone",E,E,132,[[["self"]],[R[816]]]],[11,"clone",E,E,185,[[["self"]],["binop"]]],[11,"clone",E,E,186,[[["self"]],["unop"]]],[11,"clone",E,E,189,[[["self"]],["type"]]],[11,"clone",E,E,147,[[["self"]],[R[921]]]],[11,"clone",E,E,136,[[["self"]],[R[897]]]],[11,"clone",E,E,145,[[["self"]],[R[993]]]],[11,"clone",E,E,146,[[["self"]],[R[919]]]],[11,"clone",E,E,137,[[["self"]],[R[899]]]],[11,"clone",E,E,142,[[["self"]],[R[909]]]],[11,"clone",E,E,149,[[["self"]],[R[925]]]],[11,"clone",E,E,144,[[["self"]],[R[960]]]],[11,"clone",E,E,148,[[["self"]],[R[923]]]],[11,"clone",E,E,139,[[["self"]],[R[903]]]],[11,"clone",E,E,143,[[["self"]],[R[915]]]],[11,"clone",E,E,138,[[["self"]],[R[901]]]],[11,"clone",E,E,140,[[["self"]],[R[905]]]],[11,"clone",E,E,141,[[["self"]],[R[907]]]],[11,"clone",E,E,150,[[["self"]],[R[927]]]],[11,"clone",E,E,134,[[["self"]],["abi"]]],[11,"clone",E,E,135,[[["self"]],[R[802]]]],[11,"clone",E,E,187,[[["self"]],[R[804]]]],[11,"clone",E,E,188,[[["self"]],[R[889]]]],[11,"clone",E,E,155,[[["self"]],["path"]]],[11,"clone",E,E,156,[[["self"]],[R[880]]]],[11,"clone",E,E,191,[[["self"]],[R[878]]]],[11,"clone",E,E,190,[[["self"]],[R[843]]]],[11,"clone",E,E,151,[[["self"]],[R[796]]]],[11,"clone",E,E,152,[[["self"]],[R[998]]]],[11,"clone",E,E,153,[[["self"]],[R[1275]]]],[11,"clone",E,E,154,[[["self"]],[R[875]]]],[11,"clone",E,E,157,[[["self"]],["qself"]]],[11,"clone",R[942],E,303,[[["self"]],["cursor"]]],[11,"clone",R[943],E,306,[[["self"]],[R[779]]]],[11,"clone",E,E,318,[[["self"]],["self"]]],[11,"clone",E,E,320,[[["self"]],["intopairs"]]],[11,"clone",E,E,321,[[["self"]],[R[210]]]],[11,"clone",E,E,322,[[["self"]],["self"]]],[11,"clone",E,E,305,[[["self"]],["pair"]]],[11,"clone",R[1269],E,312,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,314,[[["self"]],["self"]]],[11,R[153],E,E,126,[[["self"],[R[684]]],[[R[24],[R[23]]],[R[23]]]]],[11,"cmp",E,E,126,[[["self"],[R[684]]],[R[23]]]],[11,R[22],R[943],E,306,[[]]],[11,"eq",R[941],E,192,[[["self"],[R[945]]],["bool"]]],[11,"eq",E,E,193,[[["self"],["abstract"]],["bool"]]],[11,"eq",E,E,194,[[["self"],["as"]],["bool"]]],[11,"eq",E,E,195,[[["self"],["async"]],["bool"]]],[11,"eq",E,E,196,[[["self"],["auto"]],["bool"]]],[11,"eq",E,E,197,[[["self"],["become"]],["bool"]]],[11,"eq",E,E,198,[[["self"],["box"]],["bool"]]],[11,"eq",E,E,199,[[["self"],["break"]],["bool"]]],[11,"eq",E,E,200,[[["self"],["const"]],["bool"]]],[11,"eq",E,E,201,[[["self"],[R[951]]],["bool"]]],[11,"eq",E,E,202,[[["self"],["crate"]],["bool"]]],[11,"eq",E,E,203,[[["self"],[R[188]]],["bool"]]],[11,"eq",E,E,204,[[["self"],["do"]],["bool"]]],[11,"eq",E,E,205,[[["self"],["dyn"]],["bool"]]],[11,"eq",E,E,206,[[["self"],["else"]],["bool"]]],[11,"eq",E,E,207,[[["self"],["enum"]],["bool"]]],[11,"eq",E,E,208,[[["self"],[R[1276]]],["bool"]]],[11,"eq",E,E,209,[[["self"],["extern"]],["bool"]]],[11,"eq",E,E,210,[[["self"],["final"]],["bool"]]],[11,"eq",E,E,211,[[["self"],["fn"]],["bool"]]],[11,"eq",E,E,212,[[["self"],["for"]],["bool"]]],[11,"eq",E,E,213,[[["self"],["if"]],["bool"]]],[11,"eq",E,E,214,[[["self"],["impl"]],["bool"]]],[11,"eq",E,E,215,[[["self"],["in"]],["bool"]]],[11,"eq",E,E,216,[[["self"],["let"]],["bool"]]],[11,"eq",E,E,217,[[["self"],["loop"]],["bool"]]],[11,"eq",E,E,218,[[["self"],["macro"]],["bool"]]],[11,"eq",E,E,219,[[["self"],["match"]],["bool"]]],[11,"eq",E,E,220,[[["self"],["mod"]],["bool"]]],[11,"eq",E,E,221,[[["self"],["move"]],["bool"]]],[11,"eq",E,E,222,[[["self"],["mut"]],["bool"]]],[11,"eq",E,E,223,[[["self"],["override"]],["bool"]]],[11,"eq",E,E,224,[[["self"],["priv"]],["bool"]]],[11,"eq",E,E,225,[[["self"],["pub"]],["bool"]]],[11,"eq",E,E,226,[[["self"],["ref"]],["bool"]]],[11,"eq",E,E,227,[[["self"],["return"]],["bool"]]],[11,"eq",E,E,228,[[["self"],["selftype"]],["bool"]]],[11,"eq",E,E,229,[[["self"],["selfvalue"]],["bool"]]],[11,"eq",E,E,230,[[["self"],["static"]],["bool"]]],[11,"eq",E,E,231,[[["self"],["struct"]],["bool"]]],[11,"eq",E,E,232,[[["self"],["super"]],["bool"]]],[11,"eq",E,E,233,[[["self"],["trait"]],["bool"]]],[11,"eq",E,E,234,[[["self"],["try"]],["bool"]]],[11,"eq",E,E,235,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,236,[[["self"],["typeof"]],["bool"]]],[11,"eq",E,E,237,[[["self"],["union"]],["bool"]]],[11,"eq",E,E,238,[[["self"],["unsafe"]],["bool"]]],[11,"eq",E,E,239,[[["self"],["unsized"]],["bool"]]],[11,"eq",E,E,240,[[["self"],["use"]],["bool"]]],[11,"eq",E,E,241,[[["self"],["virtual"]],["bool"]]],[11,"eq",E,E,242,[[["self"],["where"]],["bool"]]],[11,"eq",E,E,243,[[["self"],["while"]],["bool"]]],[11,"eq",E,E,244,[[["self"],["yield"]],["bool"]]],[11,"eq",E,E,245,[[["self"],["add"]],["bool"]]],[11,"eq",E,E,246,[[["self"],["addeq"]],["bool"]]],[11,"eq",E,E,247,[[["self"],["and"]],["bool"]]],[11,"eq",E,E,248,[[["self"],["andand"]],["bool"]]],[11,"eq",E,E,249,[[["self"],["andeq"]],["bool"]]],[11,"eq",E,E,250,[[["self"],["at"]],["bool"]]],[11,"eq",E,E,251,[[["self"],["bang"]],["bool"]]],[11,"eq",E,E,252,[[["self"],["caret"]],["bool"]]],[11,"eq",E,E,253,[[["self"],["careteq"]],["bool"]]],[11,"eq",E,E,254,[[["self"],["colon"]],["bool"]]],[11,"eq",E,E,255,[[["self"],["colon2"]],["bool"]]],[11,"eq",E,E,256,[[["self"],["comma"]],["bool"]]],[11,"eq",E,E,257,[[["self"],["div"]],["bool"]]],[11,"eq",E,E,258,[[["self"],["diveq"]],["bool"]]],[11,"eq",E,E,259,[[["self"],["dollar"]],["bool"]]],[11,"eq",E,E,260,[[["self"],["dot"]],["bool"]]],[11,"eq",E,E,261,[[["self"],["dot2"]],["bool"]]],[11,"eq",E,E,262,[[["self"],["dot3"]],["bool"]]],[11,"eq",E,E,263,[[["self"],[R[948]]],["bool"]]],[11,"eq",E,E,264,[[["self"],["eq"]],["bool"]]],[11,"eq",E,E,265,[[["self"],["eqeq"]],["bool"]]],[11,"eq",E,E,266,[[["self"],["ge"]],["bool"]]],[11,"eq",E,E,267,[[["self"],["gt"]],["bool"]]],[11,"eq",E,E,268,[[["self"],["le"]],["bool"]]],[11,"eq",E,E,269,[[["self"],["lt"]],["bool"]]],[11,"eq",E,E,270,[[["self"],["muleq"]],["bool"]]],[11,"eq",E,E,271,[[["self"],["ne"]],["bool"]]],[11,"eq",E,E,272,[[["self"],["or"]],["bool"]]],[11,"eq",E,E,273,[[["self"],["oreq"]],["bool"]]],[11,"eq",E,E,274,[[["self"],["oror"]],["bool"]]],[11,"eq",E,E,275,[[["self"],["pound"]],["bool"]]],[11,"eq",E,E,276,[[["self"],[R[949]]],["bool"]]],[11,"eq",E,E,277,[[["self"],["rarrow"]],["bool"]]],[11,"eq",E,E,278,[[["self"],["larrow"]],["bool"]]],[11,"eq",E,E,279,[[["self"],["rem"]],["bool"]]],[11,"eq",E,E,280,[[["self"],["remeq"]],["bool"]]],[11,"eq",E,E,281,[[["self"],[R[950]]],["bool"]]],[11,"eq",E,E,282,[[["self"],["semi"]],["bool"]]],[11,"eq",E,E,283,[[["self"],["shl"]],["bool"]]],[11,"eq",E,E,284,[[["self"],["shleq"]],["bool"]]],[11,"eq",E,E,285,[[["self"],["shr"]],["bool"]]],[11,"eq",E,E,286,[[["self"],["shreq"]],["bool"]]],[11,"eq",E,E,287,[[["self"],["star"]],["bool"]]],[11,"eq",E,E,288,[[["self"],["sub"]],["bool"]]],[11,"eq",E,E,289,[[["self"],["subeq"]],["bool"]]],[11,"eq",E,E,290,[[["self"],["tilde"]],["bool"]]],[11,"eq",E,E,291,[[["self"],["brace"]],["bool"]]],[11,"eq",E,E,292,[[["self"],["bracket"]],["bool"]]],[11,"eq",E,E,293,[[["self"],["paren"]],["bool"]]],[11,"eq",E,E,294,[[["self"],["group"]],["bool"]]],[11,"eq","syn",E,0,[[["self"]],["bool"]]],[11,"eq",E,E,158,[[["self"],[R[798]]],["bool"]]],[11,"ne",E,E,158,[[["self"],[R[798]]],["bool"]]],[11,"eq",E,E,159,[[["self"],["meta"]],["bool"]]],[11,"ne",E,E,159,[[["self"],["meta"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[952]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[952]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[871]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[871]]],["bool"]]],[11,"eq",E,E,160,[[["self"],[R[873]]],["bool"]]],[11,"ne",E,E,160,[[["self"],[R[873]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[999]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[999]]],["bool"]]],[11,"eq",E,E,161,[[["self"],["fields"]],["bool"]]],[11,"ne",E,E,161,[[["self"],["fields"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[839]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[839]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[841]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[841]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["field"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["field"]],["bool"]]],[11,"eq",E,E,162,[[["self"],[R[936]]],["bool"]]],[11,"ne",E,E,162,[[["self"],[R[936]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[932]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[932]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[953]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[953]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[934]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[934]]],["bool"]]],[11,"eq",E,E,163,[[["self"],["expr"]],["bool"]]],[11,"ne",E,E,163,[[["self"],["expr"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["exprbox"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["exprbox"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[961]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[961]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[962]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[962]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[954]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[954]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[963]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[963]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[964]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[964]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[821]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[821]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[833]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[833]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[992]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[992]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[955]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[955]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[965]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[965]]],["bool"]]],[11,"eq",E,E,28,[[["self"],["exprlet"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["exprlet"]],["bool"]]],[11,"eq",E,E,25,[[["self"],["exprif"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["exprif"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[967]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[967]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[969]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[969]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[970]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[970]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[971]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[971]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[972]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[972]]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[973]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[973]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[974]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[974]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[975]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[975]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[976]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[976]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[825]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[825]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[827]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[827]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[977]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[977]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[956]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[956]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[978]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[978]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[979]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[979]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[980]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[980]]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[981]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[981]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[982]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[982]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[983]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[983]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[984]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[984]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[830]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[830]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[985]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[985]]],["bool"]]],[11,"eq",E,E,41,[[["self"],["exprtry"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["exprtry"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1277]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1277]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[1165]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[1165]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[987]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[987]]],["bool"]]],[11,"eq",E,E,47,[[["self"]],["bool"]]],[11,"eq",E,E,164,[[["self"],["member"]],["bool"]]],[11,"ne",E,E,164,[[["self"],["member"]],["bool"]]],[11,"eq",E,E,50,[[["self"]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[1229]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[1229]]],["bool"]]],[11,"eq",E,E,165,[[["self"],[R[1188]]],["bool"]]],[11,"ne",E,E,165,[[["self"],[R[1188]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[1270]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[1270]]],["bool"]]],[11,"eq",E,E,55,[[["self"],["label"]],["bool"]]],[11,"ne",E,E,55,[[["self"],["label"]],["bool"]]],[11,"eq",E,E,52,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,168,[[["self"],["stmt"]],["bool"]]],[11,"ne",E,E,168,[[["self"],["stmt"]],["bool"]]],[11,"eq",E,E,56,[[["self"],["local"]],["bool"]]],[11,"ne",E,E,56,[[["self"],["local"]],["bool"]]],[11,"eq",E,E,166,[[["self"],["pat"]],["bool"]]],[11,"ne",E,E,166,[[["self"],["pat"]],["bool"]]],[11,"eq",E,E,70,[[["self"],["patwild"]],["bool"]]],[11,"ne",E,E,70,[[["self"],["patwild"]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[1292]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[1292]]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[1278]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[1278]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[1241]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[1241]]],["bool"]]],[11,"eq",E,E,62,[[["self"],["patpath"]],["bool"]]],[11,"ne",E,E,62,[[["self"],["patpath"]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[1296]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[1296]]],["bool"]]],[11,"eq",E,E,58,[[["self"],["patbox"]],["bool"]]],[11,"ne",E,E,58,[[["self"],["patbox"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["patref"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["patref"]],["bool"]]],[11,"eq",E,E,60,[[["self"],["patlit"]],["bool"]]],[11,"ne",E,E,60,[[["self"],["patlit"]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[1294]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[1294]]],["bool"]]],[11,"eq",E,E,65,[[["self"],[R[1295]]],["bool"]]],[11,"ne",E,E,65,[[["self"],[R[1295]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[1293]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[1293]]],["bool"]]],[11,"eq",E,E,69,[[["self"]],["bool"]]],[11,"eq",E,E,51,[[["self"],["arm"]],["bool"]]],[11,"ne",E,E,51,[[["self"],["arm"]],["bool"]]],[11,"eq",E,E,167,[[["self"],[R[1246]]],["bool"]]],[11,"ne",E,E,167,[[["self"],[R[1246]]],["bool"]]],[11,"eq",E,E,53,[[["self"],["fieldpat"]],["bool"]]],[11,"ne",E,E,53,[[["self"],["fieldpat"]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[847]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[847]]],["bool"]]],[11,"eq",E,E,169,[[["self"],[R[845]]],["bool"]]],[11,"ne",E,E,169,[[["self"],[R[845]]],["bool"]]],[11,"eq",E,E,79,[[["self"],[R[911]]],["bool"]]],[11,"ne",E,E,79,[[["self"],[R[911]]],["bool"]]],[11,"eq",E,E,74,[[["self"],[R[852]]],["bool"]]],[11,"ne",E,E,74,[[["self"],[R[852]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[810]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[810]]],["bool"]]],[11,"eq",E,E,316,[[["self"],[R[988]]],["bool"]]],[11,"ne",E,E,316,[[["self"],[R[988]]],["bool"]]],[11,"eq",E,E,295,[[["self"],[R[989]]],["bool"]]],[11,"ne",E,E,295,[[["self"],[R[989]]],["bool"]]],[11,"eq",E,E,317,[[["self"],[R[957]]],["bool"]]],[11,"ne",E,E,317,[[["self"],[R[957]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[808]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[808]]],["bool"]]],[11,"eq",E,E,171,[[["self"],[R[913]]],["bool"]]],[11,"ne",E,E,171,[[["self"],[R[913]]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[892]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[892]]],["bool"]]],[11,"eq",E,E,170,[[["self"],[R[894]]],["bool"]]],[11,"ne",E,E,170,[[["self"],[R[894]]],["bool"]]],[11,"eq",E,E,80,[[["self"],[R[792]]],["bool"]]],[11,"ne",E,E,80,[[["self"],[R[792]]],["bool"]]],[11,"eq",E,E,172,[[["self"],[R[939]]],["bool"]]],[11,"ne",E,E,172,[[["self"],[R[939]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[886]]],["bool"]]],[11,"ne",E,E,77,[[["self"],[R[886]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[884]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[884]]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[882]]],["bool"]]],[11,"ne",E,E,75,[[["self"],[R[882]]],["bool"]]],[11,"eq",E,E,176,[[["self"],["item"]],["bool"]]],[11,"ne",E,E,176,[[["self"],["item"]],["bool"]]],[11,"eq",E,E,99,[[["self"],[R[1207]]],["bool"]]],[11,"ne",E,E,99,[[["self"],[R[1207]]],["bool"]]],[11,"eq",E,E,112,[[["self"],["itemuse"]],["bool"]]],[11,"ne",E,E,112,[[["self"],["itemuse"]],["bool"]]],[11,"eq",E,E,106,[[["self"],[R[1271]]],["bool"]]],[11,"ne",E,E,106,[[["self"],[R[1271]]],["bool"]]],[11,"eq",E,E,96,[[["self"],[R[1279]]],["bool"]]],[11,"ne",E,E,96,[[["self"],[R[1279]]],["bool"]]],[11,"eq",E,E,100,[[["self"],["itemfn"]],["bool"]]],[11,"ne",E,E,100,[[["self"],["itemfn"]],["bool"]]],[11,"eq",E,E,105,[[["self"],["itemmod"]],["bool"]]],[11,"ne",E,E,105,[[["self"],["itemmod"]],["bool"]]],[11,"eq",E,E,101,[[["self"],[R[1210]]],["bool"]]],[11,"ne",E,E,101,[[["self"],[R[1210]]],["bool"]]],[11,"eq",E,E,110,[[["self"],[R[1291]]],["bool"]]],[11,"ne",E,E,110,[[["self"],[R[1291]]],["bool"]]],[11,"eq",E,E,98,[[["self"],[R[1205]]],["bool"]]],[11,"ne",E,E,98,[[["self"],[R[1205]]],["bool"]]],[11,"eq",E,E,107,[[["self"],[R[1272]]],["bool"]]],[11,"ne",E,E,107,[[["self"],[R[1272]]],["bool"]]],[11,"eq",E,E,97,[[["self"],[R[1289]]],["bool"]]],[11,"ne",E,E,97,[[["self"],[R[1289]]],["bool"]]],[11,"eq",E,E,111,[[["self"],[R[1280]]],["bool"]]],[11,"ne",E,E,111,[[["self"],[R[1280]]],["bool"]]],[11,"eq",E,E,108,[[["self"],[R[1281]]],["bool"]]],[11,"ne",E,E,108,[[["self"],[R[1281]]],["bool"]]],[11,"eq",E,E,109,[[["self"],[R[1219]]],["bool"]]],[11,"ne",E,E,109,[[["self"],[R[1219]]],["bool"]]],[11,"eq",E,E,102,[[["self"],[R[1290]]],["bool"]]],[11,"ne",E,E,102,[[["self"],[R[1290]]],["bool"]]],[11,"eq",E,E,103,[[["self"],[R[1282]]],["bool"]]],[11,"ne",E,E,103,[[["self"],[R[1282]]],["bool"]]],[11,"eq",E,E,104,[[["self"]],["bool"]]],[11,"eq",E,E,113,[[["self"]],["bool"]]],[11,"eq",E,E,178,[[["self"],["usetree"]],["bool"]]],[11,"ne",E,E,178,[[["self"],["usetree"]],["bool"]]],[11,"eq",E,E,123,[[["self"],["usepath"]],["bool"]]],[11,"ne",E,E,123,[[["self"],["usepath"]],["bool"]]],[11,"eq",E,E,122,[[["self"],["usename"]],["bool"]]],[11,"ne",E,E,122,[[["self"],["usename"]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[1283]]],["bool"]]],[11,"ne",E,E,124,[[["self"],[R[1283]]],["bool"]]],[11,"eq",E,E,120,[[["self"],["useglob"]],["bool"]]],[11,"ne",E,E,120,[[["self"],["useglob"]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[1298]]],["bool"]]],[11,"ne",E,E,121,[[["self"],[R[1298]]],["bool"]]],[11,"eq",E,E,174,[[["self"],[R[1176]]],["bool"]]],[11,"ne",E,E,174,[[["self"],[R[1176]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[1178]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[1178]]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[1182]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[1182]]],["bool"]]],[11,"eq",E,E,88,[[["self"],[R[1184]]],["bool"]]],[11,"ne",E,E,88,[[["self"],[R[1184]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[1180]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[1180]]],["bool"]]],[11,"eq",E,E,89,[[["self"]],["bool"]]],[11,"eq",E,E,177,[[["self"],[R[1284]]],["bool"]]],[11,"ne",E,E,177,[[["self"],[R[1284]]],["bool"]]],[11,"eq",E,E,115,[[["self"],[R[1249]]],["bool"]]],[11,"ne",E,E,115,[[["self"],[R[1249]]],["bool"]]],[11,"eq",E,E,117,[[["self"],[R[1253]]],["bool"]]],[11,"ne",E,E,117,[[["self"],[R[1253]]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[1255]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[1255]]],["bool"]]],[11,"eq",E,E,116,[[["self"],[R[1251]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[1251]]],["bool"]]],[11,"eq",E,E,119,[[["self"]],["bool"]]],[11,"eq",E,E,175,[[["self"],[R[1286]]],["bool"]]],[11,"ne",E,E,175,[[["self"],[R[1286]]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[1191]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[1191]]],["bool"]]],[11,"eq",E,E,93,[[["self"],[R[1197]]],["bool"]]],[11,"ne",E,E,93,[[["self"],[R[1197]]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[1199]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[1199]]],["bool"]]],[11,"eq",E,E,91,[[["self"],[R[1193]]],["bool"]]],[11,"ne",E,E,91,[[["self"],[R[1193]]],["bool"]]],[11,"eq",E,E,92,[[["self"],[R[1195]]],["bool"]]],[11,"ne",E,E,92,[[["self"],[R[1195]]],["bool"]]],[11,"eq",E,E,95,[[["self"]],["bool"]]],[11,"eq",E,E,114,[[["self"],[R[1285]]],["bool"]]],[11,"ne",E,E,114,[[["self"],[R[1285]]],["bool"]]],[11,"eq",E,E,84,[[["self"],["fndecl"]],["bool"]]],[11,"ne",E,E,84,[[["self"],["fndecl"]],["bool"]]],[11,"eq",E,E,173,[[["self"],["fnarg"]],["bool"]]],[11,"ne",E,E,173,[[["self"],["fnarg"]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[1274]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[1274]]],["bool"]]],[11,"eq",E,E,82,[[["self"],["argself"]],["bool"]]],[11,"ne",E,E,82,[[["self"],["argself"]],["bool"]]],[11,"eq",E,E,81,[[["self"],[R[1135]]],["bool"]]],[11,"ne",E,E,81,[[["self"],[R[1135]]],["bool"]]],[11,"eq",E,E,125,[[["self"],["file"]],["bool"]]],[11,"ne",E,E,125,[[["self"],["file"]],["bool"]]],[11,"eq",E,E,126,[[["self"],[R[684]]],["bool"]]],[11,"eq",E,E,181,[[["self"],["lit"]],["bool"]]],[11,"ne",E,E,181,[[["self"],["lit"]],["bool"]]],[11,"eq",E,E,296,[[["self"]],["bool"]]],[11,"eq",E,E,297,[[["self"]],["bool"]]],[11,"eq",E,E,298,[[["self"]],["bool"]]],[11,"eq",E,E,299,[[["self"]],["bool"]]],[11,"eq",E,E,300,[[["self"]],["bool"]]],[11,"eq",E,E,301,[[["self"]],["bool"]]],[11,"eq",E,E,127,[[["self"]],["bool"]]],[11,"eq",E,E,128,[[["self"]],["bool"]]],[11,"eq",E,E,182,[[["self"],[R[990]]],["bool"]]],[11,"ne",E,E,182,[[["self"],[R[990]]],["bool"]]],[11,"eq",E,E,180,[[["self"],[R[772]]],["bool"]]],[11,"eq",E,E,179,[[["self"],[R[773]]],["bool"]]],[11,"eq",E,E,183,[[["self"],[R[866]]],["bool"]]],[11,"ne",E,E,183,[[["self"],[R[866]]],["bool"]]],[11,"eq",E,E,129,[[["self"]],["bool"]]],[11,"eq",E,E,133,[[["self"],[R[818]]],["bool"]]],[11,"ne",E,E,133,[[["self"],[R[818]]],["bool"]]],[11,"eq",E,E,184,[[["self"],["data"]],["bool"]]],[11,"ne",E,E,184,[[["self"],["data"]],["bool"]]],[11,"eq",E,E,131,[[["self"],[R[814]]],["bool"]]],[11,"ne",E,E,131,[[["self"],[R[814]]],["bool"]]],[11,"eq",E,E,130,[[["self"],[R[959]]],["bool"]]],[11,"ne",E,E,130,[[["self"],[R[959]]],["bool"]]],[11,"eq",E,E,132,[[["self"],[R[816]]],["bool"]]],[11,"ne",E,E,132,[[["self"],[R[816]]],["bool"]]],[11,"eq",E,E,185,[[["self"],["binop"]],["bool"]]],[11,"ne",E,E,185,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,186,[[["self"],["unop"]],["bool"]]],[11,"ne",E,E,186,[[["self"],["unop"]],["bool"]]],[11,"eq",E,E,189,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,189,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,147,[[["self"],[R[921]]],["bool"]]],[11,"ne",E,E,147,[[["self"],[R[921]]],["bool"]]],[11,"eq",E,E,136,[[["self"],[R[897]]],["bool"]]],[11,"ne",E,E,136,[[["self"],[R[897]]],["bool"]]],[11,"eq",E,E,145,[[["self"],[R[993]]],["bool"]]],[11,"ne",E,E,145,[[["self"],[R[993]]],["bool"]]],[11,"eq",E,E,146,[[["self"],[R[919]]],["bool"]]],[11,"ne",E,E,146,[[["self"],[R[919]]],["bool"]]],[11,"eq",E,E,137,[[["self"],[R[899]]],["bool"]]],[11,"ne",E,E,137,[[["self"],[R[899]]],["bool"]]],[11,"eq",E,E,142,[[["self"],[R[909]]],["bool"]]],[11,"ne",E,E,142,[[["self"],[R[909]]],["bool"]]],[11,"eq",E,E,149,[[["self"],[R[925]]],["bool"]]],[11,"ne",E,E,149,[[["self"],[R[925]]],["bool"]]],[11,"eq",E,E,144,[[["self"],[R[960]]],["bool"]]],[11,"ne",E,E,144,[[["self"],[R[960]]],["bool"]]],[11,"eq",E,E,148,[[["self"],[R[923]]],["bool"]]],[11,"ne",E,E,148,[[["self"],[R[923]]],["bool"]]],[11,"eq",E,E,139,[[["self"],[R[903]]],["bool"]]],[11,"ne",E,E,139,[[["self"],[R[903]]],["bool"]]],[11,"eq",E,E,143,[[["self"],[R[915]]],["bool"]]],[11,"ne",E,E,143,[[["self"],[R[915]]],["bool"]]],[11,"eq",E,E,138,[[["self"],[R[901]]],["bool"]]],[11,"ne",E,E,138,[[["self"],[R[901]]],["bool"]]],[11,"eq",E,E,140,[[["self"],[R[905]]],["bool"]]],[11,"ne",E,E,140,[[["self"],[R[905]]],["bool"]]],[11,"eq",E,E,141,[[["self"],[R[907]]],["bool"]]],[11,"ne",E,E,141,[[["self"],[R[907]]],["bool"]]],[11,"eq",E,E,150,[[["self"]],["bool"]]],[11,"eq",E,E,134,[[["self"],["abi"]],["bool"]]],[11,"ne",E,E,134,[[["self"],["abi"]],["bool"]]],[11,"eq",E,E,135,[[["self"],[R[802]]],["bool"]]],[11,"ne",E,E,135,[[["self"],[R[802]]],["bool"]]],[11,"eq",E,E,187,[[["self"],[R[804]]],["bool"]]],[11,"ne",E,E,187,[[["self"],[R[804]]],["bool"]]],[11,"eq",E,E,188,[[["self"],[R[889]]],["bool"]]],[11,"ne",E,E,188,[[["self"],[R[889]]],["bool"]]],[11,"eq",E,E,155,[[["self"],["path"]],["bool"]]],[11,"ne",E,E,155,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,156,[[["self"],[R[880]]],["bool"]]],[11,"ne",E,E,156,[[["self"],[R[880]]],["bool"]]],[11,"eq",E,E,191,[[["self"],[R[878]]],["bool"]]],[11,"ne",E,E,191,[[["self"],[R[878]]],["bool"]]],[11,"eq",E,E,190,[[["self"],[R[843]]],["bool"]]],[11,"ne",E,E,190,[[["self"],[R[843]]],["bool"]]],[11,"eq",E,E,151,[[["self"],[R[796]]],["bool"]]],[11,"ne",E,E,151,[[["self"],[R[796]]],["bool"]]],[11,"eq",E,E,152,[[["self"],[R[998]]],["bool"]]],[11,"ne",E,E,152,[[["self"],[R[998]]],["bool"]]],[11,"eq",E,E,153,[[["self"],[R[1275]]],["bool"]]],[11,"ne",E,E,153,[[["self"],[R[1275]]],["bool"]]],[11,"eq",E,E,154,[[["self"],[R[875]]],["bool"]]],[11,"ne",E,E,154,[[["self"],[R[875]]],["bool"]]],[11,"eq",E,E,157,[[["self"],["qself"]],["bool"]]],[11,"ne",E,E,157,[[["self"],["qself"]],["bool"]]],[11,"eq",R[942],E,303,[[["self"],["cursor"]],["bool"]]],[11,"ne",E,E,303,[[["self"],["cursor"]],["bool"]]],[11,"eq",R[943],E,306,[[["self"],[R[779]]],["bool"]]],[11,"ne",E,E,306,[[["self"],[R[779]]],["bool"]]],[11,"from","syn",E,315,[[["selfvalue"]],["ident"]]],[11,"from",E,E,315,[[["selftype"]],["ident"]]],[11,"from",E,E,315,[[["super"]],["ident"]]],[11,"from",E,E,315,[[["crate"]],["ident"]]],[11,"from",E,E,315,[[["extern"]],["ident"]]],[11,"from",E,E,315,[[[R[945]]],["ident"]]],[11,"from",E,E,159,[[["ident"]],["meta"]]],[11,"from",E,E,159,[[[R[952]]],["meta"]]],[11,"from",E,E,159,[[[R[871]]],["meta"]]],[11,"from",E,E,160,[[["meta"]],[R[873]]]],[11,"from",E,E,160,[[["lit"]],[R[873]]]],[11,"from",E,E,161,[[[R[839]]],["fields"]]],[11,"from",E,E,161,[[[R[841]]],["fields"]]],[11,"from",E,E,162,[[[R[932]]],[R[936]]]],[11,"from",E,E,162,[[[R[953]]],[R[936]]]],[11,"from",E,E,162,[[[R[934]]],[R[936]]]],[11,"from",E,E,163,[[["exprbox"]],["expr"]]],[11,"from",E,E,163,[[[R[961]]],["expr"]]],[11,"from",E,E,163,[[[R[962]]],["expr"]]],[11,"from",E,E,163,[[[R[954]]],["expr"]]],[11,"from",E,E,163,[[[R[963]]],["expr"]]],[11,"from",E,E,163,[[[R[964]]],["expr"]]],[11,"from",E,E,163,[[[R[821]]],["expr"]]],[11,"from",E,E,163,[[[R[833]]],["expr"]]],[11,"from",E,E,163,[[[R[992]]],["expr"]]],[11,"from",E,E,163,[[[R[955]]],["expr"]]],[11,"from",E,E,163,[[[R[965]]],["expr"]]],[11,"from",E,E,163,[[["exprlet"]],["expr"]]],[11,"from",E,E,163,[[["exprif"]],["expr"]]],[11,"from",E,E,163,[[[R[967]]],["expr"]]],[11,"from",E,E,163,[[[R[969]]],["expr"]]],[11,"from",E,E,163,[[[R[970]]],["expr"]]],[11,"from",E,E,163,[[[R[971]]],["expr"]]],[11,"from",E,E,163,[[[R[972]]],["expr"]]],[11,"from",E,E,163,[[[R[973]]],["expr"]]],[11,"from",E,E,163,[[[R[974]]],["expr"]]],[11,"from",E,E,163,[[[R[975]]],["expr"]]],[11,"from",E,E,163,[[[R[976]]],["expr"]]],[11,"from",E,E,163,[[[R[825]]],["expr"]]],[11,"from",E,E,163,[[[R[827]]],["expr"]]],[11,"from",E,E,163,[[[R[977]]],["expr"]]],[11,"from",E,E,163,[[[R[956]]],["expr"]]],[11,"from",E,E,163,[[[R[978]]],["expr"]]],[11,"from",E,E,163,[[[R[979]]],["expr"]]],[11,"from",E,E,163,[[[R[980]]],["expr"]]],[11,"from",E,E,163,[[[R[981]]],["expr"]]],[11,"from",E,E,163,[[[R[982]]],["expr"]]],[11,"from",E,E,163,[[[R[983]]],["expr"]]],[11,"from",E,E,163,[[[R[984]]],["expr"]]],[11,"from",E,E,163,[[[R[830]]],["expr"]]],[11,"from",E,E,163,[[[R[985]]],["expr"]]],[11,"from",E,E,163,[[["exprtry"]],["expr"]]],[11,"from",E,E,163,[[[R[1277]]],["expr"]]],[11,"from",E,E,163,[[[R[1165]]],["expr"]]],[11,"from",E,E,163,[[[R[987]]],["expr"]]],[11,"from",E,E,163,[[[R[835]]],["expr"]]],[11,"from",E,E,50,[[["usize"]],["index"]]],[11,"from",E,E,166,[[["patwild"]],["pat"]]],[11,"from",E,E,166,[[[R[1292]]],["pat"]]],[11,"from",E,E,166,[[[R[1278]]],["pat"]]],[11,"from",E,E,166,[[[R[1241]]],["pat"]]],[11,"from",E,E,166,[[["patpath"]],["pat"]]],[11,"from",E,E,166,[[[R[1296]]],["pat"]]],[11,"from",E,E,166,[[["patbox"]],["pat"]]],[11,"from",E,E,166,[[["patref"]],["pat"]]],[11,"from",E,E,166,[[["patlit"]],["pat"]]],[11,"from",E,E,166,[[[R[1294]]],["pat"]]],[11,"from",E,E,166,[[[R[1295]]],["pat"]]],[11,"from",E,E,166,[[[R[1293]]],["pat"]]],[11,"from",E,E,166,[[[R[1243]]],["pat"]]],[11,"from",E,E,169,[[[R[911]]],[R[845]]]],[11,"from",E,E,169,[[[R[852]]],[R[845]]]],[11,"from",E,E,169,[[[R[810]]],[R[845]]]],[11,"from",E,E,79,[[["ident"]],["self"]]],[11,"from",E,E,171,[[[R[892]]],[R[913]]]],[11,"from",E,E,171,[[[R[684]]],[R[913]]]],[11,"from",E,E,172,[[[R[886]]],[R[939]]]],[11,"from",E,E,172,[[[R[884]]],[R[939]]]],[11,"from",E,E,172,[[[R[882]]],[R[939]]]],[11,"from",E,E,176,[[[R[1207]]],["item"]]],[11,"from",E,E,176,[[["itemuse"]],["item"]]],[11,"from",E,E,176,[[[R[1271]]],["item"]]],[11,"from",E,E,176,[[[R[1279]]],["item"]]],[11,"from",E,E,176,[[["itemfn"]],["item"]]],[11,"from",E,E,176,[[["itemmod"]],["item"]]],[11,"from",E,E,176,[[[R[1210]]],["item"]]],[11,"from",E,E,176,[[[R[1291]]],["item"]]],[11,"from",E,E,176,[[[R[1205]]],["item"]]],[11,"from",E,E,176,[[[R[1272]]],["item"]]],[11,"from",E,E,176,[[[R[1289]]],["item"]]],[11,"from",E,E,176,[[[R[1280]]],["item"]]],[11,"from",E,E,176,[[[R[1281]]],["item"]]],[11,"from",E,E,176,[[[R[1219]]],["item"]]],[11,"from",E,E,176,[[[R[1290]]],["item"]]],[11,"from",E,E,176,[[[R[1282]]],["item"]]],[11,"from",E,E,176,[[[R[1273]]],["item"]]],[11,"from",E,E,176,[[[R[1224]]],["item"]]],[11,"from",E,E,176,[[[R[818]]],["item"]]],[11,"from",E,E,178,[[["usepath"]],["usetree"]]],[11,"from",E,E,178,[[["usename"]],["usetree"]]],[11,"from",E,E,178,[[[R[1283]]],["usetree"]]],[11,"from",E,E,178,[[["useglob"]],["usetree"]]],[11,"from",E,E,178,[[[R[1298]]],["usetree"]]],[11,"from",E,E,174,[[[R[1178]]],[R[1176]]]],[11,"from",E,E,174,[[[R[1182]]],[R[1176]]]],[11,"from",E,E,174,[[[R[1184]]],[R[1176]]]],[11,"from",E,E,174,[[[R[1180]]],[R[1176]]]],[11,"from",E,E,174,[[[R[1186]]],[R[1176]]]],[11,"from",E,E,177,[[[R[1249]]],[R[1284]]]],[11,"from",E,E,177,[[[R[1253]]],[R[1284]]]],[11,"from",E,E,177,[[[R[1255]]],[R[1284]]]],[11,"from",E,E,177,[[[R[1251]]],[R[1284]]]],[11,"from",E,E,177,[[[R[1257]]],[R[1284]]]],[11,"from",E,E,175,[[[R[1191]]],[R[1286]]]],[11,"from",E,E,175,[[[R[1197]]],[R[1286]]]],[11,"from",E,E,175,[[[R[1199]]],[R[1286]]]],[11,"from",E,E,175,[[[R[1193]]],[R[1286]]]],[11,"from",E,E,175,[[[R[1195]]],[R[1286]]]],[11,"from",E,E,175,[[[R[1201]]],[R[1286]]]],[11,"from",E,E,173,[[[R[1274]]],["fnarg"]]],[11,"from",E,E,173,[[["argself"]],["fnarg"]]],[11,"from",E,E,173,[[[R[1135]]],["fnarg"]]],[11,"from",E,E,173,[[["pat"]],["fnarg"]]],[11,"from",E,E,173,[[["type"]],["fnarg"]]],[11,"from",E,E,181,[[["litstr"]],["lit"]]],[11,"from",E,E,181,[[[R[857]]],["lit"]]],[11,"from",E,E,181,[[["litbyte"]],["lit"]]],[11,"from",E,E,181,[[["litchar"]],["lit"]]],[11,"from",E,E,181,[[["litint"]],["lit"]]],[11,"from",E,E,181,[[[R[958]]],["lit"]]],[11,"from",E,E,181,[[["litbool"]],["lit"]]],[11,"from",E,E,181,[[[R[863]]],["lit"]]],[11,"from",E,E,184,[[[R[814]]],["data"]]],[11,"from",E,E,184,[[[R[959]]],["data"]]],[11,"from",E,E,184,[[[R[816]]],["data"]]],[11,"from",E,E,189,[[[R[921]]],["type"]]],[11,"from",E,E,189,[[[R[897]]],["type"]]],[11,"from",E,E,189,[[[R[993]]],["type"]]],[11,"from",E,E,189,[[[R[919]]],["type"]]],[11,"from",E,E,189,[[[R[899]]],["type"]]],[11,"from",E,E,189,[[[R[909]]],["type"]]],[11,"from",E,E,189,[[[R[925]]],["type"]]],[11,"from",E,E,189,[[[R[960]]],["type"]]],[11,"from",E,E,189,[[[R[923]]],["type"]]],[11,"from",E,E,189,[[[R[903]]],["type"]]],[11,"from",E,E,189,[[[R[915]]],["type"]]],[11,"from",E,E,189,[[[R[901]]],["type"]]],[11,"from",E,E,189,[[[R[905]]],["type"]]],[11,"from",E,E,189,[[[R[907]]],["type"]]],[11,"from",E,E,189,[[[R[927]]],["type"]]],[11,"from",E,E,155,[[[T]],["self"]]],[11,"from",E,E,156,[[[T]],["self"]]],[11,"from",E,E,314,[[["lexerror"]],["self"]]],[11,"next",R[943],E,318,[[["self"]],[R[24]]]],[11,"next",E,E,319,[[["self"]],[R[24]]]],[11,"next",E,E,320,[[["self"]],[R[24]]]],[11,"next",E,E,321,[[["self"]],[R[24]]]],[11,"next",E,E,322,[[["self"]],[R[24]]]],[11,"next",E,E,323,[[["self"]],[R[24]]]],[11,R[13],R[941],E,192,[[["self"]]]],[11,R[13],E,E,245,[[["self"]]]],[11,R[13],E,E,247,[[["self"]]]],[11,R[13],E,E,250,[[["self"]]]],[11,R[13],E,E,251,[[["self"]]]],[11,R[13],E,E,252,[[["self"]]]],[11,R[13],E,E,254,[[["self"]]]],[11,R[13],E,E,256,[[["self"]]]],[11,R[13],E,E,257,[[["self"]]]],[11,R[13],E,E,259,[[["self"]]]],[11,R[13],E,E,260,[[["self"]]]],[11,R[13],E,E,264,[[["self"]]]],[11,R[13],E,E,267,[[["self"]]]],[11,R[13],E,E,269,[[["self"]]]],[11,R[13],E,E,272,[[["self"]]]],[11,R[13],E,E,275,[[["self"]]]],[11,R[13],E,E,276,[[["self"]]]],[11,R[13],E,E,279,[[["self"]]]],[11,R[13],E,E,282,[[["self"]]]],[11,R[13],E,E,287,[[["self"]]]],[11,R[13],E,E,288,[[["self"]]]],[11,R[13],E,E,290,[[["self"]]]],[11,"hash",E,E,192,[[["self"],["h"]]]],[11,"hash",E,E,193,[[["self"],["h"]]]],[11,"hash",E,E,194,[[["self"],["h"]]]],[11,"hash",E,E,195,[[["self"],["h"]]]],[11,"hash",E,E,196,[[["self"],["h"]]]],[11,"hash",E,E,197,[[["self"],["h"]]]],[11,"hash",E,E,198,[[["self"],["h"]]]],[11,"hash",E,E,199,[[["self"],["h"]]]],[11,"hash",E,E,200,[[["self"],["h"]]]],[11,"hash",E,E,201,[[["self"],["h"]]]],[11,"hash",E,E,202,[[["self"],["h"]]]],[11,"hash",E,E,203,[[["self"],["h"]]]],[11,"hash",E,E,204,[[["self"],["h"]]]],[11,"hash",E,E,205,[[["self"],["h"]]]],[11,"hash",E,E,206,[[["self"],["h"]]]],[11,"hash",E,E,207,[[["self"],["h"]]]],[11,"hash",E,E,208,[[["self"],["h"]]]],[11,"hash",E,E,209,[[["self"],["h"]]]],[11,"hash",E,E,210,[[["self"],["h"]]]],[11,"hash",E,E,211,[[["self"],["h"]]]],[11,"hash",E,E,212,[[["self"],["h"]]]],[11,"hash",E,E,213,[[["self"],["h"]]]],[11,"hash",E,E,214,[[["self"],["h"]]]],[11,"hash",E,E,215,[[["self"],["h"]]]],[11,"hash",E,E,216,[[["self"],["h"]]]],[11,"hash",E,E,217,[[["self"],["h"]]]],[11,"hash",E,E,218,[[["self"],["h"]]]],[11,"hash",E,E,219,[[["self"],["h"]]]],[11,"hash",E,E,220,[[["self"],["h"]]]],[11,"hash",E,E,221,[[["self"],["h"]]]],[11,"hash",E,E,222,[[["self"],["h"]]]],[11,"hash",E,E,223,[[["self"],["h"]]]],[11,"hash",E,E,224,[[["self"],["h"]]]],[11,"hash",E,E,225,[[["self"],["h"]]]],[11,"hash",E,E,226,[[["self"],["h"]]]],[11,"hash",E,E,227,[[["self"],["h"]]]],[11,"hash",E,E,228,[[["self"],["h"]]]],[11,"hash",E,E,229,[[["self"],["h"]]]],[11,"hash",E,E,230,[[["self"],["h"]]]],[11,"hash",E,E,231,[[["self"],["h"]]]],[11,"hash",E,E,232,[[["self"],["h"]]]],[11,"hash",E,E,233,[[["self"],["h"]]]],[11,"hash",E,E,234,[[["self"],["h"]]]],[11,"hash",E,E,235,[[["self"],["h"]]]],[11,"hash",E,E,236,[[["self"],["h"]]]],[11,"hash",E,E,237,[[["self"],["h"]]]],[11,"hash",E,E,238,[[["self"],["h"]]]],[11,"hash",E,E,239,[[["self"],["h"]]]],[11,"hash",E,E,240,[[["self"],["h"]]]],[11,"hash",E,E,241,[[["self"],["h"]]]],[11,"hash",E,E,242,[[["self"],["h"]]]],[11,"hash",E,E,243,[[["self"],["h"]]]],[11,"hash",E,E,244,[[["self"],["h"]]]],[11,"hash",E,E,245,[[["self"],["h"]]]],[11,"hash",E,E,246,[[["self"],["h"]]]],[11,"hash",E,E,247,[[["self"],["h"]]]],[11,"hash",E,E,248,[[["self"],["h"]]]],[11,"hash",E,E,249,[[["self"],["h"]]]],[11,"hash",E,E,250,[[["self"],["h"]]]],[11,"hash",E,E,251,[[["self"],["h"]]]],[11,"hash",E,E,252,[[["self"],["h"]]]],[11,"hash",E,E,253,[[["self"],["h"]]]],[11,"hash",E,E,254,[[["self"],["h"]]]],[11,"hash",E,E,255,[[["self"],["h"]]]],[11,"hash",E,E,256,[[["self"],["h"]]]],[11,"hash",E,E,257,[[["self"],["h"]]]],[11,"hash",E,E,258,[[["self"],["h"]]]],[11,"hash",E,E,259,[[["self"],["h"]]]],[11,"hash",E,E,260,[[["self"],["h"]]]],[11,"hash",E,E,261,[[["self"],["h"]]]],[11,"hash",E,E,262,[[["self"],["h"]]]],[11,"hash",E,E,263,[[["self"],["h"]]]],[11,"hash",E,E,264,[[["self"],["h"]]]],[11,"hash",E,E,265,[[["self"],["h"]]]],[11,"hash",E,E,266,[[["self"],["h"]]]],[11,"hash",E,E,267,[[["self"],["h"]]]],[11,"hash",E,E,268,[[["self"],["h"]]]],[11,"hash",E,E,269,[[["self"],["h"]]]],[11,"hash",E,E,270,[[["self"],["h"]]]],[11,"hash",E,E,271,[[["self"],["h"]]]],[11,"hash",E,E,272,[[["self"],["h"]]]],[11,"hash",E,E,273,[[["self"],["h"]]]],[11,"hash",E,E,274,[[["self"],["h"]]]],[11,"hash",E,E,275,[[["self"],["h"]]]],[11,"hash",E,E,276,[[["self"],["h"]]]],[11,"hash",E,E,277,[[["self"],["h"]]]],[11,"hash",E,E,278,[[["self"],["h"]]]],[11,"hash",E,E,279,[[["self"],["h"]]]],[11,"hash",E,E,280,[[["self"],["h"]]]],[11,"hash",E,E,281,[[["self"],["h"]]]],[11,"hash",E,E,282,[[["self"],["h"]]]],[11,"hash",E,E,283,[[["self"],["h"]]]],[11,"hash",E,E,284,[[["self"],["h"]]]],[11,"hash",E,E,285,[[["self"],["h"]]]],[11,"hash",E,E,286,[[["self"],["h"]]]],[11,"hash",E,E,287,[[["self"],["h"]]]],[11,"hash",E,E,288,[[["self"],["h"]]]],[11,"hash",E,E,289,[[["self"],["h"]]]],[11,"hash",E,E,290,[[["self"],["h"]]]],[11,"hash",E,E,291,[[["self"],["h"]]]],[11,"hash",E,E,292,[[["self"],["h"]]]],[11,"hash",E,E,293,[[["self"],["h"]]]],[11,"hash",E,E,294,[[["self"],["h"]]]],[11,"hash","syn",E,0,[[["self"],["h"]]]],[11,"hash",E,E,158,[[["self"],["__h"]]]],[11,"hash",E,E,159,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,160,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,161,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,162,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,163,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["h"]]]],[11,"hash",E,E,164,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,165,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,168,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,166,[[["self"],["__h"]]]],[11,"hash",E,E,70,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,65,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,69,[[["self"],["h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,167,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,73,[[["self"],["__h"]]]],[11,"hash",E,E,169,[[["self"],["__h"]]]],[11,"hash",E,E,79,[[["self"],["__h"]]]],[11,"hash",E,E,74,[[["self"],["__h"]]]],[11,"hash",E,E,72,[[["self"],["__h"]]]],[11,"hash",E,E,316,[[["self"],["__h"]]]],[11,"hash",E,E,295,[[["self"],["__h"]]]],[11,"hash",E,E,317,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",E,E,171,[[["self"],["__h"]]]],[11,"hash",E,E,78,[[["self"],["__h"]]]],[11,"hash",E,E,170,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",E,E,172,[[["self"],["__h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,75,[[["self"],["__h"]]]],[11,"hash",E,E,176,[[["self"],["__h"]]]],[11,"hash",E,E,99,[[["self"],["__h"]]]],[11,"hash",E,E,112,[[["self"],["__h"]]]],[11,"hash",E,E,106,[[["self"],["__h"]]]],[11,"hash",E,E,96,[[["self"],["__h"]]]],[11,"hash",E,E,100,[[["self"],["__h"]]]],[11,"hash",E,E,105,[[["self"],["__h"]]]],[11,"hash",E,E,101,[[["self"],["__h"]]]],[11,"hash",E,E,110,[[["self"],["__h"]]]],[11,"hash",E,E,98,[[["self"],["__h"]]]],[11,"hash",E,E,107,[[["self"],["__h"]]]],[11,"hash",E,E,97,[[["self"],["__h"]]]],[11,"hash",E,E,111,[[["self"],["__h"]]]],[11,"hash",E,E,108,[[["self"],["__h"]]]],[11,"hash",E,E,109,[[["self"],["__h"]]]],[11,"hash",E,E,102,[[["self"],["__h"]]]],[11,"hash",E,E,103,[[["self"],["__h"]]]],[11,"hash",E,E,104,[[["self"],["h"]]]],[11,"hash",E,E,113,[[["self"],["h"]]]],[11,"hash",E,E,178,[[["self"],["__h"]]]],[11,"hash",E,E,123,[[["self"],["__h"]]]],[11,"hash",E,E,122,[[["self"],["__h"]]]],[11,"hash",E,E,124,[[["self"],["__h"]]]],[11,"hash",E,E,120,[[["self"],["__h"]]]],[11,"hash",E,E,121,[[["self"],["__h"]]]],[11,"hash",E,E,174,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,88,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,89,[[["self"],["h"]]]],[11,"hash",E,E,177,[[["self"],["__h"]]]],[11,"hash",E,E,115,[[["self"],["__h"]]]],[11,"hash",E,E,117,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",E,E,116,[[["self"],["__h"]]]],[11,"hash",E,E,119,[[["self"],["h"]]]],[11,"hash",E,E,175,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",E,E,93,[[["self"],["__h"]]]],[11,"hash",E,E,94,[[["self"],["__h"]]]],[11,"hash",E,E,91,[[["self"],["__h"]]]],[11,"hash",E,E,92,[[["self"],["__h"]]]],[11,"hash",E,E,95,[[["self"],["h"]]]],[11,"hash",E,E,114,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,173,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",E,E,125,[[["self"],["__h"]]]],[11,"hash",E,E,126,[[["self"],["h"]]]],[11,"hash",E,E,181,[[["self"],["__h"]]]],[11,"hash",E,E,296,[[["self"],["h"]]]],[11,"hash",E,E,297,[[["self"],["h"]]]],[11,"hash",E,E,298,[[["self"],["h"]]]],[11,"hash",E,E,299,[[["self"],["h"]]]],[11,"hash",E,E,300,[[["self"],["h"]]]],[11,"hash",E,E,301,[[["self"],["h"]]]],[11,"hash",E,E,127,[[["self"],["h"]]]],[11,"hash",E,E,128,[[["self"],["h"]]]],[11,"hash",E,E,182,[[["self"],["__h"]]]],[11,"hash",E,E,180,[[["self"],["__h"]]]],[11,"hash",E,E,179,[[["self"],["__h"]]]],[11,"hash",E,E,183,[[["self"],["__h"]]]],[11,"hash",E,E,129,[[["self"],["h"]]]],[11,"hash",E,E,133,[[["self"],["__h"]]]],[11,"hash",E,E,184,[[["self"],["__h"]]]],[11,"hash",E,E,131,[[["self"],["__h"]]]],[11,"hash",E,E,130,[[["self"],["__h"]]]],[11,"hash",E,E,132,[[["self"],["__h"]]]],[11,"hash",E,E,185,[[["self"],["__h"]]]],[11,"hash",E,E,186,[[["self"],["__h"]]]],[11,"hash",E,E,189,[[["self"],["__h"]]]],[11,"hash",E,E,147,[[["self"],["__h"]]]],[11,"hash",E,E,136,[[["self"],["__h"]]]],[11,"hash",E,E,145,[[["self"],["__h"]]]],[11,"hash",E,E,146,[[["self"],["__h"]]]],[11,"hash",E,E,137,[[["self"],["__h"]]]],[11,"hash",E,E,142,[[["self"],["__h"]]]],[11,"hash",E,E,149,[[["self"],["__h"]]]],[11,"hash",E,E,144,[[["self"],["__h"]]]],[11,"hash",E,E,148,[[["self"],["__h"]]]],[11,"hash",E,E,139,[[["self"],["__h"]]]],[11,"hash",E,E,143,[[["self"],["__h"]]]],[11,"hash",E,E,138,[[["self"],["__h"]]]],[11,"hash",E,E,140,[[["self"],["__h"]]]],[11,"hash",E,E,141,[[["self"],["__h"]]]],[11,"hash",E,E,150,[[["self"],["h"]]]],[11,"hash",E,E,134,[[["self"],["__h"]]]],[11,"hash",E,E,135,[[["self"],["__h"]]]],[11,"hash",E,E,187,[[["self"],["__h"]]]],[11,"hash",E,E,188,[[["self"],["__h"]]]],[11,"hash",E,E,155,[[["self"],["__h"]]]],[11,"hash",E,E,156,[[["self"],["__h"]]]],[11,"hash",E,E,191,[[["self"],["__h"]]]],[11,"hash",E,E,190,[[["self"],["__h"]]]],[11,"hash",E,E,151,[[["self"],["__h"]]]],[11,"hash",E,E,152,[[["self"],["__h"]]]],[11,"hash",E,E,153,[[["self"],["__h"]]]],[11,"hash",E,E,154,[[["self"],["__h"]]]],[11,"hash",E,E,157,[[["self"],["__h"]]]],[11,"hash",R[943],E,306,[[["self"],["__h"]]]],[11,"deref",R[941],E,192,[[["self"]]]],[11,"deref",E,E,245,[[["self"]]]],[11,"deref",E,E,247,[[["self"]]]],[11,"deref",E,E,250,[[["self"]]]],[11,"deref",E,E,251,[[["self"]]]],[11,"deref",E,E,252,[[["self"]]]],[11,"deref",E,E,254,[[["self"]]]],[11,"deref",E,E,256,[[["self"]]]],[11,"deref",E,E,257,[[["self"]]]],[11,"deref",E,E,259,[[["self"]]]],[11,"deref",E,E,260,[[["self"]]]],[11,"deref",E,E,264,[[["self"]]]],[11,"deref",E,E,267,[[["self"]]]],[11,"deref",E,E,269,[[["self"]]]],[11,"deref",E,E,272,[[["self"]]]],[11,"deref",E,E,275,[[["self"]]]],[11,"deref",E,E,276,[[["self"]]]],[11,"deref",E,E,279,[[["self"]]]],[11,"deref",E,E,282,[[["self"]]]],[11,"deref",E,E,287,[[["self"]]]],[11,"deref",E,E,288,[[["self"]]]],[11,"deref",E,E,290,[[["self"]]]],[11,"deref",R[1269],E,312,[[["self"]]]],[11,"index",R[943],E,306,[[["self"],["usize"]]]],[11,R[2049],E,E,306,[[["self"],["usize"]]]],[11,"fmt","syn",E,126,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1269],E,313,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","syn",E,314,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[941],E,192,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,193,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,194,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,195,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,196,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,197,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,198,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,199,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,200,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,201,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,202,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,203,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,204,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,205,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,206,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,207,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,208,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,209,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,210,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,211,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,212,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,213,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,214,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,215,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,216,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,217,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,218,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,219,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,220,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,221,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,222,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,223,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,224,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,225,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,226,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,227,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,228,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,229,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,230,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,231,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,232,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,233,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,234,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,235,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,236,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,237,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,238,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,239,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,240,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,241,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,242,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,243,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,244,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,245,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,246,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,247,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,248,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,249,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,250,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,251,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,252,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,253,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,254,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,255,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,256,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,257,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,258,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,259,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,260,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,261,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,262,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,263,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,264,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,265,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,266,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,267,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,268,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,269,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,270,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,271,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,272,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,273,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,274,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,275,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,276,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,277,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,278,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,279,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,280,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,281,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,282,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,283,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,284,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,285,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,286,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,287,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,288,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,289,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,290,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,291,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,292,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,293,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,294,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","syn",E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,158,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,159,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,160,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,161,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,162,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,163,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,45,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,32,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,39,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,164,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,57,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,165,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,55,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,52,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,168,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,56,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,166,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,70,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,59,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,66,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,68,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,62,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,67,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,58,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,64,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,60,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,63,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,65,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,61,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,69,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,51,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,167,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,53,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,73,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,169,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,79,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,74,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,72,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,316,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,295,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,317,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,71,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,171,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,78,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,170,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,80,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,172,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,77,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,76,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,75,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,176,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,99,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,112,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,106,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,96,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,100,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,105,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,101,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,110,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,98,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,107,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,97,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,111,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,108,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,109,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,102,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,103,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,104,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,113,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,178,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,123,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,122,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,124,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,120,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,121,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,174,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,85,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,87,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,88,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,86,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,89,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,177,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,115,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,117,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,118,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,116,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,119,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,175,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,90,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,93,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,94,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,91,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,92,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,95,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,114,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,84,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,173,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,83,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,82,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,81,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,125,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,126,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,181,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,296,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,297,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,298,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,299,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,300,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,301,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,127,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,128,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,182,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,180,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,179,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,129,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,183,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,133,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,184,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,131,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,130,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,132,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,185,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,186,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,189,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,147,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,136,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,145,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,146,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,137,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,142,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,149,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,144,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,148,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,139,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,143,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,138,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,140,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,141,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,150,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,134,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,135,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,187,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,188,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,155,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,156,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,191,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,190,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,151,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,152,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,153,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,154,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,157,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[943],E,306,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",R[1269],E,313,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","syn",E,314,[[["self"],[R[14]]],[R[2]]]],[11,R[212],R[943],E,306,[[[R[156]]],["self"]]],[11,R[212],E,E,306,[[[R[156]]],["self"]]],[11,R[93],"syn",E,314,[[["self"]],["str"]]],[11,R[944],R[941],E,192,[[["self"],[R[203]]]]],[11,R[944],E,E,193,[[["self"],[R[203]]]]],[11,R[944],E,E,194,[[["self"],[R[203]]]]],[11,R[944],E,E,195,[[["self"],[R[203]]]]],[11,R[944],E,E,196,[[["self"],[R[203]]]]],[11,R[944],E,E,197,[[["self"],[R[203]]]]],[11,R[944],E,E,198,[[["self"],[R[203]]]]],[11,R[944],E,E,199,[[["self"],[R[203]]]]],[11,R[944],E,E,200,[[["self"],[R[203]]]]],[11,R[944],E,E,201,[[["self"],[R[203]]]]],[11,R[944],E,E,202,[[["self"],[R[203]]]]],[11,R[944],E,E,203,[[["self"],[R[203]]]]],[11,R[944],E,E,204,[[["self"],[R[203]]]]],[11,R[944],E,E,205,[[["self"],[R[203]]]]],[11,R[944],E,E,206,[[["self"],[R[203]]]]],[11,R[944],E,E,207,[[["self"],[R[203]]]]],[11,R[944],E,E,208,[[["self"],[R[203]]]]],[11,R[944],E,E,209,[[["self"],[R[203]]]]],[11,R[944],E,E,210,[[["self"],[R[203]]]]],[11,R[944],E,E,211,[[["self"],[R[203]]]]],[11,R[944],E,E,212,[[["self"],[R[203]]]]],[11,R[944],E,E,213,[[["self"],[R[203]]]]],[11,R[944],E,E,214,[[["self"],[R[203]]]]],[11,R[944],E,E,215,[[["self"],[R[203]]]]],[11,R[944],E,E,216,[[["self"],[R[203]]]]],[11,R[944],E,E,217,[[["self"],[R[203]]]]],[11,R[944],E,E,218,[[["self"],[R[203]]]]],[11,R[944],E,E,219,[[["self"],[R[203]]]]],[11,R[944],E,E,220,[[["self"],[R[203]]]]],[11,R[944],E,E,221,[[["self"],[R[203]]]]],[11,R[944],E,E,222,[[["self"],[R[203]]]]],[11,R[944],E,E,223,[[["self"],[R[203]]]]],[11,R[944],E,E,224,[[["self"],[R[203]]]]],[11,R[944],E,E,225,[[["self"],[R[203]]]]],[11,R[944],E,E,226,[[["self"],[R[203]]]]],[11,R[944],E,E,227,[[["self"],[R[203]]]]],[11,R[944],E,E,228,[[["self"],[R[203]]]]],[11,R[944],E,E,229,[[["self"],[R[203]]]]],[11,R[944],E,E,230,[[["self"],[R[203]]]]],[11,R[944],E,E,231,[[["self"],[R[203]]]]],[11,R[944],E,E,232,[[["self"],[R[203]]]]],[11,R[944],E,E,233,[[["self"],[R[203]]]]],[11,R[944],E,E,234,[[["self"],[R[203]]]]],[11,R[944],E,E,235,[[["self"],[R[203]]]]],[11,R[944],E,E,236,[[["self"],[R[203]]]]],[11,R[944],E,E,237,[[["self"],[R[203]]]]],[11,R[944],E,E,238,[[["self"],[R[203]]]]],[11,R[944],E,E,239,[[["self"],[R[203]]]]],[11,R[944],E,E,240,[[["self"],[R[203]]]]],[11,R[944],E,E,241,[[["self"],[R[203]]]]],[11,R[944],E,E,242,[[["self"],[R[203]]]]],[11,R[944],E,E,243,[[["self"],[R[203]]]]],[11,R[944],E,E,244,[[["self"],[R[203]]]]],[11,R[944],E,E,245,[[["self"],[R[203]]]]],[11,R[944],E,E,246,[[["self"],[R[203]]]]],[11,R[944],E,E,247,[[["self"],[R[203]]]]],[11,R[944],E,E,248,[[["self"],[R[203]]]]],[11,R[944],E,E,249,[[["self"],[R[203]]]]],[11,R[944],E,E,250,[[["self"],[R[203]]]]],[11,R[944],E,E,251,[[["self"],[R[203]]]]],[11,R[944],E,E,252,[[["self"],[R[203]]]]],[11,R[944],E,E,253,[[["self"],[R[203]]]]],[11,R[944],E,E,254,[[["self"],[R[203]]]]],[11,R[944],E,E,255,[[["self"],[R[203]]]]],[11,R[944],E,E,256,[[["self"],[R[203]]]]],[11,R[944],E,E,257,[[["self"],[R[203]]]]],[11,R[944],E,E,258,[[["self"],[R[203]]]]],[11,R[944],E,E,259,[[["self"],[R[203]]]]],[11,R[944],E,E,260,[[["self"],[R[203]]]]],[11,R[944],E,E,261,[[["self"],[R[203]]]]],[11,R[944],E,E,262,[[["self"],[R[203]]]]],[11,R[944],E,E,263,[[["self"],[R[203]]]]],[11,R[944],E,E,264,[[["self"],[R[203]]]]],[11,R[944],E,E,265,[[["self"],[R[203]]]]],[11,R[944],E,E,266,[[["self"],[R[203]]]]],[11,R[944],E,E,267,[[["self"],[R[203]]]]],[11,R[944],E,E,268,[[["self"],[R[203]]]]],[11,R[944],E,E,269,[[["self"],[R[203]]]]],[11,R[944],E,E,270,[[["self"],[R[203]]]]],[11,R[944],E,E,271,[[["self"],[R[203]]]]],[11,R[944],E,E,272,[[["self"],[R[203]]]]],[11,R[944],E,E,273,[[["self"],[R[203]]]]],[11,R[944],E,E,274,[[["self"],[R[203]]]]],[11,R[944],E,E,275,[[["self"],[R[203]]]]],[11,R[944],E,E,276,[[["self"],[R[203]]]]],[11,R[944],E,E,277,[[["self"],[R[203]]]]],[11,R[944],E,E,278,[[["self"],[R[203]]]]],[11,R[944],E,E,279,[[["self"],[R[203]]]]],[11,R[944],E,E,280,[[["self"],[R[203]]]]],[11,R[944],E,E,281,[[["self"],[R[203]]]]],[11,R[944],E,E,282,[[["self"],[R[203]]]]],[11,R[944],E,E,283,[[["self"],[R[203]]]]],[11,R[944],E,E,284,[[["self"],[R[203]]]]],[11,R[944],E,E,285,[[["self"],[R[203]]]]],[11,R[944],E,E,286,[[["self"],[R[203]]]]],[11,R[944],E,E,287,[[["self"],[R[203]]]]],[11,R[944],E,E,288,[[["self"],[R[203]]]]],[11,R[944],E,E,289,[[["self"],[R[203]]]]],[11,R[944],E,E,290,[[["self"],[R[203]]]]],[11,R[944],"syn",E,159,[[["self"],[R[203]]]]],[11,R[944],E,E,160,[[["self"],[R[203]]]]],[11,R[944],E,E,0,[[["self"],[R[203]]]]],[11,R[944],E,E,1,[[["self"],[R[203]]]]],[11,R[944],E,E,2,[[["self"],[R[203]]]]],[11,R[944],E,E,161,[[["self"],[R[203]]]]],[11,R[944],E,E,162,[[["self"],[R[203]]]]],[11,R[944],E,E,6,[[["self"],[R[203]]]]],[11,R[944],E,E,4,[[["self"],[R[203]]]]],[11,R[944],E,E,5,[[["self"],[R[203]]]]],[11,R[944],E,E,3,[[["self"],[R[203]]]]],[11,R[944],E,E,8,[[["self"],[R[203]]]]],[11,R[944],E,E,7,[[["self"],[R[203]]]]],[11,R[944],E,E,9,[[["self"],[R[203]]]]],[11,R[944],E,E,163,[[["self"],[R[203]]]]],[11,R[944],E,E,166,[[["self"],[R[203]]]]],[11,R[944],E,E,16,[[["self"],[R[203]]]]],[11,R[944],E,E,26,[[["self"],[R[203]]]]],[11,R[944],E,E,10,[[["self"],[R[203]]]]],[11,R[944],E,E,18,[[["self"],[R[203]]]]],[11,R[944],E,E,33,[[["self"],[R[203]]]]],[11,R[944],E,E,57,[[["self"],[R[203]]]]],[11,R[944],E,E,165,[[["self"],[R[203]]]]],[11,R[944],E,E,43,[[["self"],[R[203]]]]],[11,R[944],E,E,14,[[["self"],[R[203]]]]],[11,R[944],E,E,45,[[["self"],[R[203]]]]],[11,R[944],E,E,29,[[["self"],[R[203]]]]],[11,R[944],E,E,19,[[["self"],[R[203]]]]],[11,R[944],E,E,44,[[["self"],[R[203]]]]],[11,R[944],E,E,28,[[["self"],[R[203]]]]],[11,R[944],E,E,25,[[["self"],[R[203]]]]],[11,R[944],E,E,48,[[["self"],[R[203]]]]],[11,R[944],E,E,23,[[["self"],[R[203]]]]],[11,R[944],E,E,30,[[["self"],[R[203]]]]],[11,R[944],E,E,32,[[["self"],[R[203]]]]],[11,R[944],E,E,13,[[["self"],[R[203]]]]],[11,R[944],E,E,42,[[["self"],[R[203]]]]],[11,R[944],E,E,49,[[["self"],[R[203]]]]],[11,R[944],E,E,20,[[["self"],[R[203]]]]],[11,R[944],E,E,46,[[["self"],[R[203]]]]],[11,R[944],E,E,15,[[["self"],[R[203]]]]],[11,R[944],E,E,11,[[["self"],[R[203]]]]],[11,R[944],E,E,12,[[["self"],[R[203]]]]],[11,R[944],E,E,22,[[["self"],[R[203]]]]],[11,R[944],E,E,164,[[["self"],[R[203]]]]],[11,R[944],E,E,50,[[["self"],[R[203]]]]],[11,R[944],E,E,27,[[["self"],[R[203]]]]],[11,R[944],E,E,36,[[["self"],[R[203]]]]],[11,R[944],E,E,35,[[["self"],[R[203]]]]],[11,R[944],E,E,37,[[["self"],[R[203]]]]],[11,R[944],E,E,17,[[["self"],[R[203]]]]],[11,R[944],E,E,21,[[["self"],[R[203]]]]],[11,R[944],E,E,39,[[["self"],[R[203]]]]],[11,R[944],E,E,31,[[["self"],[R[203]]]]],[11,R[944],E,E,40,[[["self"],[R[203]]]]],[11,R[944],E,E,38,[[["self"],[R[203]]]]],[11,R[944],E,E,24,[[["self"],[R[203]]]]],[11,R[944],E,E,34,[[["self"],[R[203]]]]],[11,R[944],E,E,41,[[["self"],[R[203]]]]],[11,R[944],E,E,47,[[["self"],[R[203]]]]],[11,R[944],E,E,55,[[["self"],[R[203]]]]],[11,R[944],E,E,54,[[["self"],[R[203]]]]],[11,R[944],E,E,51,[[["self"],[R[203]]]]],[11,R[944],E,E,70,[[["self"],[R[203]]]]],[11,R[944],E,E,59,[[["self"],[R[203]]]]],[11,R[944],E,E,66,[[["self"],[R[203]]]]],[11,R[944],E,E,68,[[["self"],[R[203]]]]],[11,R[944],E,E,62,[[["self"],[R[203]]]]],[11,R[944],E,E,67,[[["self"],[R[203]]]]],[11,R[944],E,E,58,[[["self"],[R[203]]]]],[11,R[944],E,E,64,[[["self"],[R[203]]]]],[11,R[944],E,E,60,[[["self"],[R[203]]]]],[11,R[944],E,E,63,[[["self"],[R[203]]]]],[11,R[944],E,E,65,[[["self"],[R[203]]]]],[11,R[944],E,E,61,[[["self"],[R[203]]]]],[11,R[944],E,E,69,[[["self"],[R[203]]]]],[11,R[944],E,E,53,[[["self"],[R[203]]]]],[11,R[944],E,E,52,[[["self"],[R[203]]]]],[11,R[944],E,E,168,[[["self"],[R[203]]]]],[11,R[944],E,E,56,[[["self"],[R[203]]]]],[11,R[944],E,E,169,[[["self"],[R[203]]]]],[11,R[944],E,E,171,[[["self"],[R[203]]]]],[11,R[944],E,E,172,[[["self"],[R[203]]]]],[11,R[944],E,E,73,[[["self"],[R[203]]]]],[11,R[944],E,E,316,[[["self"],[R[203]]]]],[11,R[944],E,E,295,[[["self"],[R[203]]]]],[11,R[944],E,E,317,[[["self"],[R[203]]]]],[11,R[944],E,E,71,[[["self"],[R[203]]]]],[11,R[944],E,E,74,[[["self"],[R[203]]]]],[11,R[944],E,E,79,[[["self"],[R[203]]]]],[11,R[944],E,E,78,[[["self"],[R[203]]]]],[11,R[944],E,E,170,[[["self"],[R[203]]]]],[11,R[944],E,E,72,[[["self"],[R[203]]]]],[11,R[944],E,E,80,[[["self"],[R[203]]]]],[11,R[944],E,E,77,[[["self"],[R[203]]]]],[11,R[944],E,E,76,[[["self"],[R[203]]]]],[11,R[944],E,E,75,[[["self"],[R[203]]]]],[11,R[944],E,E,176,[[["self"],[R[203]]]]],[11,R[944],E,E,178,[[["self"],[R[203]]]]],[11,R[944],E,E,174,[[["self"],[R[203]]]]],[11,R[944],E,E,177,[[["self"],[R[203]]]]],[11,R[944],E,E,175,[[["self"],[R[203]]]]],[11,R[944],E,E,173,[[["self"],[R[203]]]]],[11,R[944],E,E,99,[[["self"],[R[203]]]]],[11,R[944],E,E,112,[[["self"],[R[203]]]]],[11,R[944],E,E,106,[[["self"],[R[203]]]]],[11,R[944],E,E,96,[[["self"],[R[203]]]]],[11,R[944],E,E,100,[[["self"],[R[203]]]]],[11,R[944],E,E,105,[[["self"],[R[203]]]]],[11,R[944],E,E,101,[[["self"],[R[203]]]]],[11,R[944],E,E,110,[[["self"],[R[203]]]]],[11,R[944],E,E,98,[[["self"],[R[203]]]]],[11,R[944],E,E,97,[[["self"],[R[203]]]]],[11,R[944],E,E,107,[[["self"],[R[203]]]]],[11,R[944],E,E,111,[[["self"],[R[203]]]]],[11,R[944],E,E,108,[[["self"],[R[203]]]]],[11,R[944],E,E,109,[[["self"],[R[203]]]]],[11,R[944],E,E,102,[[["self"],[R[203]]]]],[11,R[944],E,E,103,[[["self"],[R[203]]]]],[11,R[944],E,E,104,[[["self"],[R[203]]]]],[11,R[944],E,E,113,[[["self"],[R[203]]]]],[11,R[944],E,E,123,[[["self"],[R[203]]]]],[11,R[944],E,E,122,[[["self"],[R[203]]]]],[11,R[944],E,E,124,[[["self"],[R[203]]]]],[11,R[944],E,E,120,[[["self"],[R[203]]]]],[11,R[944],E,E,121,[[["self"],[R[203]]]]],[11,R[944],E,E,115,[[["self"],[R[203]]]]],[11,R[944],E,E,117,[[["self"],[R[203]]]]],[11,R[944],E,E,118,[[["self"],[R[203]]]]],[11,R[944],E,E,116,[[["self"],[R[203]]]]],[11,R[944],E,E,119,[[["self"],[R[203]]]]],[11,R[944],E,E,90,[[["self"],[R[203]]]]],[11,R[944],E,E,93,[[["self"],[R[203]]]]],[11,R[944],E,E,94,[[["self"],[R[203]]]]],[11,R[944],E,E,91,[[["self"],[R[203]]]]],[11,R[944],E,E,92,[[["self"],[R[203]]]]],[11,R[944],E,E,95,[[["self"],[R[203]]]]],[11,R[944],E,E,85,[[["self"],[R[203]]]]],[11,R[944],E,E,87,[[["self"],[R[203]]]]],[11,R[944],E,E,88,[[["self"],[R[203]]]]],[11,R[944],E,E,86,[[["self"],[R[203]]]]],[11,R[944],E,E,89,[[["self"],[R[203]]]]],[11,R[944],E,E,114,[[["self"],[R[203]]]]],[11,R[944],E,E,83,[[["self"],[R[203]]]]],[11,R[944],E,E,82,[[["self"],[R[203]]]]],[11,R[944],E,E,81,[[["self"],[R[203]]]]],[11,R[944],E,E,125,[[["self"],[R[203]]]]],[11,R[944],E,E,126,[[["self"],[R[203]]]]],[11,R[944],E,E,181,[[["self"],[R[203]]]]],[11,R[944],E,E,296,[[["self"],[R[203]]]]],[11,R[944],E,E,297,[[["self"],[R[203]]]]],[11,R[944],E,E,298,[[["self"],[R[203]]]]],[11,R[944],E,E,299,[[["self"],[R[203]]]]],[11,R[944],E,E,300,[[["self"],[R[203]]]]],[11,R[944],E,E,301,[[["self"],[R[203]]]]],[11,R[944],E,E,127,[[["self"],[R[203]]]]],[11,R[944],E,E,128,[[["self"],[R[203]]]]],[11,R[944],E,E,129,[[["self"],[R[203]]]]],[11,R[944],E,E,133,[[["self"],[R[203]]]]],[11,R[944],E,E,185,[[["self"],[R[203]]]]],[11,R[944],E,E,186,[[["self"],[R[203]]]]],[11,R[944],E,E,189,[[["self"],[R[203]]]]],[11,R[944],E,E,147,[[["self"],[R[203]]]]],[11,R[944],E,E,136,[[["self"],[R[203]]]]],[11,R[944],E,E,145,[[["self"],[R[203]]]]],[11,R[944],E,E,146,[[["self"],[R[203]]]]],[11,R[944],E,E,137,[[["self"],[R[203]]]]],[11,R[944],E,E,142,[[["self"],[R[203]]]]],[11,R[944],E,E,149,[[["self"],[R[203]]]]],[11,R[944],E,E,144,[[["self"],[R[203]]]]],[11,R[944],E,E,148,[[["self"],[R[203]]]]],[11,R[944],E,E,139,[[["self"],[R[203]]]]],[11,R[944],E,E,138,[[["self"],[R[203]]]]],[11,R[944],E,E,143,[[["self"],[R[203]]]]],[11,R[944],E,E,140,[[["self"],[R[203]]]]],[11,R[944],E,E,141,[[["self"],[R[203]]]]],[11,R[944],E,E,150,[[["self"],[R[203]]]]],[11,R[944],E,E,188,[[["self"],[R[203]]]]],[11,R[944],E,E,135,[[["self"],[R[203]]]]],[11,R[944],E,E,187,[[["self"],[R[203]]]]],[11,R[944],E,E,134,[[["self"],[R[203]]]]],[11,R[944],E,E,155,[[["self"],[R[203]]]]],[11,R[944],E,E,156,[[["self"],[R[203]]]]],[11,R[944],E,E,191,[[["self"],[R[203]]]]],[11,R[944],E,E,190,[[["self"],[R[203]]]]],[11,R[944],E,E,151,[[["self"],[R[203]]]]],[11,R[944],E,E,152,[[["self"],[R[203]]]]],[11,R[944],E,E,153,[[["self"],[R[203]]]]],[11,R[944],E,E,154,[[["self"],[R[203]]]]],[11,R[944],R[943],E,306,[[["self"],[R[203]]]]],[11,R[944],E,E,305,[[["self"],[R[203]]]]],[11,"new","syn",R[994],315,[[["str"],["span"]],["ident"]]],[11,"span",E,R[995],315,[[["self"]],["span"]]],[11,R[205],E,R[996],315,[[["self"],["span"]]]],[11,R[794],R[997],E,308,[[["self"],["abi"]]]],[11,R[795],E,E,308,[[["self"],[R[796]]]]],[11,R[1134],E,E,308,[[["self"],[R[1135]]]]],[11,R[1136],E,E,308,[[["self"],["argself"]]]],[11,R[1137],E,E,308,[[["self"],[R[1274]]]]],[11,"visit_arm",E,E,308,[[["self"],["arm"]]]],[11,R[797],E,E,308,[[["self"],[R[798]]]]],[11,R[799],E,E,308,[[["self"],[R[800]]]]],[11,R[801],E,E,308,[[["self"],[R[802]]]]],[11,R[803],E,E,308,[[["self"],[R[804]]]]],[11,R[805],E,E,308,[[["self"],["binop"]]]],[11,R[806],E,E,308,[[["self"],[R[998]]]]],[11,R[1138],E,E,308,[[["self"],["block"]]]],[11,R[807],E,E,308,[[["self"],[R[808]]]]],[11,R[809],E,E,308,[[["self"],[R[810]]]]],[11,R[1139],E,E,308,[[["self"],[R[1275]]]]],[11,R[811],E,E,308,[[["self"],["data"]]]],[11,R[812],E,E,308,[[["self"],[R[959]]]]],[11,R[813],E,E,308,[[["self"],[R[814]]]]],[11,R[815],E,E,308,[[["self"],[R[816]]]]],[11,R[817],E,E,308,[[["self"],[R[818]]]]],[11,R[819],E,E,308,[[["self"],["expr"]]]],[11,R[1140],E,E,308,[[["self"],[R[962]]]]],[11,R[1141],E,E,308,[[["self"],[R[975]]]]],[11,R[1142],E,E,308,[[["self"],[R[976]]]]],[11,R[1143],E,E,308,[[["self"],[R[1277]]]]],[11,R[820],E,E,308,[[["self"],[R[821]]]]],[11,R[1144],E,E,308,[[["self"],[R[974]]]]],[11,R[1145],E,E,308,[[["self"],["exprbox"]]]],[11,R[1146],E,E,308,[[["self"],[R[979]]]]],[11,R[822],E,E,308,[[["self"],[R[954]]]]],[11,R[823],E,E,308,[[["self"],[R[955]]]]],[11,R[1147],E,E,308,[[["self"],[R[972]]]]],[11,R[1148],E,E,308,[[["self"],[R[980]]]]],[11,R[824],E,E,308,[[["self"],[R[825]]]]],[11,R[1149],E,E,308,[[["self"],[R[969]]]]],[11,R[1150],E,E,308,[[["self"],[R[985]]]]],[11,R[1151],E,E,308,[[["self"],["exprif"]]]],[11,R[1152],E,E,308,[[["self"],[R[961]]]]],[11,R[826],E,E,308,[[["self"],[R[827]]]]],[11,R[1153],E,E,308,[[["self"],["exprlet"]]]],[11,R[828],E,E,308,[[["self"],[R[992]]]]],[11,R[1154],E,E,308,[[["self"],[R[970]]]]],[11,R[1155],E,E,308,[[["self"],[R[982]]]]],[11,R[1156],E,E,308,[[["self"],[R[971]]]]],[11,R[1157],E,E,308,[[["self"],[R[963]]]]],[11,R[829],E,E,308,[[["self"],[R[830]]]]],[11,R[831],E,E,308,[[["self"],[R[956]]]]],[11,R[1158],E,E,308,[[["self"],[R[977]]]]],[11,R[1159],E,E,308,[[["self"],[R[978]]]]],[11,R[1160],E,E,308,[[["self"],[R[984]]]]],[11,R[1161],E,E,308,[[["self"],[R[981]]]]],[11,R[1162],E,E,308,[[["self"],[R[983]]]]],[11,R[1163],E,E,308,[[["self"],["exprtry"]]]],[11,R[1164],E,E,308,[[["self"],[R[1165]]]]],[11,R[1166],E,E,308,[[["self"],[R[964]]]]],[11,R[1167],E,E,308,[[["self"],[R[965]]]]],[11,R[832],E,E,308,[[["self"],[R[833]]]]],[11,R[1168],E,E,308,[[["self"],[R[973]]]]],[11,R[834],E,E,308,[[["self"],[R[835]]]]],[11,R[1169],E,E,308,[[["self"],[R[967]]]]],[11,R[1170],E,E,308,[[["self"],[R[987]]]]],[11,R[836],E,E,308,[[["self"],["field"]]]],[11,R[1171],E,E,308,[[["self"],["fieldpat"]]]],[11,R[1172],E,E,308,[[["self"],[R[1270]]]]],[11,R[837],E,E,308,[[["self"],["fields"]]]],[11,R[838],E,E,308,[[["self"],[R[839]]]]],[11,R[840],E,E,308,[[["self"],[R[841]]]]],[11,R[1287],E,E,308,[[["self"],["file"]]]],[11,R[1173],E,E,308,[[["self"],["fnarg"]]]],[11,R[1174],E,E,308,[[["self"],["fndecl"]]]],[11,R[1175],E,E,308,[[["self"],[R[1176]]]]],[11,R[1177],E,E,308,[[["self"],[R[1178]]]]],[11,R[1179],E,E,308,[[["self"],[R[1180]]]]],[11,R[1181],E,E,308,[[["self"],[R[1182]]]]],[11,R[1183],E,E,308,[[["self"],[R[1184]]]]],[11,R[1185],E,E,308,[[["self"],[R[1186]]]]],[11,R[842],E,E,308,[[["self"],[R[843]]]]],[11,R[1187],E,E,308,[[["self"],[R[1188]]]]],[11,R[844],E,E,308,[[["self"],[R[845]]]]],[11,R[846],E,E,308,[[["self"],[R[847]]]]],[11,R[1189],E,E,308,[[["self"],[R[1286]]]]],[11,R[1190],E,E,308,[[["self"],[R[1191]]]]],[11,R[1192],E,E,308,[[["self"],[R[1193]]]]],[11,R[1194],E,E,308,[[["self"],[R[1195]]]]],[11,R[1196],E,E,308,[[["self"],[R[1197]]]]],[11,R[1198],E,E,308,[[["self"],[R[1199]]]]],[11,R[1200],E,E,308,[[["self"],[R[1201]]]]],[11,R[849],E,E,308,[[["self"],["index"]]]],[11,R[1288],E,E,308,[[["self"],["item"]]]],[11,R[1202],E,E,308,[[["self"],[R[1279]]]]],[11,R[1203],E,E,308,[[["self"],[R[1289]]]]],[11,R[1204],E,E,308,[[["self"],[R[1205]]]]],[11,R[1206],E,E,308,[[["self"],[R[1207]]]]],[11,R[1208],E,E,308,[[["self"],["itemfn"]]]],[11,R[1209],E,E,308,[[["self"],[R[1210]]]]],[11,R[1211],E,E,308,[[["self"],[R[1290]]]]],[11,R[1212],E,E,308,[[["self"],[R[1282]]]]],[11,R[1213],E,E,308,[[["self"],[R[1273]]]]],[11,R[1214],E,E,308,[[["self"],["itemmod"]]]],[11,R[1215],E,E,308,[[["self"],[R[1271]]]]],[11,R[1216],E,E,308,[[["self"],[R[1272]]]]],[11,R[1217],E,E,308,[[["self"],[R[1281]]]]],[11,R[1218],E,E,308,[[["self"],[R[1219]]]]],[11,R[1220],E,E,308,[[["self"],[R[1291]]]]],[11,R[1221],E,E,308,[[["self"],[R[1280]]]]],[11,R[1222],E,E,308,[[["self"],["itemuse"]]]],[11,R[1223],E,E,308,[[["self"],[R[1224]]]]],[11,R[1225],E,E,308,[[["self"],["label"]]]],[11,R[850],E,E,308,[[["self"],[R[684]]]]],[11,R[851],E,E,308,[[["self"],[R[852]]]]],[11,R[853],E,E,308,[[["self"],["lit"]]]],[11,R[854],E,E,308,[[["self"],["litbool"]]]],[11,R[855],E,E,308,[[["self"],["litbyte"]]]],[11,R[856],E,E,308,[[["self"],[R[857]]]]],[11,R[858],E,E,308,[[["self"],["litchar"]]]],[11,R[859],E,E,308,[[["self"],[R[958]]]]],[11,R[860],E,E,308,[[["self"],["litint"]]]],[11,R[861],E,E,308,[[["self"],["litstr"]]]],[11,R[862],E,E,308,[[["self"],[R[863]]]]],[11,R[1226],E,E,308,[[["self"],["local"]]]],[11,R[864],E,E,308,[[["self"],["macro"]]]],[11,R[865],E,E,308,[[["self"],[R[866]]]]],[11,R[867],E,E,308,[[["self"],["member"]]]],[11,R[868],E,E,308,[[["self"],["meta"]]]],[11,R[869],E,E,308,[[["self"],[R[952]]]]],[11,R[870],E,E,308,[[["self"],[R[871]]]]],[11,R[1227],E,E,308,[[["self"],[R[1285]]]]],[11,R[1228],E,E,308,[[["self"],[R[1229]]]]],[11,R[872],E,E,308,[[["self"],[R[873]]]]],[11,R[874],E,E,308,[[["self"],[R[875]]]]],[11,"visit_pat",E,E,308,[[["self"],["pat"]]]],[11,R[1230],E,E,308,[[["self"],["patbox"]]]],[11,R[1231],E,E,308,[[["self"],[R[1292]]]]],[11,R[1232],E,E,308,[[["self"],["patlit"]]]],[11,R[1233],E,E,308,[[["self"],[R[1293]]]]],[11,R[1234],E,E,308,[[["self"],["patpath"]]]],[11,R[1235],E,E,308,[[["self"],[R[1294]]]]],[11,R[1236],E,E,308,[[["self"],["patref"]]]],[11,R[1237],E,E,308,[[["self"],[R[1295]]]]],[11,R[1238],E,E,308,[[["self"],[R[1278]]]]],[11,R[1239],E,E,308,[[["self"],[R[1296]]]]],[11,R[1240],E,E,308,[[["self"],[R[1241]]]]],[11,R[1242],E,E,308,[[["self"],[R[1243]]]]],[11,R[1244],E,E,308,[[["self"],["patwild"]]]],[11,R[876],E,E,308,[[["self"],["path"]]]],[11,R[877],E,E,308,[[["self"],[R[878]]]]],[11,R[879],E,E,308,[[["self"],[R[880]]]]],[11,R[881],E,E,308,[[["self"],[R[882]]]]],[11,R[883],E,E,308,[[["self"],[R[884]]]]],[11,R[885],E,E,308,[[["self"],[R[886]]]]],[11,R[887],E,E,308,[[["self"],["qself"]]]],[11,R[1245],E,E,308,[[["self"],[R[1246]]]]],[11,R[888],E,E,308,[[["self"],[R[889]]]]],[11,R[1297],E,E,308,[[["self"],["stmt"]]]],[11,R[891],E,E,308,[[["self"],[R[892]]]]],[11,R[893],E,E,308,[[["self"],[R[894]]]]],[11,R[1247],E,E,308,[[["self"],[R[1284]]]]],[11,R[1248],E,E,308,[[["self"],[R[1249]]]]],[11,R[1250],E,E,308,[[["self"],[R[1251]]]]],[11,R[1252],E,E,308,[[["self"],[R[1253]]]]],[11,R[1254],E,E,308,[[["self"],[R[1255]]]]],[11,R[1256],E,E,308,[[["self"],[R[1257]]]]],[11,R[895],E,E,308,[[["self"],["type"]]]],[11,R[896],E,E,308,[[["self"],[R[897]]]]],[11,R[898],E,E,308,[[["self"],[R[899]]]]],[11,R[900],E,E,308,[[["self"],[R[901]]]]],[11,R[902],E,E,308,[[["self"],[R[903]]]]],[11,R[904],E,E,308,[[["self"],[R[905]]]]],[11,R[906],E,E,308,[[["self"],[R[907]]]]],[11,R[908],E,E,308,[[["self"],[R[909]]]]],[11,R[910],E,E,308,[[["self"],[R[911]]]]],[11,R[912],E,E,308,[[["self"],[R[913]]]]],[11,R[914],E,E,308,[[["self"],[R[915]]]]],[11,R[916],E,E,308,[[["self"],[R[960]]]]],[11,R[917],E,E,308,[[["self"],[R[993]]]]],[11,R[918],E,E,308,[[["self"],[R[919]]]]],[11,R[920],E,E,308,[[["self"],[R[921]]]]],[11,R[922],E,E,308,[[["self"],[R[923]]]]],[11,R[924],E,E,308,[[["self"],[R[925]]]]],[11,R[926],E,E,308,[[["self"],[R[927]]]]],[11,R[928],E,E,308,[[["self"],["unop"]]]],[11,R[1258],E,E,308,[[["self"],["useglob"]]]],[11,R[1259],E,E,308,[[["self"],[R[1298]]]]],[11,R[1260],E,E,308,[[["self"],["usename"]]]],[11,R[1261],E,E,308,[[["self"],["usepath"]]]],[11,R[1262],E,E,308,[[["self"],[R[1283]]]]],[11,R[1263],E,E,308,[[["self"],["usetree"]]]],[11,R[929],E,E,308,[[["self"],[R[999]]]]],[11,R[930],E,E,308,[[["self"],[R[953]]]]],[11,R[931],E,E,308,[[["self"],[R[932]]]]],[11,R[933],E,E,308,[[["self"],[R[934]]]]],[11,R[935],E,E,308,[[["self"],[R[936]]]]],[11,R[937],E,E,308,[[["self"],[R[792]]]]],[11,R[938],E,E,308,[[["self"],[R[939]]]]],[11,R[890],E,E,308,[[["self"],["span"]]]],[11,R[848],E,E,308,[[["self"],["ident"]]]],[11,"peek",R[1269],R[1299],324,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[1267],324,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,R[1000]],[3,"Field"],[3,R[1001]],[3,R[1002]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[1003]],[3,"ExprArray"],[3,"ExprAssign"],[3,R[1031]],[3,"ExprAsync"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,R[1032]],[3,R[1033]],[3,"ExprField"],[3,R[1034]],[3,"ExprGroup"],[3,"ExprIf"],[3,R[1035]],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[1036]],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,R[1037]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[1300]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,R[1004]],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,R[1301]],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,R[1302]],[3,R[1303]],[3,"PatWild"],[3,R[1005]],[3,"ConstParam"],[3,"Generics"],[3,R[1006]],[3,R[1007]],[3,R[1008]],[3,R[1009]],[3,"TraitBound"],[3,"TypeParam"],[3,R[1010]],[3,R[1304]],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,R[1305]],[3,R[1306]],[3,R[1307]],[3,R[1308]],[3,R[1309]],[3,R[1310]],[3,R[1311]],[3,R[1312]],[3,R[1313]],[3,R[1314]],[3,R[1315]],[3,"ItemConst"],[3,"ItemEnum"],[3,R[1316]],[3,R[1317]],[3,"ItemFn"],[3,R[1318]],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,R[1319]],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,R[1320]],[3,"MethodSig"],[3,R[1321]],[3,R[1322]],[3,R[1323]],[3,R[1324]],[3,R[1325]],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,R[738]],[3,"LitBool"],[3,R[1011]],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[1012]],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[1013]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[1014]],[3,"TypeSlice"],[3,R[1015]],[3,"TypeTuple"],[3,R[1016]],[3,R[1017]],[3,"Binding"],[3,R[1326]],[3,R[1018]],[3,"Path"],[3,R[1019]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,R[1327]],[4,"Pat"],[4,R[1328]],[4,"Stmt"],[4,R[1020]],[4,R[1021]],[4,R[1022]],[4,R[1023]],[4,"FnArg"],[4,R[1329]],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,R[1024]],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,R[1025]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,R[1026]],[4,"ReturnType"],[4,"Type"],[4,R[1027]],[4,R[1028]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,R[1109]],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[1029]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[1030]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[778]],[8,"Spanned"],[8,"Visit"],[8,R[1330]],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[1331]],[3,"Error"],[3,"Ident"],[3,R[1039]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[201]],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["tiff"]={"doc":R[2106],"i":[[4,"TiffError","tiff","Tiff error kinds.",N,N],[13,R[2107],E,R[2108],0,N],[13,R[2109],E,R[2110],0,N],[13,"IoError",E,R[2111],0,N],[4,R[1585],E,E,N,N],[13,"TiffSignatureNotFound",E,E,1,N],[13,"TiffSignatureInvalid",E,E,1,N],[13,"ImageFileDirectoryNotFound",E,E,1,N],[13,"InconsistentSizesEncountered",E,E,1,N],[13,"InvalidTag",E,E,1,N],[13,"RequiredTagNotFound",E,E,1,N],[13,"UnknownPredictor",E,E,1,N],[13,"UnsignedIntegerExpected",E,E,1,N],[4,R[1586],E,E,N,N],[13,"HorizontalPredictor",E,E,2,N],[13,"InterpretationWithBits",E,E,2,N],[13,"UnknownInterpretation",E,E,2,N],[13,"UnknownCompressionMethod",E,E,2,N],[13,"UnsupportedCompressionMethod",E,E,2,N],[13,"UnsupportedSampleDepth",E,E,2,N],[13,"UnsupportedColorType",E,E,2,N],[13,"UnsupportedBitsPerChannel",E,E,2,N],[13,"UnsupportedPlanarConfig",E,E,2,N],[13,"UnsupportedDataType",E,E,2,N],[4,R[1587],E,R[2112],N,N],[13,"Gray",E,R[2113],3,N],[13,"RGB",E,R[2114],3,N],[13,"Palette",E,R[2115],3,N],[13,"GrayA",E,R[2116],3,N],[13,"RGBA",E,R[2117],3,N],[13,"CMYK",E,"Pixel is CMYK",3,N],[0,"decoder",E,E,N,N],[3,"Decoder",R[1575],"The representation of a TIFF decoder",N,N],[4,R[1588],E,"Result of a decoding process",N,N],[13,"U8",E,"A vector of unsigned bytes",4,N],[13,"U16",E,"A vector of unsigned words",4,N],[4,R[1572],E,E,N,N],[13,"WhiteIsZero",E,E,5,N],[13,"BlackIsZero",E,E,5,N],[13,"RGB",E,E,5,N],[13,"RGBPalette",E,E,5,N],[13,"TransparencyMask",E,E,5,N],[13,"CMYK",E,E,5,N],[13,"YCbCr",E,E,5,N],[13,"CIELab",E,E,5,N],[4,R[1589],E,E,N,N],[13,"None",E,E,6,N],[13,"Huffman",E,E,6,N],[13,"Fax3",E,E,6,N],[13,"Fax4",E,E,6,N],[13,"LZW",E,E,6,N],[13,"JPEG",E,E,6,N],[13,"PackBits",E,E,6,N],[4,R[1573],E,E,N,N],[13,"Chunky",E,E,7,N],[13,"Planar",E,E,7,N],[0,"ifd",E,"Function for reading TIFF tags",N,N],[3,"Entry",R[1579],E,N,N],[4,"Tag",E,"TIFF tag",N,N],[13,"Artist",E,E,8,N],[13,"BitsPerSample",E,E,8,N],[13,"CellLength",E,E,8,N],[13,"CellWidth",E,E,8,N],[13,"ColorMap",E,E,8,N],[13,R[607],E,E,8,N],[13,"Copyright",E,E,8,N],[13,"DateTime",E,E,8,N],[13,"ExtraSamples",E,E,8,N],[13,"FillOrder",E,E,8,N],[13,"FreeByteCounts",E,E,8,N],[13,"FreeOffsets",E,E,8,N],[13,"GrayResponseCurve",E,E,8,N],[13,"GrayResponseUnit",E,E,8,N],[13,"HostComputer",E,E,8,N],[13,"ImageDescription",E,E,8,N],[13,"ImageLength",E,E,8,N],[13,"ImageWidth",E,E,8,N],[13,"Make",E,E,8,N],[13,"MaxSampleValue",E,E,8,N],[13,"MinSampleValue",E,E,8,N],[13,"Model",E,E,8,N],[13,"NewSubfileType",E,E,8,N],[13,"Orientation",E,E,8,N],[13,R[1572],E,E,8,N],[13,R[1573],E,E,8,N],[13,"ResolutionUnit",E,E,8,N],[13,"RowsPerStrip",E,E,8,N],[13,"SamplesPerPixel",E,E,8,N],[13,"Software",E,E,8,N],[13,"StripByteCounts",E,E,8,N],[13,"StripOffsets",E,E,8,N],[13,"SubfileType",E,E,8,N],[13,"Threshholding",E,E,8,N],[13,"XResolution",E,E,8,N],[13,"YResolution",E,E,8,N],[13,"Predictor",E,E,8,N],[13,"Unknown",E,E,8,N],[4,"Type",E,E,N,N],[13,"BYTE",E,E,9,N],[13,"ASCII",E,E,9,N],[13,"SHORT",E,E,9,N],[13,"LONG",E,E,9,N],[13,"RATIONAL",E,E,9,N],[4,"Value",E,E,N,N],[13,"Unsigned",E,E,10,N],[13,"List",E,E,10,N],[13,"Rational",E,E,10,N],[13,"Ascii",E,E,10,N],[6,"Directory",E,"Type representing an Image File Directory",N,N],[11,"from_u16",E,E,8,[[["u16"]],["tag"]]],[11,"into_u32",E,E,10,[[],[[R[1574],["u32"]],["u32"]]]],[11,"into_u32_vec",E,E,10,[[],[["vec",["u32"]],[R[1574],["vec"]]]]],[11,"new",E,E,11,[[["u32"],["type"]],["entry"]]],[11,"val",E,E,11,[[["self"],["decoder"]],[["value"],[R[1574],["value"]]]]],[11,"new",R[1575],R[1961],12,[[["r"]],[["decoder"],[R[1574],["decoder"]]]]],[11,R[1999],E,E,12,[[["self"]],[R[1574]]]],[11,R[1564],E,E,12,[[["self"]],[[R[1574],[R[1564]]],[R[1564]]]]],[11,"init",E,"Initializes the decoder.",12,[[],[["decoder"],[R[1574],["decoder"]]]]],[11,"next_image",E,"Reads in the next image. If there is no further image in…",12,[[],[["decoder"],[R[1574],["decoder"]]]]],[11,"more_images",E,"Returns `true` if there is at least one more image…",12,[[["self"]],["bool"]]],[11,"byte_order",E,"Returns the byte_order",12,[[["self"]],["byteorder"]]],[11,"read_short",E,"Reads a TIFF short value",12,[[["self"]],[["u16"],["error"],[R[2],["u16","error"]]]]],[11,"read_long",E,"Reads a TIFF long value",12,[[["self"]],[[R[2],["u32","error"]],["u32"],["error"]]]],[11,"read_string",E,"Reads a string",12,[[["self"],["usize"]],[[R[1576]],[R[81]],[R[2],[R[81],R[1576]]]]]],[11,"read_offset",E,"Reads a TIFF IFA offset/value field",12,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"goto_offset",E,"Moves the cursor to the specified offset",12,[[["self"],["u32"]],[R[2]]]],[11,"find_tag",E,"Tries to retrieve a tag. Return `Ok(None)` if the tag is…",12,[[["self"],["tag"]],[[R[24],["value"]],[R[1574],[R[24]]]]]],[11,"find_tag_u32",E,R[1577],12,[[["self"],["tag"]],[[R[1574],[R[24]]],[R[24],["u32"]]]]],[11,"find_tag_u32_vec",E,R[1577],12,[[["self"],["tag"]],[[R[1574],[R[24]]],[R[24],["vec"]]]]],[11,"get_tag",E,"Tries to retrieve a tag. Returns an error if the tag is…",12,[[["self"],["tag"]],[["value"],[R[1574],["value"]]]]],[11,"get_tag_u32",E,R[1577],12,[[["self"],["tag"]],[[R[1574],["u32"]],["u32"]]]],[11,"get_tag_u32_vec",E,R[1577],12,[[["self"],["tag"]],[["vec",["u32"]],[R[1574],["vec"]]]]],[11,R[2028],E,"Decodes the entire image and return it as a Vector",12,[[["self"]],[[R[1578]],[R[1574],[R[1578]]]]]],[6,"TiffResult","tiff",R[2118],N,N],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[R[81]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[82],E,E,1,[[["self"]],[R[81]]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[82],E,E,2,[[["self"]],[R[81]]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"into",E,E,3,[[],[U]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",R[1575],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[[U]],[R[2]]]],[11,R[9],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",R[1579],E,11,[[],[U]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[[U]],[R[2]]]],[11,R[9],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"into",E,E,8,[[],[U]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[[U]],[R[2]]]],[11,R[9],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"into",E,E,9,[[],[U]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[[U]],[R[2]]]],[11,R[9],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"into",E,E,10,[[],[U]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[[U]],[R[2]]]],[11,R[9],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"clone",E,E,8,[[["self"]],["tag"]]],[11,"clone",E,E,9,[[["self"]],["type"]]],[11,"clone",E,E,10,[[["self"]],["value"]]],[11,"clone",E,E,11,[[["self"]],["entry"]]],[11,"clone",R[1575],E,5,[[["self"]],[R[1580]]]],[11,"clone",E,E,6,[[["self"]],[R[1581]]]],[11,"clone",E,E,7,[[["self"]],[R[1582]]]],[11,"clone","tiff",E,1,[[["self"]],[R[1583]]]],[11,"clone",E,E,2,[[["self"]],[R[1584]]]],[11,"clone",E,E,3,[[["self"]],[R[1564]]]],[11,"eq",R[1579],E,8,[[["self"],["tag"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["tag"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["value"]],["bool"]]],[11,"eq",R[1575],E,5,[[["self"],[R[1580]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1581]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[1582]]],["bool"]]],[11,"eq","tiff",E,1,[[["self"],[R[1583]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1583]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1584]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1584]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1564]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1564]]],["bool"]]],[11,"from",E,E,0,[[["error"]],["tifferror"]]],[11,"from",E,E,0,[[[R[1576]]],["tifferror"]]],[11,"hash",R[1579],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",R[1575],E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash","tiff",E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[1579],E,8,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[14]]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[1575],E,4,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[14]]],[R[2]]]],[11,"fmt","tiff",E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[24],["error"]],["error"]]]],[11,R[1047],R[1579],E,9,[[["i64"]],[R[24]]]],[11,R[1048],E,E,9,[[["u64"]],[R[24]]]],[11,R[1047],R[1575],E,5,[[["i64"]],[R[24]]]],[11,R[1048],E,E,5,[[["u64"]],[R[24]]]],[11,R[1047],E,E,6,[[["i64"]],[R[24]]]],[11,R[1048],E,E,6,[[["u64"]],[R[24]]]],[11,R[1047],E,E,7,[[["i64"]],[R[24]]]],[11,R[1048],E,E,7,[[["u64"]],[R[24]]]]],"p":[[4,"TiffError"],[4,R[1585]],[4,R[1586]],[4,R[1587]],[4,R[1588]],[4,R[1572]],[4,R[1589]],[4,R[1573]],[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[3,"Decoder"]]};
searchIndex["time"]={"doc":"Simple time handling.","i":[[3,"Duration","time",R[1463],N,N],[3,R[593],E,"Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec",E,"A record specifying a time value in seconds and…",N,N],[12,"sec",E,E,0,N],[12,"nsec",E,E,0,N],[3,R[591],E,"An opaque structure representing a moment in time.",N,N],[3,R[592],E,"A structure representing a moment in time.",N,N],[3,"Tm",E,"Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec",E,"Seconds after the minute - [0, 60]",1,N],[12,"tm_min",E,"Minutes after the hour - [0, 59]",1,N],[12,"tm_hour",E,"Hours after midnight - [0, 23]",1,N],[12,"tm_mday",E,"Day of the month - [1, 31]",1,N],[12,"tm_mon",E,"Months since January - [0, 11]",1,N],[12,"tm_year",E,"Years since 1900",1,N],[12,"tm_wday",E,"Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday",E,"Days since January 1 - [0, 365]",1,N],[12,"tm_isdst",E,"Daylight Saving Time flag.",1,N],[12,"tm_utcoff",E,"Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec",E,"Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt",E,"A wrapper around a `Tm` and format string that implements…",N,N],[4,R[590],E,E,N,N],[13,"InvalidSecond",E,E,2,N],[13,"InvalidMinute",E,E,2,N],[13,"InvalidHour",E,E,2,N],[13,"InvalidDay",E,E,2,N],[13,"InvalidMonth",E,E,2,N],[13,"InvalidYear",E,E,2,N],[13,"InvalidDayOfWeek",E,E,2,N],[13,"InvalidDayOfMonth",E,E,2,N],[13,"InvalidDayOfYear",E,E,2,N],[13,"InvalidZoneOffset",E,E,2,N],[13,"InvalidTime",E,E,2,N],[13,"InvalidSecondsSinceEpoch",E,E,2,N],[13,"MissingFormatConverter",E,E,2,N],[13,"InvalidFormatSpecifier",E,E,2,N],[13,"UnexpectedCharacter",E,E,2,N],[5,"strptime",E,"Parses the time from the string according to the format…",N,[[["str"]],[[R[578]],[R[2],["tm",R[578]]],["tm"]]]],[5,"get_time",E,"Returns the current time as a `timespec` containing the…",N,[[],[R[306]]]],[5,"precise_time_ns",E,R[579],N,[[],["u64"]]],[5,"precise_time_s",E,R[579],N,[[],["f64"]]],[5,"tzset",E,E,N,[[]]],[5,"empty_tm",E,E,N,[[],["tm"]]],[5,"at_utc",E,"Returns the specified time in UTC",N,[[[R[306]]],["tm"]]],[5,"now_utc",E,"Returns the current time in UTC",N,[[],["tm"]]],[5,"at",E,"Returns the specified time in the local timezone",N,[[[R[306]]],["tm"]]],[5,"now",E,"Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime",E,R[587],N,[[["str"],["tm"]],[[R[2],[R[81],R[578]]],[R[81]],[R[578]]]]],[11,"weeks",E,R[1464],3,[[["i64"]],[R[580]]]],[11,"days",E,R[1465],3,[[["i64"]],[R[580]]]],[11,"hours",E,R[1466],3,[[["i64"]],[R[580]]]],[11,"minutes",E,R[1467],3,[[["i64"]],[R[580]]]],[11,"seconds",E,R[1468],3,[[["i64"]],[R[580]]]],[11,R[1469],E,R[1470],3,[[["i64"]],[R[580]]]],[11,R[1471],E,R[1472],3,[[["i64"]],[R[580]]]],[11,R[1473],E,R[1474],3,[[["i64"]],[R[580]]]],[11,"span",E,R[1475],3,[[["f"]],[R[580]]]],[11,"num_weeks",E,R[1476],3,[[["self"]],["i64"]]],[11,"num_days",E,R[1477],3,[[["self"]],["i64"]]],[11,"num_hours",E,R[1478],3,[[["self"]],["i64"]]],[11,R[1479],E,R[1480],3,[[["self"]],["i64"]]],[11,R[1481],E,R[1482],3,[[["self"]],["i64"]]],[11,R[1483],E,R[1484],3,[[["self"]],["i64"]]],[11,R[1485],E,R[1486],3,[[["self"]],[[R[24],["i64"]],["i64"]]]],[11,R[1487],E,R[1488],3,[[["self"]],[[R[24],["i64"]],["i64"]]]],[11,R[581],E,R[1489],3,[[["self"],[R[580]]],[[R[24],[R[580]]],[R[580]]]]],[11,R[582],E,R[1490],3,[[["self"],[R[580]]],[[R[24],[R[580]]],[R[580]]]]],[11,R[468],E,R[1491],3,[[],[R[580]]]],[11,R[469],E,R[1492],3,[[],[R[580]]]],[11,"zero",E,R[1493],3,[[],[R[580]]]],[11,"is_zero",E,R[1494],3,[[["self"]],["bool"]]],[11,"from_std",E,R[1495],3,[[[R[584]]],[[R[580]],[R[583]],[R[2],[R[580],R[583]]]]]],[11,"to_std",E,R[1496],3,[[["self"]],[[R[583]],[R[2],[R[584],R[583]]],[R[584]]]]],[11,"new",E,E,0,[[["i64"],["i32"]],[R[306]]]],[11,"now",E,"Returns a `PreciseTime` representing the current moment in…",4,[[],[R[585]]]],[11,"to",E,"Returns a `Duration` representing the span of time from…",4,[[["self"],[R[585]]],[R[580]]]],[11,"now",E,"Returns a `SteadyTime` representing the current moment in…",5,[[],[R[588]]]],[11,"to_timespec",E,"Convert time to the seconds from January 1, 1970",1,[[["self"]],[R[306]]]],[11,"to_local",E,"Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc",E,"Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime",E,R[586],1,[[["self"]],["tmfmt"]]],[11,"asctime",E,R[586],1,[[["self"]],["tmfmt"]]],[11,"strftime",E,R[587],1,[[["self"],["str"]],[[R[578]],["tmfmt"],[R[2],["tmfmt",R[578]]]]]],[11,"rfc822",E,"Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z",E,"Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339",E,"Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[R[81]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[[U]],[R[2]]]],[11,R[9],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[R[81]]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[[U]],[R[2]]]],[11,R[9],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"into",E,E,0,[[],[U]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[[U]],[R[2]]]],[11,R[9],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"into",E,E,4,[[],[U]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[[U]],[R[2]]]],[11,R[9],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[R[81]]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[[U]],[R[2]]]],[11,R[9],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"into",E,E,1,[[],[U]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[[U]],[R[2]]]],[11,R[9],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[R[81]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[[U]],[R[2]]]],[11,R[9],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"into",E,E,2,[[],[U]]],[11,R[82],E,E,2,[[["self"]],[R[81]]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[[U]],[R[2]]]],[11,R[9],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"clone",E,E,3,[[["self"]],[R[580]]]],[11,"clone",E,E,6,[[["self"]],[R[583]]]],[11,"clone",E,E,0,[[["self"]],[R[306]]]],[11,"clone",E,E,4,[[["self"]],[R[585]]]],[11,"clone",E,E,5,[[["self"]],[R[588]]]],[11,"clone",E,E,1,[[["self"]],["tm"]]],[11,"clone",E,E,2,[[["self"]],[R[578]]]],[11,R[153],E,E,3,[[["self"],[R[580]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,R[153],E,E,0,[[["self"],[R[306]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,0,[[["self"],[R[306]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[306]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[306]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[306]]],["bool"]]],[11,R[153],E,E,5,[[["self"],[R[588]]],[[R[23]],[R[24],[R[23]]]]]],[11,"lt",E,E,5,[[["self"],[R[588]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[588]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[588]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[588]]],["bool"]]],[11,R[153],E,E,1,[[["self"],["tm"]],[[R[24],[R[23]]],[R[23]]]]],[11,"cmp",E,E,3,[[["self"],[R[580]]],[R[23]]]],[11,"cmp",E,E,0,[[["self"],[R[306]]],[R[23]]]],[11,"cmp",E,E,5,[[["self"],[R[588]]],[R[23]]]],[11,"cmp",E,E,1,[[["self"],["tm"]],[R[23]]]],[11,"eq",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[583]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[583]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[306]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[306]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[588]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[588]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[578]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[578]]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"add",E,E,3,[[[R[580]]],[R[580]]]],[11,"add",E,E,0,[[[R[580]]],[R[306]]]],[11,"add",E,E,5,[[[R[580]]],[R[588]]]],[11,"add",E,R[589],1,[[[R[580]]],["tm"]]],[11,"sub",E,E,3,[[[R[580]]],[R[580]]]],[11,"sub",E,E,0,[[[R[580]]],[R[306]]]],[11,"sub",E,E,0,[[[R[306]]],[R[580]]]],[11,"sub",E,E,5,[[[R[588]]],[R[580]]]],[11,"sub",E,E,5,[[[R[580]]],[R[588]]]],[11,"sub",E,R[589],1,[[[R[580]]],["tm"]]],[11,"sub",E,E,1,[[["tm"]],[R[580]]]],[11,"mul",E,E,3,[[["i32"]],[R[580]]]],[11,"div",E,E,3,[[["i32"]],[R[580]]]],[11,"neg",E,E,3,[[],[R[580]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[14]]],[R[2]]]],[11,R[93],E,E,6,[[["self"]],["str"]]],[11,R[93],E,E,2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,R[590]],[3,"Duration"],[3,R[591]],[3,R[592]],[3,R[593]],[3,"TmFmt"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[4],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[4]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);